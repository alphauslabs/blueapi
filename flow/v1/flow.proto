syntax = "proto3";

package blueapi.flow.v1;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/alphauslabs/blueapi/flow";
option java_package = "cloud.alphaus.api.flow";
option java_outer_classname = "FlowProto";

// Flow service definition.
service Flow {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    description: "(ALPHA) Flow API. Base URL: https://api.alphaus.cloud/m/blue/flow"
    external_docs: {
      url: "https://github.com/alphauslabs/blueapi/tree/main/flow/";
      description: "Service definition";
    }
  };
  
  // For Testing Purposes Only.
  rpc GetInfo(GetInfoRequest) returns (GetInfoResponse) {
    option (google.api.http) = {
      get: "/v1/info"
    };
  }

  // Creates a new settings configuration for the user.
  rpc CreateSettings(CreateSettingsRequest) returns (CreateSettingsResponse) {
    option (google.api.http) = {
      post: "/v1/settings"
      body: "*";
    };
  }
}


// Request message for the Flow.GetInfo rpc.
message GetInfoRequest {}

// Request message for the Flow.CreateSettings rpc.
message CreateSettingsRequest {
  // Required. The id of the payer.
  string id = 1;

  // Required. Customization setting for SP.
  string customization = 2;

  // Required. Term of the SP.
  string planTerm = 3;

  // Required. Payment option for the SP.
  string paymentOption = 4;

  // Required. Lookback period for recommendation.
  string lookBackPeriod = 5;

  // Optional. If EC2 Instance SP is selected in Customization, request will include list/s of instance family
  string instanceFamily = 6;

  // Optional. Annual budget input for SP.
  string annualBudget = 7;

  // Monthly budget is automatically generated from the annual budget.
  string monthlyBudget = 8;

  // Optional. Purchase approval from the payer for the SP.
  bool approval = 9;

  // Auto-generated timestamp when the row is created.
  google.protobuf.Timestamp createdAt = 10;
}

// Response message for the Flow.GetInfo rpc.
message GetInfoResponse {
  string response = 1;
}

// Response message for the Flow.CreateSettings rpc.
message CreateSettingsResponse {
  string response = 1;
}