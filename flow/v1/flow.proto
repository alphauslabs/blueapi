syntax = "proto3";

package blueapi.flow.v1;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/alphauslabs/blueapi/flow";
option java_package = "cloud.alphaus.api.flow";
option java_outer_classname = "FlowProto";

// Flow service definition.
service Flow {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    description: "(ALPHA) Flow API. Base URL: https://api.alphaus.cloud/m/blue/flow"
    external_docs: {
      url: "https://github.com/alphauslabs/blueapi/tree/main/flow/";
      description: "Service definition";
    }
  };
  
  // For Testing Purposes Only.
  rpc GetInfo(GetInfoRequest) returns (GetInfoResponse) {
    option (google.api.http) = {
      get: "/v1/info"
    };
  }

  // Creates a new settings configuration for the user.
  rpc CreateSettings(CreateSettingsRequest) returns (CreateSettingsResponse) {
    option (google.api.http) = {
      post: "/v1/settings"
      body: "*";
    };
  }

  // Update the settings configuration for a user.
  rpc UpdateSettings(UpdateSettingsRequest) returns (UpdateSettingsResponse) {
    option (google.api.http) = {
      put: "/v1/settings/{id}"
      body: "*";
    };
  }

  // Fetch previous settings for a user
  rpc GetSettings(GetSettingsRequest) returns (GetSettingsResponse) {
    option (google.api.http) = {
      get: "/v1/settings/{id}"
    };
  }

  // Fetch user savings plan details
  rpc GetRecommendationDetails(GetRecommendationDetailsRequest) returns (GetRecommendationDetailsResponse) {
    option (google.api.http) = {
      get: "/v1/settings/recommendations/{id}"
    };
  }
}

// ##################################### REQUESTS #####################################
// Request message for the Flow.GetInfo rpc.
message GetInfoRequest {}

// Request message for the Flow.CreateSettings rpc.
message CreateSettingsRequest {
  // Required. The id of the payer.
  string id = 1;

  // Required. Account scope determines if the account is payer or linked account. Valid values are `payer` or `linked`.
  string accountScope = 2;

  // Required. Customization setting for SP. Valid values are `COMPUTE_SP` or `EC2_INSTANCE_SP`.
  string customization = 3;

  // Required. Term of the SP. Valid values are `ONE_YEAR` or `THREE_YEARS`.
  string planTerm = 4;

  // Required. Payment option for the SP. Valid values are `ALL_UPFRONT`, `PARTIAL_UPFRONT`, or `NO_UPFRONT`.
  string paymentOption = 5;

  // Required. Lookback period for recommendation. Valid values are `SEVEN_DAYS`, `THIRTY_DAYS`, or `SIXTY_DAYS`.
  string lookBackPeriod = 6;

  // Optional. If EC2 Instance SP is selected in Customization, request will include list of instance family
  string instanceFamily = 7;

  // Optional. Annual budget input for SP.
  double annualBudget = 8;

  // Optional. Purchase approval from the payer for the SP. Default value is `false`.
  bool approval = 9;

  // Required. Payer account ID
  string payerId = 10;
}

// Request message for the Flow.UpdateSettings rpc.
message UpdateSettingsRequest {
  // Required. The id of the payer to update.
  string id = 1;

  // Optional. Update account scope (payer or linked).
  optional string accountScope = 2;

  // Optional. Update customization setting.
  optional string customization = 3;

  // Optional. Update term of the SP.
  optional string planTerm = 4;

  // Optional. Update payment option.
  optional string paymentOption = 5;

  // Optional. Update lookback period.
  optional string lookBackPeriod = 6;

  // Optional. Update list of instance families.
  optional string instanceFamily = 7;

  // Optional. Update annual budget.
  optional double annualBudget = 8;

  // Optional. Update purchase approval.
  optional bool approval = 9;

  // Optional. Update used payerId.
  optional string payerId = 10;
}

// Request message for fetching previous settings configuration of a user.
message GetSettingsRequest {
  // Required. The id of the payer to fetch settings for.
  string id = 1;
}

message GetRecommendationDetailsRequest {
  // Required. The id of the payer to fetch recommendation details for.
  string id = 1;
}

// ##################################### RESPONSES #####################################
// Response message for the Flow.GetInfo rpc.
message GetInfoResponse {
  string response = 1;
}

// Response message for the Flow.CreateSettings rpc.
message CreateSettingsResponse {
  string response = 1;
}

message UpdateSettingsResponse {
  string response = 1;
}

// Response message for fetching previous settings configuration of a user.
message GetSettingsResponse {
  string id = 1;
  string accountScope = 2;
  string customization = 3;
  string planTerm = 4;
  string paymentOption = 5;
  string lookBackPeriod = 6;
  string instanceFamily = 7;
  double annualBudget = 8;
  bool approval = 9;
  string lastUpdated = 10;
  string payerId = 11;
}

message GetRecommendationDetailsResponse {
  // Unique ID of the recommendation details entry
  string id = 1;

  // Suggested hourly commitment to purchase in USD
  double hourlyCommitment = 2;

  // Current Savings Plan commitment applied
  double currentSPCommitment = 3;

  // Estimated daily on-demand cost without any Savings Plans
  double estimatedOnDemandCost = 4;

  // Total current daily cost from usage, before applying any SP recommendation
  double totalDailyCost = 5;

  // Projected monthly savings from the recommended SP
  double estimatedMonthlySavings = 6;

  // Percentage of potential savings from SP
  double estimatedSavings = 7;

  // Customization setting for SP
  string recommendationLevel = 8;

  // Type of Savings Plan
  string planType = 9;

  // SP term duration in years
  string planTerm = 10;

  // Payment option for the SP
  string paymentOption = 11;

  // Historical lookback period used for analysis
  string lookBackPeriod = 12;

  // Estimated Return on Investment for the SP
  double estimatedROI = 13;

  // Total projected SP cost over the term
  double estimatedSPCost = 14;

  // Estimated total cost including SP and on-demand
  double estimatedTotalCost = 15;

  // Timestamp of the last update
  string lastUpdated = 16;
}
