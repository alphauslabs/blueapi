syntax = "proto3";

package blueapi.flow.v1;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/alphauslabs/blueapi/flow";
option java_package = "cloud.alphaus.api.flow";
option java_outer_classname = "FlowProto";

// Flow service definition.
service Flow {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
        description: "(ALPHA) Flow API. Base URL: https://api.alphaus.cloud/m/blue/flow"
        external_docs: {
          url: "https://github.com/alphauslabs/blueapi/tree/main/flow/";
          description: "Service definition";
        }
      };

 // Test endpoint only.
 rpc GetInfo(GetInfoRequest) returns (GetInfoResponse) {
  option (google.api.http) = {
    get: "/v1/info"
  };
}
}


// Request message for the Flow.GetInfo rpc.
message GetInfoRequest {}

// Response message for the Flow.GetInfo rpc.
message GetInfoResponse {
  string response = 1;
}
