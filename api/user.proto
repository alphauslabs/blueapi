syntax = "proto3";

package blueapi.api;

option go_package = "github.com/alphauslabs/blue-sdk-go/api";
option java_package = "cloud.alphaus.blueapi.api";
option java_outer_classname = "ApiUserProto";

message User {
  // User's unique id.
  string id = 1;

  // The user's parent. If empty or non-existent, it means this user is a root user;
  // otherwise, it's a subuser.
  string parent = 2;

  // The attributes (key/value pair) of the user. If hierarchy is supported, it will be
  // separated by '/', such as 'key/subkey=value'. See https://alphauslabs.github.io/blueapi/
  // for the list of supported attributes.
  map<string, string> metadata = 3;
}

message SubUser {
  // Sub-user's unique id.
  string id = 1;

  // The id of the parent user. If this is empty, the sub-user is invalid.
  string parentId = 2;

  // Attributes specific to the sub-user.
  map<string, string> metadata = 3;

  // Role details for the sub-user, if applicable.
  repeated SubUserRole roles = 4;
}

message SubUserRole {
  // Role ID assigned to the sub-user.
  string roleId = 1;

  // Permissions granted to the sub-user for this role.
  repeated string permissions = 2;

  // Temporary: Tracks the sub-user ID to verify the role is assigned to the correct user.
  // This field will be removed after testing is complete.
  string subUserId = 3;
}