syntax = "proto3";

package blueapi.api;

option go_package = "github.com/alphauslabs/blue-sdk-go/api";
option java_package = "cloud.alphaus.blueapi.api";
option java_outer_classname = "ApiUserProto";

message User {
  // User's unique id.
  string id = 1;

  // The user's parent. If empty or non-existent, it means this user is a root user;
  // otherwise, it's a subuser.
  string parent = 2;

  // The attributes (key/value pair) of the user. If hierarchy is supported, it will be
  // separated by '/', such as 'key/subkey=value'. See https://alphauslabs.github.io/blueapi/
  // for the list of supported attributes.
  map<string, string> metadata = 3;
}

// This object describes the features enabled for a particular Wave user and product
message FeatureFlags {

  // The ID of the Wave user
  string id = 1;

  // The product. Acceptable values include "wave" or "aqua"
  string product = 2;

  // A mapping between feature names and whether or not those features are enabled
  // for the user. Omitted flags should be considered false. For a full list of
  // flags, see https://alphauslabs.github.io/blueapi/apis/admin.html.
  map<string, bool> meta = 3;
}