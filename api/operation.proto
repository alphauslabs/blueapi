syntax = "proto3";

package blueapi.api;

import "google/rpc/status.proto";
import "google/protobuf/any.proto";

option go_package = "github.com/alphauslabs/blue-sdk-go/api";
option java_package = "cloud.alphaus.blueapi.api";
option java_outer_classname = "ApiOperationProto";

// This resource represents a long-running operation that is the result of a
// network API call.
message Operation {
  // The server-assigned name.
  string name = 1;

  // Service-specific metadata associated with the operation. It typically
  // contains progress information and common metadata such as create time.
  // Some services might not provide such metadata. Any method that returns a
  // long-running operation should document the metadata type, if any.
  google.protobuf.Any metadata = 2;

  // If the value is `false`, it means the operation is still in progress.
  // If `true`, the operation is completed, and either `error` or `response` is
  // available.
  bool done = 3;

  // The operation result, which can be either an `error` or a valid `response`.
  // If `done` == `false`, neither `error` nor `response` is set.
  // If `done` == `true`, exactly one of `error` or `response` is set.
  oneof result {
    // The error result of the operation in case of failure or cancellation.
    google.rpc.Status error = 4;

    // The normal response of the operation in case of success. If the original method returns
    // no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the
    // original method is standard `Get`/`Create`/`Update`, the response should be the
    // resource. For other methods, the response should have the type `XxxResponse`, where
    // `Xxx` is the original method name. For example, if the original method name is
    // `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
    google.protobuf.Any response = 5;
  }
}

message OperationImportCurMetadataV1 {
  string month = 1;
  repeated string accounts = 2;
  string created = 3;
  string updated = 4;
}

message OperationAwsCalculateCostsMetadataV1 {
  // Organization id.
  string orgId = 1;

  // The month being calculated.
  string month = 2;

  // If the request is for a specific group(s) (billing groups at the moment),
  // their equivalent ids are listed here. Otherwise, empty.
  repeated string groupIds = 3;

  // Latest status information.
  string status = 4;

  // Timestamp when operation was created/started in RFC3339 format.
  string created = 5;

  // Timestamp of the operation's last update in RFC3339 format.
  string updated = 6;
}

message OperationAwsDiscoverAssetsMetadataV1 {
  repeated string accounts = 1;
  repeated string services = 2;
}