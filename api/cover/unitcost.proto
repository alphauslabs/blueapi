syntax = "proto3";

package blueapi.api.cover;

import "api/cover/costgroup.proto";

option go_package = "github.com/alphauslabs/blue-sdk-go/api/cover";
option java_package = "cloud.alphaus.blueapi.api.cover";
option java_outer_classname = "ApiUnitCostProto";

message UnitCostData{
    string id = 1;
    string unitName = 2;
    string description = 3;
    repeated UnitItem unitItems = 4;
    SharedResources sharedResources = 5;
    string createdBy = 6;
    string createTime = 7;
    string lastUpdatedAt = 8;
}

message UnitItem{
    string itemName = 1;
    double distribution = 2;
    ResourcesCombinations dedicatedResourcesCombinations = 3;
}

message SharedResources {
    // Expected values: general-level or resource-level.
    string splittingMethod = 1;

    // Service for now, since we are currently working on service level only. Empty if Splitting method is general-level.
    string service = 2;

    // List the unit items and their corresponding percentages.
    map<string, double> distribution = 3;
}


message ResourcesCombinations {
    // Optional. Valid only for the `aws` vendor. AWS-specific options.
    api.cover.CostGroupAwsOptions awsOptions = 1;
  
    // Optional. Valid only for the `azure` vendor. Azure-specific options.
    api.cover.CostGroupAzureOptions azureOptions = 2;
  
    // Optional. Valid only for the `gcp` vendor. GCP-specific options.
    api.cover.CostGroupGcpOptions gcpOptions = 3;
  
    // Optional. Valid only for the `azurecsp` vendor. AzureCSP-specific options.
    api.cover.CostGroupAzureCspOptions azurecspOptions = 4;
  
  }