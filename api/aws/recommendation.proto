syntax = "proto3";

package blueapi.api.aws;

option go_package = "github.com/alphauslabs/blue-sdk-go/api/aws";
option java_package = "cloud.alphaus.blueapi.api.aws";
option java_outer_classname = "ApiAwsRecommendationProto";

message AwsRecommendations {
    ReservationRecommendationSummary summary = 1;
    repeated RiRecommendation riRecommendations = 2;
    repeated SpRecommendation spRecommendations = 3;
    repeated ReservationEstimatedCoverage estimatedCoverage = 4;
}

message RiRecommendation {
    string accountId = 1;
    string productCode = 2;
    string location = 3;
    string instanceType = 4;
    int64 quantity = 5;
    double normalizedUnit = 6;
    string operatingSystem = 7;
    string preInstalledSW = 8;
    string tenancy = 9;
    double ondemandCost = 10;
    double ondemandrate = 11;
    double riRate = 12;
    double upfrontCost = 13;
    double discountedCost = 14;
    double monthlyAmortizedCost = 15;
    double monthlyRecurringCost = 16;
    double yearlyDiscountedCost = 17;
    double reductionRate = 18;
    double estimatedMonthlySavings = 19;
    double daysBeforeBreakEven = 20;
}

message SpRecommendation {
    string accountId = 1;
    string spProductFamily =2;
    string location = 3;
    string instanceFamily = 4;
    double ondemandCost =5;
    double commitment = 6;
    double normalizedUnit = 7;
    double discountedCost = 8;
    double monthlyDiscountedCost = 9;
    double yearlyDiscountedCost = 10;
    double estimatedMonthlySavings = 11;
    double reductionRate = 12;
    double daysBeforeBreakEven = 13;
}

message ReservationRecommendationSummary {
    double totalMonthlyOnDemandCost = 1;
    double totalEstimatedMonthlySavings = 2;
    double totalMonthlyDiscountedCost = 3;
    double reductionRate = 4;
    double totalUpfrontCost = 5;
    double totalRecurringMonthlyCost = 6;
}

message ReservationEstimatedCoverage {
    string accountId = 1;
    string productCode = 2;
    string instanceFamily = 3;
    double riUsageCoverage = 4;
    double ec2SpUsageCoverage = 5;
    double computeSpOnDemandCost = 6;
    double computeSpDiscountedCost = 7;
}