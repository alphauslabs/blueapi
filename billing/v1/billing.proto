syntax = "proto3";

package blueapi.billing.v1;

import "api/account.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/alphauslabs/blueapi/billing";
option java_package = "cloud.alphaus.api.billing";
option java_outer_classname = "BillingProto";

// Billing service definition.
service Billing {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    description: "(BETA) Billing API. Base URL: https://api.alphaus.cloud/m/blue/billing"
    external_docs: {
      url: "https://github.com/alphauslabs/blueapi/tree/main/billing/";
      description: "Service definition";
    }
  };

  // Lists all billing groups.
  rpc ListBillingGroups(ListBillingGroupsRequest) returns (stream BillingGroup) {
    option (google.api.http) = {
      get: "/v1/billinggroups"
    };
  }

  // Registers a billing group.
  rpc CreateBillingGroup(CreateBillingGroupRequest) returns (BillingGroup) {
    option (google.api.http) = {
      post: "/v1/billinggroups"
      body: "*"
    };
  }

  // Gets a billing group.
  rpc GetBillingGroup(GetBillingGroupRequest) returns (GetBillingGroupResponse) {
    option (google.api.http) = {
      get: "/v1/billinggroups/{billingInternalId}"
    };
  }

  // WORK-IN-PROGRESS: Gets an access group.
  rpc GetAccessGroup(GetAccessGroupRequest) returns (GetAccessGroupResponse) {
    option (google.api.http) = {
      get: "/v1/accessgroups/{accessGroupId}"
    };
  }

  // Reads the calculation history of all accounts in your billing groups. Only available in Ripple.
  rpc ListAwsCalculationHistory(ListAwsCalculationHistoryRequest) returns (stream AwsCalculationHistory) {
    option (google.api.http) = {
      post: "/v1/aws/calchistory:read"
      body: "*"
    };
  }

  // WORK-IN-PROGRESS: Returns the difference, if any, between the usage costs in your invoice and the latest
  // calculated usage costs. Only available in Ripple.
  rpc ListUsageCostsDrift(ListUsageCostsDriftRequest) returns (stream UsageCostsDrift) {
    option (google.api.http) = {
      post: "/v1/{vendor}/usagecostsdrift:read"
      body: "*"
    };
  }
}

message BillingGroup {
  // The billing group's internal id.
  string billingInternalId = 1;

  // The billing group id.
  string billingGroupId = 2;

  // The billing group name.
  string billingGroupName = 3;

  // List of all accounts
  repeated api.Account accounts = 4;

  // The invoice settings for this billing group.
  BillingGroupInvoiceSettings invoiceSettings = 5;
}

// Invoice settings for a billing group.
message BillingGroupInvoiceSettings {
  
  // AWS invoice settings
  BillingGroupVendoredInvoiceSetting aws = 1;

  // Azure invoice settings
  BillingGroupVendoredInvoiceSetting azure = 2;

  // GCP invoice settings
  BillingGroupVendoredInvoiceSetting gcp = 3;
}

// Invoice settings that are vendor-specific for each billing group.
message BillingGroupVendoredInvoiceSetting {
  string calcType = 1;
  double discountRate = 2;
  string substitutionFee = 3;
  double substitutionFix = 4;
  double substitutionRate = 5;
  string supportFee = 6;
  double supportRate = 7;
  double supportFix = 8;
  double taxRate = 9;
  string currency = 10;
  string discountTargetUsage = 11;
  string substitutionFeeTargetUsage = 12;
  string discountCalcLogic = 13;
  string substitutionFeeCalcTarget = 14;
  string substitutionFeeCalcType = 15;
  string supportAmountTarget = 16;
  string supportFeeCalcTarget = 17;
}

// Request message for the Billing.ListBillingGroups rpc.
message ListBillingGroupsRequest {}

// Request message for the Billing.CreateBillingGroup rpc.
message CreateBillingGroupRequest {
   // Required. The billing group's id.
  string billingGroupId = 1;

  // Required. The billing group's name.
  string billingGroupName = 2;

  // Required. Company’s name
  string companyName = 3;

  // Optional. The title of the billing
  string billingTitle = 4;

  // Optional. Company’s phone number
  string phoneNumber = 5;

  // Optional. Company’s postal code
  string postalCode = 6;

  // Optional. Company’s address
  string address = 7;

  // Optional. Addressee
  string personal = 8;

  // Optional. Any remarks about the billing group
  string remarks = 9;

  // Optional. Project code
  string projectId = 10;

  // Optional. Invoice language
  string language = 11;

  // Optional. Calculation type, true unblended or unblended
  string displayCost = 12;

  // Optional. Exchange rate type, payer or billing group
  string exchangeRateType = 13;

  // Invoice settings
  CreateBillingGroupRequestInvoice invoices = 14;
}

// Vendor invoice setttings
message CreateBillingGroupRequestInvoice {
  // AWS invoice settings
  CreateBillingGroupRequestInvoiceVendor aws = 1;

  // Azure invoice settings
  CreateBillingGroupRequestInvoiceVendor azure = 2;

  // GCP invoice settings
  CreateBillingGroupRequestInvoiceVendor gcp = 3;
}

// Specific settings per vendor
message CreateBillingGroupRequestInvoiceVendor {
  string calcType = 1;
  double discountRate = 2;
  string substitutionFee = 3;
  double substitutionFix = 4;
  double substitutionRate = 5;
  string supportFee = 6;
  double supportRate = 7;
  double supportFix = 8;
  double taxRate = 9;
  string currency = 10;
  string discountTargetUsage = 11;
  string substitutionFeeTargetUsage = 12;
  string discountCalcLogic = 13;
  string substitutionFeeCalcTarget = 14;
  string substitutionFeeCalcType = 15;
  string supportAmountTarget = 16;
  string supportFeeCalcTarget = 17;
}

// Request message for the Billing.GetBillingGroup rpc.
message GetBillingGroupRequest {
  string billingInternalId = 1; 
}

// Response message for the Billing.GetBillingGroup rpc.
message GetBillingGroupResponse {
  BillingGroup billingGroup = 1; 
}

// Defines the fields associated with a Wave access group.
message AccessGroup {

  // The ID of the access group.
  string accessGroupId = 1;

  // The name of the access group.
  string accessGroupName = 2;

  // A description of the access group.
  string accessGroupDescription = 3;

  // A list of billing groups contained in the access group.
  repeated BillingGroup billingGroups = 4;
}

// Request message for the Billing.GetAccessGroup rpc.
message GetAccessGroupRequest {
  string accessGroupId = 1;
}

// Response message for the Billing.GetAccessGroup rpc.
message GetAccessGroupResponse {
  AccessGroup accessGroup = 1;
}

// Streaming response message for the Billing.ListAwsCalculationHistory rpc.
message AwsCalculationHistory {
  string billingInternalId = 1;
  string billingGroupId = 2;
  string month = 3;

  message Account {
    string accountId = 1;

    message History {
      // Calculation timestamp in UTC, RFC3339.
      string timestamp = 1;

      // Calculation trigger. Either `invoice` or `cur`.
      string trigger = 2;
    }

    repeated History history = 2;
  }

  repeated Account accounts = 4;
}

// Request message for the Billing.ListAwsCalculationHistory rpc.
message ListAwsCalculationHistoryRequest {
  // Optional. If empty, defaults to current UTC month. Format: yyyymm.
  string month = 1;
}

// Request message for the Billing.ListUsageCostsDrift rpc.
message ListUsageCostsDriftRequest {
  // Required. At the moment, only `aws` is supported.
  string vendor = 1;

  // Optional. If empty, returns all billing groups.
  string billingInternalId = 2;

  // Optional. If empty, defaults to current UTC month. Format: yyyymm.
  string month = 3;
}

// Streaming response message for the Billing.ListUsageCostsDrift rpc.
message UsageCostsDrift {
  string billingInternalId = 1;
  string billingGroupId = 2;

  // The total costs saved in your invoice.
  double snapshot = 3;

  // The current total costs.
  double current = 4;
}