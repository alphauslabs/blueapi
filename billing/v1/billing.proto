syntax = "proto3";

package blueapi.billing.v1;

import "api/account.proto";
import "api/invoice.proto";
import "api/costtag.proto";
import "api/ripple/accessgroup.proto";
import "api/ripple/billinggroup.proto";
import "api/ripple/reseller.proto";
import "api/ripple/yearmonth.proto";
import "api/ripple/rounding.proto";
import "api/ripple/invoicelayout.proto";
import "api/ripple/duedate.proto";
import "api/ripple/exchangerate.proto";
import "api/ripple/untaggedgroup.proto";
import "api/ripple/customizedbillingservice.proto";
import "api/ripple/v1/invoiceservicediscounts.proto";
import "api/adjustment.proto";
import "api/wave/adjustment.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/empty.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "google/protobuf/field_mask.proto";

option go_package = "github.com/alphauslabs/blueapi/billing";
option java_package = "cloud.alphaus.api.billing";
option java_outer_classname = "BillingProto";

// Billing service definition.
service Billing {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    description: "(BETA) Billing API. Base URL: https://api.alphaus.cloud/m/blue/billing"
    external_docs: {
      url: "https://github.com/alphauslabs/blueapi/tree/main/billing/";
      description: "Service definition";
    }
  };

  // Lists all billing groups.
  rpc ListBillingGroups(ListBillingGroupsRequest) returns (stream BillingGroup) {
    option (google.api.http) = {
      get: "/v1/billinggroups"
    };
  }

  // Registers a billing group.
  rpc CreateBillingGroup(CreateBillingGroupRequest) returns (BillingGroup) {
    option (google.api.http) = {
      post: "/v1/billinggroups"
      body: "*"
    };
  }

  // Gets a billing group.
  rpc GetBillingGroup(GetBillingGroupRequest) returns (GetBillingGroupResponse) {
    option (google.api.http) = {
      get: "/v1/billinggroups/{billingInternalId}"
    };
  }

  // WORK-IN-PROGRESS: Gets an access group.
  rpc GetAccessGroup(GetAccessGroupRequest) returns (GetAccessGroupResponse) {
    option (google.api.http) = {
      get: "/v1/accessgroups/{accessGroupId}"
    };
  }

  // Reads the daily calculation history of all accounts in your billing groups. Only available in Ripple.
  rpc ListAwsDailyRunHistory(ListAwsDailyRunHistoryRequest) returns (stream AwsDailyRunHistory) {
    option (google.api.http) = {
      post: "/v1/aws/dailyrunhistory:read"
      body: "*"
    };
  }

  // Returns a list of accounts that have been updated after invoice along with the differences in costs, if any. Only available in Ripple.
  rpc ListUsageCostsDrift(ListUsageCostsDriftRequest) returns (stream UsageCostsDrift) {
    option (google.api.http) = {
      post: "/v1/{vendor}/usagecostsdrift:read"
      body: "*"
    };
  }
  
  // Creates an invoice. Only available in Ripple.
  rpc CreateInvoice(CreateInvoiceRequest) returns (api.InvoiceMessage) {
    option (google.api.http) = {
      post: "/v1/invoice/{date}:create"
      body: "*"
    };
  }

  // Gets an invoice. Only available in Ripple.
  rpc GetInvoiceStatus(GetInvoiceStatusRequest) returns (api.InvoiceMessage) {
    option (google.api.http) = {
      get: "/v1/invoice/status/{id}"
    };
  }

  // WORK-IN-PROGRESS: Reads an invoice status. Only available in Ripple.
  rpc ListInvoiceStatus(ListInvoiceStatusRequest) returns (stream api.InvoiceMessage) {
    option (google.api.http) = {
      post: "/v1/invoice/status/{date}:read"
      body: "*"
    };
  }

  // Gets an invoice.
  rpc GetInvoice(GetInvoiceRequest) returns (api.Invoice) {
    option (google.api.http) = {
      post: "/v1/invoice/{date}:read"
      body: "*"
    };
  }

  // WORK-IN-PROGRESS: Reads list of the invoice.
  rpc ListInvoice(ListInvoiceRequest) returns (stream ListInvoiceResponse) {
    option (google.api.http) = {
      post: "/v1/invoice:read"
      body: "*"
    };
  }

  // Updates an invoice preview. Only available in Ripple.
  rpc UpdateInvoicePreviews(UpdateInvoicePreviewsRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/v1/invoice/{date}:preview"
      body: "*"
    };
  }

  // Exports an invoice.
  rpc ExportInvoiceFile(ExportInvoiceFileRequest) returns (ExportInvoiceFileResponse) {
    option (google.api.http) = {
      post: "/v1/invoice/{date}:export"
      body: "*"
    };
  }

    // Lists Invoice Template. Only available in Ripple.
    rpc ListInvoiceTemplate(ListInvoiceTemplateRequest) returns (stream ListInvoiceTemplateResponse) {
    option (google.api.http) = {
      get: "/v1/invoice/template"
    };
  }

  // Creates/Updates a billing group's invoice template. Only available in Ripple.
  rpc UpdateBillingGroupInvoiceTemplate(UpdateBillingGroupInvoiceTemplateRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/billinggroups/{id}/invoicetemplate"
      body: "*"
    };
  }

  // WORK-IN-PROGRESS: Reads the service relate to the service discounts. Only available in Ripple.
  rpc ReadServiceDiscountsServices(ReadServiceDiscountsServicesRequest) returns (stream api.ripple.v1.Service) {
    option (google.api.http) = {
      post: "/v1/servicediscounts/{vendor}/services:read"
      body: "*"
    };
  }

  // WORK-IN-PROGRESS: Creates the invoice service discounts. Only available in Ripple.
  rpc CreateInvoiceServiceDiscounts(CreateInvoiceServiceDiscountsRequest) returns (api.ripple.v1.InvoiceServiceDiscounts) {
    option (google.api.http) = {
      post: "/v1/servicediscounts"
      body: "*"
    };
  }

  // WORK-IN-PROGRESS: Updates the invoice service discounts. Only available in Ripple.
  rpc UpdateInvoiceServiceDiscounts(UpdateInvoiceServiceDiscountsRequest) returns (api.ripple.v1.InvoiceServiceDiscounts) {
    option (google.api.http) = {
      put: "/v1/servicediscounts/{id}"
      body: "*"
    };
  }

  // WORK-IN-PROGRESS: Deletes the invoice service discounts. Only available in Ripple.
  rpc DeleteInvoiceServiceDiscounts(DeleteInvoiceServiceDiscountsRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/servicediscounts/{id}"
    };
  }

  // Reads the invoice service discounts. Only available in Ripple.
  rpc ListInvoiceServiceDiscounts(ListInvoiceServiceDiscountsRequest) returns (stream InvoiceServiceDiscounts) {
    option (google.api.http) = {
      post: "/v1/servicediscounts:read"
      body: "*"
    };
  }

  // WORK-IN-PROGRESS: Gets the invoice service discounts. Only available in Ripple.
  rpc GetInvoiceServiceDiscounts(GetInvoiceServiceDiscountsRequest) returns (api.ripple.v1.InvoiceServiceDiscounts) {
    option (google.api.http) = {
      get: "/v1/servicediscounts/{id}"
    };
  }

  // WORK-IN-PROGRESS: Exports service discounts. Only available in Ripple.
  rpc ExportServiceDiscounts(ExportServiceDiscountsRequest) returns (api.ripple.v1.ServiceDiscountsExport) {
    option (google.api.http) = {
      post: "/v1/servicediscounts:export"
      body: "*"
    };
  }

  // Reads the account invoice service discounts. Only available in Ripple.
  rpc ListAccountInvoiceServiceDiscounts(ListAccountInvoiceServiceDiscountsRequest) returns (stream AccountInvoiceServiceDiscounts) {
    option (google.api.http) = {
      post: "/v1/servicediscounts/{groupId}/account:read"
      body: "*"
    };
  }

  // Registers the account invoice service discounts. Only available in Ripple.
  rpc CreateAccountInvoiceServiceDiscounts(CreateAccountInvoiceServiceDiscountsRequest) returns (CreateAccountInvoiceServiceDiscountsResponse) {
    option (google.api.http) = {
      post: "/v1/servicediscounts/{groupId}/account"
      body: "*"
    };
  }

  // Updates the account invoice service discounts. Only available in Ripple.
  rpc UpdateAccountInvoiceServiceDiscounts(UpdateAccountInvoiceServiceDiscountsRequest) returns (UpdateAccountInvoiceServiceDiscountsResponse) {
    option (google.api.http) = {
      put: "/v1/servicediscounts/{groupId}/account"
      body: "*"
    };
  }

  // Removes the account invoice service discounts. Only available in Ripple.
  rpc RemoveAccountInvoiceServiceDiscounts(RemoveAccountInvoiceServiceDiscountsRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/v1/servicediscounts/{groupId}/account:remove"
      body: "*"
    };
  }

  // Deletes the account invoice service discounts. Only available in Ripple.
  rpc DeleteAccountInvoiceServiceDiscounts(DeleteAccountInvoiceServiceDiscountsRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/servicediscounts/{groupId}/account"
    };
  }

  // Exports service discounts for account in billing group. Only available in Ripple.
  rpc ExportAccountInvoiceServiceDiscounts(ExportAccountInvoiceServiceDiscountsRequest) returns (api.ripple.v1.AccountServiceDiscountsExport) {
    option (google.api.http) = {
      post: "/v1/servicediscounts/account:export"
      body: "*"
    };
  }

  // Exports service discounts for billing group. Only available in Ripple.
  rpc ExportBillingGroupInvoiceServiceDiscounts(ExportBillingGroupInvoiceServiceDiscountsRequest) returns (api.ripple.v1.GroupServiceDiscountsExport) {
    option (google.api.http) = {
      post: "/v1/servicediscounts/billinggroup:export"
      body: "*"
    };
  }

 // Returns the service discount associated with the billing group id
 rpc GetBillingGroupInvoiceServiceDiscounts(GetBillingGroupInvoiceServiceDiscountsRequest) returns (GetBillingGroupInvoiceServiceDiscountsResponse) {
    option (google.api.http) = {
      get: "/v1/servicediscounts/{groupId}/billinggroup"
    };
  }

  // Registers the reseller account. Only available in Ripple.
  rpc CreateReseller(CreateResellerRequest) returns (api.ripple.Reseller) {
    option (google.api.http) = {
      post: "/v1/resellers"
      body: "*"
    };
  }

  // ListResellers
  //
  // **Lists all the reseller accounts.**
  // > **Only available in Ripple.**
  rpc ListResellers(ListResellersRequest) returns (stream api.ripple.Reseller) {
    option (google.api.http) = {
      get: "/v1/resellers"
    };
  }

  // Gets the reseller account. Only available in Ripple.
  rpc GetReseller(GetResellerRequest) returns (api.ripple.Reseller) {
    option (google.api.http) = {
      get: "/v1/resellers/{id}"
    };
  }

  // Updates the reseller account. Only available in Ripple.
  rpc UpdateReseller(UpdateResellerRequest) returns (api.ripple.Reseller) {
    option (google.api.http) = {
      put: "/v1/resellers/{id}"
      body: "*"
    };
  }

  // Deletes the reseller account. Only available in Ripple.
  rpc DeleteReseller(DeleteResellerRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/resellers/{id}"
    };
  }

  // WORK-IN-PROGRESS: Gets all billing settings.
  rpc GetBillingSetting(GetBillingSettingRequest) returns (GetBillingSettingResponse) {
    option (google.api.http) = {
      get: "/v1/settings"
    };
  }

  // ListExchangeRates
  // 
  // Lists all exchange rate.
  // > Only available in Ripple.
  rpc ListExchangeRates(ListExchangeRatesRequest) returns (ListExchangeRatesResponse) {
    option (google.api.http) = {
      get: "/v1/{vendor}/exchangerate/{month}"
    };
  }

  // Lists access group. Only available in Ripple.
  rpc ListAccessGroups(ListAccessGroupsRequest) returns (stream api.ripple.AccessGroup) {
    option (google.api.http) = {
      get: "/v1/accessgroups"
    };
  }

  // Registers the access group. Only available in Ripple.
  rpc CreateAccessGroup(CreateAccessGroupRequest) returns (api.ripple.AccessGroup) {
    option (google.api.http) = {
      post: "/v1/accessgroups"
      body: "*"
    };
  }

  // Updates the access group. Only available in Ripple.
  rpc UpdateAccessGroup(UpdateAccessGroupRequest) returns (api.ripple.AccessGroup) {
    option (google.api.http) = {
      put: "/v1/accessgroups/{id}"
      body: "*"
    };
  }

  // Deletes the access group. Only available in Ripple.
  rpc DeleteAccessGroup(DeleteAccessGroupRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/accessgroups/{id}"
    };
  }

  // WORK-IN-PROGRESS: Gets all Billing Groups in AWS Billing Conductor(ABC) for specific payer id.
  rpc ListAbcBillingGroups(ListAbcBillingGroupsRequest) returns (stream AbcBillingGroup) {
    option (google.api.http) = {
      get: "/v1/billinggroups/billingconductor/{id}"
    };
  }

  // WORK-IN-PROGRESS: Gets all accounts associated to AWS Billing Conductor(ABC) Billing group
  rpc ListAbcBillingGroupAccounts(ListAbcBillingGroupAccountsRequest) returns (stream AbcAccount){
    option (google.api.http) = {
      get: "/v1/billinggroups/billingconductor/{payerId}/accounts"
    };
  }

  // Reads the adjustment details involved in invoicing of an organization billing group (Wave).
  rpc ReadInvoiceAdjustments(ReadInvoiceAdjustmentsRequest) returns (stream api.wave.Adjustment) {
    option (google.api.http) = {
      post: "/v1/{vendor}/invoiceadjustments:read"
      body: "*"
    };
  }

  // WORK-IN-PROGRESS: Returns all registered accounts that are not associated to any billing groups and accounts found in CUR for the specified month. For Ripple only
  rpc ListAccountResources(ListAccountResourcesRequest) returns (stream ResourceAccount) {
    option (google.api.http) = {
      get: "/v1/resources/accounts/{vendor}"
    };
  }

  // WORK-IN-PROGRESS: Gets adjustment config
  rpc GetAdjustmentConfig(GetAdjustmentConfigRequest) returns (api.AdjustmentConfig) {
    option (google.api.http) = {
      get: "/v1/adjustmentconfig/{vendor}"
    };
  }

  // WORK-IN-PROGRESS: Creates adjustment config
  //
  //[ERRORS] 
  //- InvalidArgument:
  //  - the AdjustmentConfig is already exists.
  //- NotFound:
  //  - the AdjustmentConfig is not found.
  rpc CreateAdjustmentConfig(CreateAdjustmentConfigRequest) returns (api.AdjustmentConfig) {
    option (google.api.http) = {
      post: "/v1/adjustmentconfig/{vendor}"
      body: "*"
    };
  }

  // WORK-IN-PROGRESS: Updates adjustment config
  rpc UpdateAdjustmentConfig(UpdateAdjustmentConfigRequest) returns (api.AdjustmentConfig) {
    option (google.api.http) = {
      put: "/v1/adjustmentconfig/{vendor}"
      body: "*"
    };
  }

  // WORK-IN-PROGRESS: Deletes adjustment config
  rpc DeleteAdjustmentConfig(DeleteAdjustmentConfigRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/adjustmentconfig/{vendor}"
    };
  }

  // WORK-IN-PROGRESS: Reads the untagged group. Only available in Ripple.
  rpc ReadUntaggedGroups(ReadUntaggedGroupsRequest) returns (stream api.ripple.UntaggedGroup) {
    option (google.api.http) = {
      post: "/v1/{vendor}/untaggedgroups:read"
      body: "*"
    };
  }

  // Reads the customized billing service. Only available in Ripple.
  rpc ReadCustomizedBillingServices(ReadCustomizedBillingServicesRequest) returns (stream api.ripple.CustomizedBillingService) {
    option (google.api.http) = {
      post: "/v1/customizedbillingservices:read"
      body: "*"
    };
  }

  // Gets the customized billing service. Only available in Ripple.
  rpc GetCustomizedBillingService(GetCustomizedBillingServiceRequest) returns (api.ripple.CustomizedBillingService) {
    option (google.api.http) = {
      get: "/v1/customizedbillingservices/{id}"
    };
  }

  // Creates the customized billing service. Only available in Ripple.
  rpc CreateCustomizedBillingService(CreateCustomizedBillingServiceRequest) returns (api.ripple.CustomizedBillingService) {
    option (google.api.http) = {
      post: "/v1/customizedbillingservices"
      body: "*"
    };
  }

  // Updates the customized billing service by updating the fields specified in the update mask. Only available in Ripple.
  rpc UpdateCustomizedBillingService(UpdateCustomizedBillingServiceRequest) returns (api.ripple.CustomizedBillingService) {
    option (google.api.http) = {
      put: "/v1/customizedbillingservices/{id}"
      body: "*"
    };
  }

  // Deletes the customized billing service. Only available in Ripple.
  rpc DeleteCustomizedBillingService(DeleteCustomizedBillingServiceRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/customizedbillingservices/{id}"
    };
  }

  // Gets the customized billing service in billing group. Only available in Ripple.
  rpc GetCustomizedBillingServiceBillingGroup(GetCustomizedBillingServiceBillingGroupRequest) returns (stream GetCustomizedBillingServiceBillingGroupResponse) {
    option (google.api.http) = {
      get: "/v1/customizedbillingservices/billinggroup/{groupId}/{vendor}"
    };
  }

  // Sets the customized billing service in billing group. Only available in Ripple.
  rpc SetCustomizedBillingServiceBillingGroup(SetCustomizedBillingServiceBillingGroupRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/customizedbillingservices/billinggroup/{groupId}/{vendor}"
      body: "*"
    };
  }

  // Deletes the customized billing service in billing group. Only available in Ripple.
  rpc DeleteCustomizedBillingServiceBillingGroup(DeleteCustomizedBillingServiceBillingGroupRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/customizedbillingservices/billinggroup/{groupId}/{vendor}"
    };
  }

  // Returns the customer details and its tags. 
  // Port for: m/ripple/tags/vendor/{vendor}?type={type}
  rpc GetTags(GetTagsRequest) returns (stream TagData) {
    option (google.api.http) = {
      get: "/v1/tags"
    };
  }

  // Creates new customfield
  rpc CreateCustomField(CreateCustomFieldRequest) returns (CustomField) {
    option (google.api.http) = {
      post: "/v1/customfield"
      body: "*"
    };
  }

  // Returns all registered customfields
  rpc ListCustomField(ListCustomFieldRequest) returns (stream CustomField) {
    option (google.api.http) = {
      post: "/v1/customfield:read"
      body: "*"
    };
  }


  // Add  a custom field into a billing group
  rpc AddBillingGroupCustomField(AddBillingGroupCustomFieldRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/billinggroup/customfield"
      body: "*"
    };
  }

  // Show all the billing groups custom fields
  rpc ListBillingGroupCustomField(ListBillingGroupCustomFieldRequest) returns (stream ListBillingGroupCustomFieldResponse) {
    option (google.api.http) = {
      post: "/v1/billinggroup/customfield:read"
      body: "*"
    };
  }

  // Remove a custom field from a billing group
  rpc DeleteBillingGroupCustomField(DeleteBillingGroupCustomFieldRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/billinggroup/customfield/{groupId}/{customFieldId}"
    };
  }

  // Update the `customField` specified id, modifying its key and description
  rpc UpdateCustomField(UpdateCustomFieldRequest) returns (CustomField) {
    option (google.api.http) = {
      put: "/v1/customfield/{id}"
      body: "*"
    };
  }

  // Deletes the customfield
  rpc DeleteCustomField(DeleteCustomFieldRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/customfield/{id}"
    };
  }

  // Creates new billing group free format item (miscellaneous)
  rpc CreateFreeFormat(CreateFreeFormatRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/freeformat"
    };
  }

  // Delete billing group free format item (miscellaneous)
  rpc DeleteFreeFormat(DeleteFreeFormatRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/freeformat/{groupId}"
    };
  }

  // Get billing group free format item (miscellaneous)
  rpc GetFreeFormat(GetFreeFormatRequest) returns (stream GetFreeFormatResponse) {
    option (google.api.http) = {
      get: "/v1/freeformat/{groupId}"
    };
  }

  rpc GetTagsAddingSetting(GetTagsAddingSettingRequest) returns (stream TagsAddingSetting) {
    option (google.api.http) = {
      get: "/v1/{vendor}/tagsaddingsetting/{groupId}"
    };
  }

  rpc UpdateTagsAddingSetting(UpdateTagsAddingSettingRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/v1/{vendor}/tagsaddingsetting/{groupId}"
      body: "*"
    };
  }

  // Export the billing groups into csv format
  rpc ExportBillingGroupCsv(ExportBillingGroupCsvRequest) returns (stream ExportBillingGroupCsvResponse) {
    option (google.api.http) = {
      get: "/v1/exportcsv/billing-group"
    };
  }

  // Exports the invoice settings into csv format
  rpc ExportInvoiceSettingCsv(ExportInvoiceSettingCsvRequest) returns (stream FileChunk) {
    option (google.api.http) = {
      get: "/v1/exportcsv/invoice-setting"
    };
  }

}

message BillingGroup {
  // The billing group's internal id.
  string billingInternalId = 1;

  // The billing group id.
  string billingGroupId = 2;

  // The billing group name.
  string billingGroupName = 3;

  // The company’s name.
  string companyName = 7;

  // For aws only: `default` or `imported`
  string type = 12;

  // The billing group info
  api.ripple.BillingGroupInfo billingGroupInfo = 10;

  // The account options.
  AccountOptions accountOptions = 8;

  // List of all accounts
  repeated api.Account accounts = 4;

  // List of all tags
  repeated api.CostTag tags = 6;

  // The invoice settings for this billing group.
  BillingGroupInvoiceSettings invoiceSettings = 5;

  // List of all additionalItems
  BillingGroupAdditionalItems additionalItems = 11;

  // AWS-specific options
  AwsOptions awsOptions = 9;
}

// Additional items for a billing group.
message BillingGroupAdditionalItems {
  // AWS additional items
  repeated api.AdditionalItems aws = 1;

  // Azure additional items
  repeated api.AdditionalItems azure = 2;

  // GCP additional items
  repeated api.AdditionalItems gcp = 3;
}

// Invoice settings for a billing group.
message BillingGroupInvoiceSettings {
  
  // AWS invoice settings
  BillingGroupVendoredInvoiceSetting aws = 1;

  // Azure invoice settings
  BillingGroupVendoredInvoiceSetting azure = 2;

  // GCP invoice settings
  BillingGroupVendoredInvoiceSetting gcp = 3;
}

// Invoice settings that are vendor-specific for each billing group.
message BillingGroupVendoredInvoiceSetting {
  string calcType = 1;
  double discountRate = 2;
  string substitutionFee = 3;
  double substitutionFix = 4;
  double substitutionRate = 5;
  string supportFee = 6;
  double supportRate = 7;
  double supportFix = 8;
  double taxRate = 9;
  string currency = 10;
  string discountTargetUsage = 11;
  string substitutionFeeTargetUsage = 12;
  string discountCalcLogic = 13;
  string substitutionFeeCalcTarget = 14;
  string substitutionFeeCalcType = 15;
  string supportAmountTarget = 16;
  string supportFeeCalcTarget = 17;
}

// Request message for the Billing.ListBillingGroups rpc.
message ListBillingGroupsRequest {
  // Optional. Get only the value that set fieldMask.
  //
  // see more info: https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/field_mask.proto
  google.protobuf.FieldMask field_mask = 1;

  // Optional. Filter vendor accounts included in BillingGroup. Format: vendors=vendor1,vendor2,vendor3.
  // For example, When Aws and Gcp to be filtered vendors=aws,gcp
  // If you want to get all vendors, not set parameter.
  string vendors = 2;

  // Optional. Filter by calcType. Format: calType=account
  // Valid values: account, tag
  string calcType = 3;

  // Optional. Filter by displayCost. Format: displayCost=unblended_cost
  // valid values: unblended_cost, true_unblended_cost
  string displayCost = 4;
    
  // Optional. For aws only, filter will be ignored for other vendors.
  // Valid values: default, imported
  string bgType = 5;
}

// Request message for the Billing.CreateBillingGroup rpc.
message CreateBillingGroupRequest {
   // Required. The billing group's id.
  string billingGroupId = 1;

  // Required. The billing group's name.
  string billingGroupName = 2;

  // Required. Company’s name
  string companyName = 3;

  // Optional. The title of the billing
  string billingTitle = 4;

  // Optional. Company’s phone number
  string phoneNumber = 5;

  // Optional. Company’s postal code
  string postalCode = 6;

  // Optional. Company’s address
  string address = 7;

  // Optional. Addressee
  string personal = 8;

  // Optional. Any remarks about the billing group
  string remarks = 9;

  // Optional. Project code
  string projectId = 10;

  // Optional. Invoice language
  string language = 11;

  // Optional. Calculation type, true unblended or unblended
  string displayCost = 12;

  // Optional. Exchange rate type, payer or billing group
  string exchangeRateType = 13;

  // Optional. Account options.
  AccountOptions accountOptions = 15;

  // Invoice settings
  CreateBillingGroupRequestInvoice invoices = 14;

  // Optional. AWS-specific options
  AwsOptions awsOptions = 16;

  // Optional. Company's city
  string city = 17;

  // Optional. Company's prefecture
  string prefecture = 18;

  // Optional. Company's country
  string country = 19;
}

message AwsOptions {
  bool useProFormaCur = 1;

  // Must not be empty if useProFormaCur is true.
  string payerId = 2;
}

// Account options definition.
message AccountOptions {
  // AWS register accounts
  RegisterAccounts aws = 1;
  // GCP register accounts
  RegisterAccounts gcp = 2;
  // Azure register accounts
  RegisterAccounts azure = 3;
}

// Register Accounts definition
message RegisterAccounts {
  // Optional.
  // If enabled, any additional accounts will be automatically enrolled into the billing group.
  // If disabled, register the account manually.
  // 
  // For GCP, Register projectId under the specific Sub billing account.
  // For AWS, Register accountId under the specific payer account into the billing group
  bool enabled = 1;

  // Optional. AccountId to be used for registration into the billing group.
  string accountId = 2;
}

// Vendor invoice setttings
message CreateBillingGroupRequestInvoice {
  // AWS invoice settings
  CreateBillingGroupRequestInvoiceVendor aws = 1;

  // Azure invoice settings
  CreateBillingGroupRequestInvoiceVendor azure = 2;

  // GCP invoice settings
  CreateBillingGroupRequestInvoiceVendor gcp = 3;
}

// Specific settings per vendor
message CreateBillingGroupRequestInvoiceVendor {
  string calcType = 1;
  double discountRate = 2;
  string substitutionFee = 3;
  double substitutionFix = 4;
  double substitutionRate = 5;
  string supportFee = 6;
  double supportRate = 7;
  double supportFix = 8;
  double taxRate = 9;
  string currency = 10;
  string discountTargetUsage = 11;
  string substitutionFeeTargetUsage = 12;
  string discountCalcLogic = 13;
  string substitutionFeeCalcTarget = 14;
  string substitutionFeeCalcType = 15;
  string supportAmountTarget = 16;
  string supportFeeCalcTarget = 17;
}

// Request message for the Billing.GetBillingGroup rpc.
message GetBillingGroupRequest {
  string billingInternalId = 1; 

  // Optional. Get only the value that set fieldMask.
  //
  // see more info: https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/field_mask.proto
  google.protobuf.FieldMask field_mask = 2;
}

// Response message for the Billing.GetBillingGroup rpc.
message GetBillingGroupResponse {
  BillingGroup billingGroup = 1; 
}

// Defines the fields associated with a Wave access group.
message AccessGroup {

  // The ID of the access group.
  string accessGroupId = 1;

  // The name of the access group.
  string accessGroupName = 2;

  // A description of the access group.
  string accessGroupDescription = 3;

  // A list of billing groups contained in the access group.
  repeated BillingGroup billingGroups = 4;
}

// Request message for the Billing.GetAccessGroup rpc.
message GetAccessGroupRequest {
  string accessGroupId = 1;

  // Optional. Get only the value that set fieldMask.
  //
  // see more info: https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/field_mask.proto
  google.protobuf.FieldMask field_mask = 2;
}

// Response message for the Billing.GetAccessGroup rpc.
message GetAccessGroupResponse {
  AccessGroup accessGroup = 1;
}

// Streaming response message for the Billing.ListAwsDailyRunHistory rpc.
message AwsDailyRunHistory {
  string billingInternalId = 1;
  string billingGroupId = 2;
  string month = 3;

  message Account {
    string accountId = 1;

    message History {
      // Calculation timestamp in UTC, RFC3339.
      string timestamp = 1;

      // Calculation trigger. Either `invoice` or `cur`.
      string trigger = 2;
    }

    repeated History history = 2;
  }

  repeated Account accounts = 4;
}

// Request message for the Billing.ListAwsCalculationHistory rpc.
message ListAwsDailyRunHistoryRequest {
  // Optional. If empty, defaults to current UTC month. Format: yyyymm.
  string month = 1;

  // Optional. If not empty, query for this group. At the moment, only `billingInternalId`s are supported.
  string groupId = 2;
}

// Request message for the Billing.ListUsageCostsDrift rpc.
message ListUsageCostsDriftRequest {
  // Required. At the moment, only `aws` is supported.
  string vendor = 1;

  // Optional. If empty, returns all billing groups.
  string billingInternalId = 2;

  // Optional. If empty, defaults to current UTC month. Format: yyyymm.
  string month = 3;
}

// Streaming response message for the Billing.ListUsageCostsDrift rpc.
message UsageCostsDrift {
  string billingInternalId = 1;
  string billingGroupId = 2;
  string account = 3;

  // The total costs saved in your invoice.
  double snapshot = 4;

  // The current total costs.
  double current = 5;

  double diff = 6;
}

// Request message for the Cost.GetInvoiceRequest rpc.
message GetInvoiceRequest {
  // Required. Month to get invoice. Format: `yyyymm`.
  string date = 1;

  // Required.
  //
  // For Ripple, only billing internal ids are supported at the moment. You can set it to a single group
  //
  // Implied as the parent billing group for Wave(Pro) users.
  string groupId = 2;
}

// Request message for the ExportCostFiltersFile rpc.
message ExportInvoiceFileRequest {
  // Required. Month to get invoice. Format: `yyyymm`.
  string date = 1;

  // Optional.
  //
  // For Ripple, only billing internal ids are supported at the moment. You can set it to a single group or a comma-separated list of groups. ex) `group1,group2`. if want to set all group, set `*`. 
  //
  // Implied as the parent billing group for Wave(Pro) users.
  string groupId = 2;
}

// Response message for the ExportInvoiceFile rpc.
message ExportInvoiceFileResponse {
  // Required. URL of exported file.
  //
  // csv columns set `group vendor resourceId resourceName type serviceName currency cost`
  string url = 1;
}


// Request message for the ReadServiceDiscountsServices rpc.
message ReadServiceDiscountsServicesRequest {
  // Required. At the moment, only `aws`,`azure`,`gcp` is supported.
  string vendor = 1;
}

// Request message for the ListInvoiceServiceDiscounts rpc.
message ListInvoiceServiceDiscountsRequest {}

// Request message for the GetInvoiceServiceDiscounts rpc.
message GetInvoiceServiceDiscountsRequest {
  // Required. [blueapi.api.ripple.v1.InvoiceServiceDiscounts.id].
  string id = 1;

  // Optional. Get only the value that set fieldMask.
  //
  // see more info: https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/field_mask.proto
  google.protobuf.FieldMask fieldMask = 2;
}

// Streaming response message for the InvoiceServiceDiscounts rpc.
message InvoiceServiceDiscounts {
  // Service discount id.
  string id = 1;

  // Service discount name.
  string name = 2;

  // Service discount description.
  string description = 3;

  // create timestamp.
  string created = 4;

  // update timestamp.
  string updated = 5;
}
// Request message for ListInvoiceTemplate rpc.
message ListInvoiceTemplateRequest {}

// Request a message to update/create a billing group's invoice template
message UpdateBillingGroupInvoiceTemplateRequest {
  // Required. The billing internal ID
  string id = 1 [(google.api.field_behavior) = REQUIRED];
  
  // Required. The invoice template ID to associate with the billing group
  string invoiceTemplateId = 2 [(google.api.field_behavior) = REQUIRED];
}

// Response message for ListInvoiceTemplate rpc.
message ListInvoiceTemplateResponse {

  string id = 1;

  string name = 2;

  string description = 3;

  string created = 4;

  string updated = 5;

  int32 numberOfConnected = 6;

  repeated InvoiceConnectedBillingGroups connectedBillingGroup = 7;
  
  BillingGroupInvoiceSettings invoices = 8;
  
}

// Response message to be used for ListInvoiceTemplateResponse
message InvoiceConnectedBillingGroups {
  string billingInternalId = 1;

  string billingGroupId = 2;

  string billingGroupName = 3;

}

// Request message for the ListAccountInvoiceServiceDiscounts rpc.
message ListAccountInvoiceServiceDiscountsRequest {
  // Required.
  //
  // For Ripple, only billing internal ids are supported at the moment. You can set it to a single group
  //
  // Implied as the parent billing group for Wave(Pro) users.
  string groupId = 1;
}

// Streaming response message for the AccountInvoiceServiceDiscounts rpc.
message AccountInvoiceServiceDiscounts {
  // Service discount id.
  string id = 1;

  // Account id.
  string account = 2;

  // service discount infomation.
  api.ripple.v1.InvoiceServiceDiscounts serviceDiscounts = 3;
}


message AccountServiceDiscounts {
  // Service discount id.
  string id = 1;
  // Account id.
  string accountId = 2;
}

// Request message for the CreateAccountInvoiceServiceDiscounts rpc.
message CreateAccountInvoiceServiceDiscountsRequest {
  // Required.
  //
  // For Ripple, only billing internal ids are supported at the moment. You can set it to a single group
  //
  // Implied as the parent billing group for Wave(Pro) users.
  string groupId = 1;

  // Required.
  repeated AccountServiceDiscounts accounts = 4;
}

// Response message for the CreateAccountInvoiceServiceDiscounts rpc.
message CreateAccountInvoiceServiceDiscountsResponse {
  repeated AccountServiceDiscounts accounts = 4;
}

// Request message for the UpdateAccountInvoiceServiceDiscounts rpc.
message UpdateAccountInvoiceServiceDiscountsRequest {
  // Required.
  //
  // For Ripple, only billing internal ids are supported at the moment. You can set it to a single group
  //
  // Implied as the parent billing group for Wave(Pro) users.
  string groupId = 1;

  // Required.
  repeated AccountServiceDiscounts accounts = 4;
}

// Response message for the UpdateAccountInvoiceServiceDiscounts rpc.
message UpdateAccountInvoiceServiceDiscountsResponse {
  repeated AccountServiceDiscounts accounts = 4;
}

// Request message for the DeleteAccountInvoiceServiceDiscounts rpc.
message DeleteAccountInvoiceServiceDiscountsRequest {
  // Required.
  //
  // For Ripple, only billing internal ids are supported at the moment. You can set it to a single group
  //
  // Implied as the parent billing group for Wave(Pro) users.
  string groupId = 1;
}

message RemoveAccountInvoiceServiceDiscountsRequest {
  // Required.
  //
  // For Ripple, only billing internal ids are supported at the moment. You can set it to a single group
  //
  // Implied as the parent billing group for Wave(Pro) users.
  string groupId = 1;

  // Required.
  repeated AccountServiceDiscounts accounts = 4;
}

// Request message for the CreateInvoice rpc.
message CreateInvoiceRequest {
  // Required. Month to get invoice. Format: `yyyymm`.
  string date = 4;
  
  // Required. At the moment, only `aws` is supported.
  string vendor = 1;

  // Optional. You can set all billing groups.
  //
  // If this parameter is not set, The list set to `groups` is used.
  bool allGroups = 2;

  // Optional. You can set it to a list of billing internal group id
  repeated string groups = 3;
}

// Request message for the GetInvoiceStatus rpc.
message GetInvoiceStatusRequest {
  // Required. invoice generate request id.
  string id = 1;
}

// Request message for the ListInvoiceStatus rpc.
message ListInvoiceStatusRequest {
  // Required. Month to get invoice status. Format: `yyyymm`.
  string date = 1;
}

// Request message for the UpdateInvoicePreviews rpc.
message UpdateInvoicePreviewsRequest {
  // Required. Month to get invoice. Format: `yyyymm`.
  string date = 1;

  // Optional. You can set all billing groups.
  //
  // If this parameter is not set, The list set to `groups` is used.
  bool allGroups = 2;

  // Optional. You can set it to a list of billing internal group id
  repeated string groups = 3;

  // Required. You can set display or hiding.
  //
  // If true, Hiding Invoice. If false, Display Invoice.
  bool enabled = 4;
}

// Request message for the CreateReseller rpc.
message CreateResellerRequest {
  // Required. You can set billing internal id or access group id.
  string groupId = 1;

  // Required.
  string email = 2;

  // Required.
  //
  // We recommend a password length of 8~32 characters. If you send 0 characters, a password will be generated automatically.
  string password = 3;

  // Required. If valid, you will be notified via email address.
  bool notification = 4;

  // Optional. Feature Config. If not set config value, use default config
  repeated api.ripple.ResellerConfig waveConfig = 5;

  // Optional. Feature Config. If not set config value, use default config
  repeated api.ripple.ResellerConfig aquaConfig = 6;
}

// Request message for the ListResellers rpc.
message ListResellersRequest {
  // Optional. Get only the value that set fieldMask.
  //
  // see more info: https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/field_mask.proto
  google.protobuf.FieldMask field_mask = 1;
}

// Request message for the GetReseller rpc.
message GetResellerRequest {
  // Required. reseller id.
  string id = 1;

  // Optional. Get only the value that set fieldMask.
  //
  // see more info: https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/field_mask.proto
  google.protobuf.FieldMask field_mask = 2;
}

// Request message for the UpdateReseller rpc.
message UpdateResellerRequest {
  // Required. reseller id.
  string id = 1
    [(google.api.field_behavior) = REQUIRED];

  // Optional.
  string email = 2
    [(google.api.field_behavior) = OPTIONAL];

  // Optional.
  //
  // We recommend a password length of 8~32 characters. If you send 0 characters, a password will be generated automatically.
  string password = 3 [
    (google.api.field_behavior) = INPUT_ONLY,
    (google.api.field_behavior) = OPTIONAL];

  // Optional. wave feature config
  //
  // Set only the config to be changed.
  // For example, If you want to change only dashboardGraph, set `{"waveConfig": [{"key": "dashboardGraph","value": true}]}` as a parameter
  repeated api.ripple.ResellerConfig waveConfig = 4
    [(google.api.field_behavior) = OPTIONAL];

  // Optional. aqua feature config
  //
  // Set only the config to be changed.
  // For example, If you want to change only aqRiManagement, set `{"waveConfig": [{"key": "aqRiManagement","value": true}]}` as a parameter
  repeated api.ripple.ResellerConfig aquaConfig = 5
    [(google.api.field_behavior) = OPTIONAL];

  // Optional.
  //
  // If valid when email or password is updated, you will be notified via email address.
  // If only waveConfig or aquaConfig is changed, it is ignored.
  bool notification = 6 [
    (google.api.field_behavior) = INPUT_ONLY,
    (google.api.field_behavior) = OPTIONAL];

  // Required.
  google.protobuf.FieldMask updateMask = 7
      [(google.api.field_behavior) = REQUIRED];
}


// Request message for the DeleteReseller rpc.
message DeleteResellerRequest {
  // Required. reseller id.
  string id = 1; 
}

// Request message for the GetBillingSetting rpc.
message GetBillingSettingRequest {
  // Optional. Get only the value that set fieldMask.
  //
  // see more info: https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/field_mask.proto
  google.protobuf.FieldMask field_mask = 1;
}

// Response message for the GetBillingSetting rpc.
message GetBillingSettingResponse {
  // List of available yearmonth.
  repeated api.ripple.YearMonth yearMonth = 1;

  // Rounding method.
  api.ripple.Rounding roundingMethod = 2;

  // Rounding method for Export CSV.
  api.ripple.Rounding exportRoundingMethod = 3;

  // Invoice layout.
  api.ripple.InvoiceLayout invoiceLayout = 4;

  // Invoice due date.
  api.ripple.DueDate invoiceDueDate = 5;

  // List of available currency.
  repeated string supportCurrency = 6;
}

// Request message for the ListExchangeRates rpc.
message ListExchangeRatesRequest {
  // Required. vendor.
  string vendor = 1;

  // Required. month. Format: `yyyymm`.
  string month = 2;
}

// Response message for the ListExchangeRates rpc.
message ListExchangeRatesResponse {
  // The Month.
  string month = 1;

  // The common exchange rate.
  api.ripple.CommonExchangeRate common = 2;

  // The billing group exchange rate.
  repeated api.ripple.BillingGroupExchangeRate billingGroup = 3;

  // The payer exchange rate.
  api.ripple.VendorPayerExchangeRate payer = 4;
}


// Request message for the ListAccessGroups rpc.
message ListAccessGroupsRequest {
  // Optional. Get only the value that set fieldMask.
  //
  // see more info: https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/field_mask.proto
  google.protobuf.FieldMask field_mask = 1;
}

// Request message for the CreateAccessGroup rpc.
message CreateAccessGroupRequest {
  // Required. access group name.
  //
  // We recommend the name length of 1~60 characters.
  string name = 1;

  // Required. access group description.
  //
  // We recommend the description length of 0~150 characters.
  string description = 2;

  // Required. Billing group to be included in the access group.
  //
  // You can only include billing groups with the same calculation type and currency type.
  // Specify the billingInternalIds. For example: [`billingInternalId1`,`billingInternalId2`,`billingInternalId3`]
  repeated string billingGroups = 3;
}

// Request message for the UpdateAccessGroup rpc.
message UpdateAccessGroupRequest {
  // Required. access group id.
  string id = 1;

  // Optional. access group name. Set only the name to be changed.
  //
  // We recommend the name length of 1~60 characters.
  string name = 2;

  // Optional. access group description. Set only the description to be changed.
  //
  // We recommend the description length of 0~150 characters.
  string description = 3;

  // Optional. Billing group to be included in the access group.
  //
  // You can only include billing groups with the same calculation type and currency type.
  // Set only the billingGroups to be changed.
  // Specify the billingInternalIds. For example: [`billingInternalId1`,`billingInternalId2`,`billingInternalId3`]
  repeated string billingGroups = 4;
}

// Request message for the DeleteAccessGroup rpc.
message DeleteAccessGroupRequest {
  // Required. access group id.
  string id = 1;
}

// Request message for the ListInvoice rpc.
message ListInvoiceRequest {
  // YYYYMM format (e.g 202412, 202501)
  string date = 1;
 
  // OPTIONAL: refer to the ListInvoiceRequest for the key
  // e.g {"filter": {"vendor": "aws", "billingInternalId":"asdf"}}
  // invalid key will be ignored
  map<string, string> filters = 2;
}


// Response message for the ListInvoice rpc.
message ListInvoiceResponse {
  // The billing internal id.
  string billingInternalId = 1;

  // The billing group id.
  string billingGroupId = 2;

  // The billing group name. Used as invoice name on ripple v2
  string billingGroupName = 3;

  string companyName = 4;

  // currency for the billing amount
  string currency = 8;

  // Created || Not Created
  string invoiceStatus = 5;
  // In progress || Done
  string finalizationStatus = 6;
  // Published || Not published
  string waveStatus = 7;

  // aws, azure, gcp
  string vendor = 13;
  // Formated in $8,000.12
  string billingAmountAws = 9;
  string billingAmountAzure = 10;
  string billingAmountGcp = 11;
  string billingAmountTotal = 12;
}

// request message for ListAbcBillingGroups
message ListAbcBillingGroupsRequest {
  // Required. Payer Id.
  string id = 1;
}

// request message for ListAbcBillingGroupAccounts
message ListAbcBillingGroupAccountsRequest {
  // Required. Payer Id.
  string payerId = 1;

  // Required. BillingGroup Id.
  string billingGroupArn = 2;
}

message AbcBillingGroup {
  string arn = 1;

  string name = 2;

  string creationTime = 3;

  string description = 4;

  string primaryAccountId = 5;

  string size = 6;

  string status = 7;
}

message AbcAccount {
  string accountId = 1;

  string accountName = 2;

}
// Request message for the Billing.ReadInvoiceAdjustments rpc.
message ReadInvoiceAdjustmentsRequest {
  // Required. At the moment, only `aws`,`azure`,`gcp` is supported.
  string vendor = 1;

  // Required.
  string accountId = 2;

  // Optional. The UTC month to query. If empty, defaults to current month. Format is `yyyymm`. For example, June 2021 will be `202106`.
  string month = 3;

  // Optional. If empty, defaults to all fee type. At the moment, only `Fee`,`Refund`,`Credit`,`SppDiscount`,`EdpDiscount`,`BundledDiscount` is supported.
  string feeType = 4;
}

//Request message for the Billing.ListAccountResources rpc.
message ListAccountResourcesRequest {
  // Required. At the moment, only `aws`,`azure`,`gcp` is supported.
  string vendor = 1;

  //Optional. The UTC month to query. If empty, defaults to current month. Format is `yyyymm`.
  string month = 2;
}

message ResourceAccount {
  string payerId = 1;

  string customerId = 2;

  bool registered = 3;
}

//Request message for the Billing.GetAdjustmentConfig rpc.
message GetAdjustmentConfigRequest {
  // Required. At the moment, only `aws` is supported.
  string vendor = 1;
}

//Request message for the Billing.CreateAdjustmentConfig rpc.
message CreateAdjustmentConfigRequest {
  // Required. At the moment, only `aws` is supported.
  string vendor = 1;

  // Required. 
  // A list of filtering options. See [api.ConfigFilters] for more information on each filter item. Multiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc.
  repeated api.ConfigFilters config = 2;

  // Optional. 
  repeated api.ManagementAccount accounts = 3;
}

//Request message for the Billing.UpdateAdjustmentConfig rpc.
message UpdateAdjustmentConfigRequest {
  // Required. At the moment, only `aws` is supported.
  string vendor = 1;

  // Optional. 
  repeated api.ConfigFilters config = 2;

  // Optional. 
  repeated api.ManagementAccount accounts = 3;
}

//Request message for the Billing.DeleteAdjustmentConfig rpc.
message DeleteAdjustmentConfigRequest {
  // Required. At the moment, only `aws` is supported.
  string vendor = 1;
}

// Request message for the Billing.ReadUntaggedGroups rpc.
message ReadUntaggedGroupsRequest {
  // Required. At the moment, only `aws` is supported.
  string vendor = 1 [(google.api.field_behavior) = REQUIRED];

  // Optional. Get only the value that set fieldMask.
  //
  // see more info: https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/field_mask.proto
  google.protobuf.FieldMask field_mask = 2 [(google.api.field_behavior) = OPTIONAL];
}

// Request message for the Billing.ReadCustomizedBillingServices rpc.
message ReadCustomizedBillingServicesRequest {
  // Optional. Get only the value that set fieldMask.
  //
  // see more info: https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/field_mask.proto
  google.protobuf.FieldMask field_mask = 1 [(google.api.field_behavior) = OPTIONAL];
}

// Request message for the Billing.GetCustomizedBillingService rpc.
message GetCustomizedBillingServiceRequest {
  // Required. [blueapi.api.ripple.CustomizedBillingService.id]
  string id = 1;

  // Optional. Get only the value that set fieldMask.
  //
  // see more info: https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/field_mask.proto
  google.protobuf.FieldMask field_mask = 2 [(google.api.field_behavior) = OPTIONAL];
}

// Request message for the Billing.CreateCustomizedBillingService rpc.
message CreateCustomizedBillingServiceRequest {
  // Required. [blueapi.api.ripple.CustomizedBillingService.name]
  string name = 1;

  // Optional. [blueapi.api.ripple.CustomizedBillingService.description]
  string description = 2;

  // Required. [blueapi.api.ripple.CustomizedBillingService.MethodConfig]
  api.ripple.MethodConfig config = 3;
}

// Request message for the Billing.UpdateCustomizedBillingService rpc.
message UpdateCustomizedBillingServiceRequest {
  // Required. [blueapi.api.ripple.CustomizedBillingService.id]
  string id = 1 [(google.api.field_behavior) = REQUIRED];

  // Required. The updated customized billing service object.
  api.ripple.CustomizedBillingService customizedBillingService = 2
      [(google.api.field_behavior) = REQUIRED];

  // Required. Indicates which fields in the provided CustomizedBillingService to update. Must be
  // specified and non-empty. 
  google.protobuf.FieldMask updateMask = 3
      [(google.api.field_behavior) = REQUIRED];
}

// Request message for the Billing.DeleteCustomizedBillingService rpc.
message DeleteCustomizedBillingServiceRequest {
  // Required. [blueapi.api.ripple.CustomizedBillingService.id]
  string id = 1;
}

// Request message for the Billing.GetCustomizedBillingServiceBillingGroup rpc.
message GetCustomizedBillingServiceBillingGroupRequest {
  // Required. billing internal id in billing group.
  string groupId = 1 [(google.api.field_behavior) = REQUIRED];

  // Required. At the moment, `aws`,`azure`,`gcp` is supported.
  string vendor = 2 [(google.api.field_behavior) = REQUIRED];
}

// Response message for the Billing.GetCustomizedBillingServiceBillingGroup rpc.
// 
// If there is no account information, it indicates that it is applied to BillingGroup.
message GetCustomizedBillingServiceBillingGroupResponse {
  // Required. [blueapi.api.ripple.CustomizedBillingService.id]
  string id = 1 [(google.api.field_behavior) = REQUIRED];

  // Required. vendor that applied to the CustomizedBillingService　config.
  string vendor = 2 [(google.api.field_behavior) = REQUIRED];

  // Required. [blueapi.api.ripple.ChargingTarget]
  api.ripple.ChargingTarget chargingTarget = 3 [(google.api.field_behavior) = REQUIRED];

  // Optional. accounts that applied to the CustomizedBillingService　config.
  repeated api.Account accounts = 4 [(google.api.field_behavior) = OPTIONAL];
}

// Request message for the Billing.SetCustomizedBillingServiceBillingGroup rpc.
message SetCustomizedBillingServiceBillingGroupRequest {
  // Required. billing internal id in billing group.
  string groupId = 1 [(google.api.field_behavior) = REQUIRED];

  // Required. At the moment, `aws`,`azure`,`gcp` is supported.
  string vendor = 2 [(google.api.field_behavior) = REQUIRED];

  // CustomizedBillingServiceBillingSetting
  message CustomizedBillingServiceBillingSetting {
    // Required. [blueapi.api.ripple.CustomizedBillingService.id]
    string id = 1 [(google.api.field_behavior) = REQUIRED];

    // Required. [blueapi.api.ripple.ChargingTarget]
    api.ripple.ChargingTarget chargingTarget = 2 [(google.api.field_behavior) = REQUIRED];

    // Optional. if chargingTarget is BILLINGGROUP, `accounts` is set emptty.
    //
    // Specify the accountIds. For example: [`accountId1`,`accountId2`,`accountId3`]
    repeated string accounts = 3 [(google.api.field_behavior) = OPTIONAL];
  }

  // Required. customized billing service setting.
  repeated CustomizedBillingServiceBillingSetting setting = 3 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the Billing.DeleteCustomizedBillingServiceBillingGroup rpc.
message DeleteCustomizedBillingServiceBillingGroupRequest {
  // Required. billing internal id in billing group.
  string groupId = 1 [(google.api.field_behavior) = REQUIRED];

  // Required. At the moment, `aws`,`azure`,`gcp` is supported.
  string vendor = 2 [(google.api.field_behavior) = REQUIRED];
}

// Request message for the Billing.CreateInvoiceServiceDiscounts rpc.
message CreateInvoiceServiceDiscountsRequest {
  // Required. [blueapi.api.ripple.v1.InvoiceServiceDiscounts.name]
  string name = 1;

  // Optional. [blueapi.api.ripple.v1.InvoiceServiceDiscounts.description]
  string description = 2;

  // Required. [blueapi.api.ripple.v1.InvoiceServiceDiscounts.InvoiceServiceDiscountsSetting]
  api.ripple.v1.InvoiceServiceDiscountsSetting setting = 3;
}

// Request message for the Billing.UpdateInvoiceServiceDiscounts rpc.
message UpdateInvoiceServiceDiscountsRequest {
  // Required. [blueapi.api.ripple.v1.InvoiceServiceDiscounts.id]
  string id = 1 [(google.api.field_behavior) = REQUIRED];

  // Required. The updated invoice service discounts object.
  api.ripple.v1.InvoiceServiceDiscounts invoiceServiceDiscounts = 2
      [(google.api.field_behavior) = REQUIRED];

  // Required. Indicates which fields in the provided InvoiceServiceDiscounts to update. Must be
  // specified and non-empty. 
  google.protobuf.FieldMask updateMask = 3
      [(google.api.field_behavior) = REQUIRED];
}

// Request message for the Billing.DeleteInvoiceServiceDiscounts rpc.
message DeleteInvoiceServiceDiscountsRequest {
  // Required. [blueapi.api.ripple.v1.InvoiceServiceDiscounts.id]
  string id = 1;
}

// Response for tag request
message TagData {
  string customerId = 1;
  string accountId = 2;
  string customerName = 3;
  repeated Tags tags = 4;
}
message Tags {
  string key = 1;
  repeated string values = 2;
}

message GetTagsRequest {
  string vendor = 1;
  string type = 2;
}

message CustomField {
  // Unique identifier for the custom field, automatically generated and immutable.
  string id = 1;

  // Descriptive name of the custom field
  string key = 2;

  // Detailed description of the custom field
  string description = 3;
}

message BillingGroupCustomField {
  string value = 1;
  CustomField customField = 2;
}

message ListBillingGroupCustomFieldRequest {
  // billing group InternalID
  // leave empty to get all group id custom field
  string groupId = 1;
}

message ListBillingGroupCustomFieldResponse {
  string groupId = 1;
  repeated BillingGroupCustomField billingGroupCustomFields = 2;
}

message CreateCustomFieldRequest {
  string key = 1;
  string description = 2;
}

message UpdateCustomFieldRequest {
  string id = 1;
  string key = 2;
  string description = 3;
}

message DeleteCustomFieldRequest {
  string id = 1;
}

message ListCustomFieldRequest {

}

// BillingGroup FreeFormat: Also known as miscellaneous
message CreateFreeFormatRequest {
  string groupId = 1;
  string vendor = 2;
  repeated FreeFormItem items = 3;
}

message FreeFormItem {
  string label = 1;
  int64 unitCost = 2;
  int64 total = 5;
  uint32 quantity = 3;
  bool enabled = 4;
}

message DeleteFreeFormatRequest {
  string groupId = 1;
  string vendor = 2;
}

message GetFreeFormatRequest {
  // set empty to get all the freeformat of the MSP
  string groupId = 1;

  // this setting is ignored if groupId is not empty
  // set true to return only the free format associated to a BG
  bool isAssociated = 2;
}

message GetFreeFormatResponse {
  string groupId = 3;
  string vendor = 1;
  repeated FreeFormItem freeFormat = 2;
}

// BillingGroup tags adding setting
message UpdateTagsAddingSettingRequest {
  string vendor = 1;
  string groupId = 2;
  repeated TagsAddingSetting items = 3;
}

message GetTagsAddingSettingRequest {
  string vendor = 1;
  string groupId = 2;
}

message TagsAddingSetting {
  string groupId = 1;
  string customerId = 2;
  repeated string tagKeys = 3;
}

// Request message for the ExportServiceDiscounts rpc.
message ExportServiceDiscountsRequest {
  // Required. At the moment, `CSV` is supported.
  string format = 1 [(google.api.field_behavior) = REQUIRED];

  // Optional. At the moment, `ja`,`en` is supported.
  //
  // Usually the language of the user information is used, 
  // but it may be a different language due to cahce.
  // In that case, you can use this option to change the language of CSV.
  string language = 2 [(google.api.field_behavior) = OPTIONAL];

  // Required.
  // repeated string serviceDiscountsIds = 2 [(google.api.field_behavior) = OPTIONAL];
}

// Request message for the ExportAccountInvoiceServiceDiscounts rpc.
message ExportAccountInvoiceServiceDiscountsRequest {
  // Required. At the moment, `CSV` is supported.
  string format = 1 [(google.api.field_behavior) = REQUIRED];

  // Optional. At the moment, `ja`,`en` is supported.
  //
  // Usually the language of the user information is used, 
  // but it may be a different language due to cahce.
  // In that case, you can use this option to change the language of CSV.
  string language = 2 [(google.api.field_behavior) = OPTIONAL];
}

// Request message for the ExportBillingGroupInvoiceServiceDiscounts rpc.
message ExportBillingGroupInvoiceServiceDiscountsRequest {
  // Required. At the moment, `CSV` is supported.
  string format = 1 [(google.api.field_behavior) = REQUIRED];

  // Optional. At the moment, `ja`,`en` is supported.
  //
  // Usually the language of the user information is used, 
  // but it may be a different language due to cahce.
  // In that case, you can use this option to change the language of CSV.
  string language = 2 [(google.api.field_behavior) = OPTIONAL];
}

// Request message for the ExportBillingGroupCsv rpc.
// port from m/ripple/exportcsv/billing-group
message ExportBillingGroupCsvRequest {
  // Usually the language of the user information is used, 
  // but it may be a different language due to cahce.
  // In that case, you can use this option to change the language of CSV.
  string language = 2 [(google.api.field_behavior) = OPTIONAL];
}


// Response message for the ExportBillingGroupCsv rpc.
message ExportBillingGroupCsvResponse {
  string row = 1;
}

// port from m/ripple/exportcsv/billing-group-setting
message ExportInvoiceSettingCsvRequest {
  // Usually the language of the user information is used, 
  // but it may be a different language due to cahce.
  // In that case, you can use this option to change the language of CSV.
  string language = 2 [(google.api.field_behavior) = OPTIONAL];
}

message FileChunk {
  bytes content = 1;
}

message GetBillingGroupInvoiceServiceDiscountsRequest {
  string groupId = 1;
}

message GetBillingGroupInvoiceServiceDiscountsResponse {
  // Service discount id
  string id = 1;
}

message AddBillingGroupCustomFieldRequest {
  string groupId = 1;
 
  // map of customField id to it's key (description)
  map<string, string> idToKey = 2;
}

message DeleteBillingGroupCustomFieldRequest {
  // REQUIRED. Billing group internal Id
  string groupId = 1;
  string customFieldId = 2;
}
