syntax = "proto3";

package blueapi.admin.v1;

import "api/accountgroup.proto";
import "api/operation.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/alphauslabs/blueapi/admin";
option java_package = "cloud.alphaus.api.admin";
option java_outer_classname = "AdminProto";

// Admin service definition.
service Admin {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    description: "(BETA) Admin API. Base URL: https://api.alphaus.cloud/m/blue"
    external_docs: {
      url: "https://github.com/alphauslabs/blueapi/tree/main/admin/";
      description: "Service definition";
    }
  };

  // Lists all account groups.
  rpc ListAccountGroups(ListAccountGroupsRequest) returns (stream ListAccountGroupsResponse) {
    option (google.api.http) = {
      get: "/admin/v1/acctgroups"
    };
  }

  // Gets an account group.
  rpc GetAccountGroup(GetAccountGroupRequest) returns (GetAccountGroupResponse) {
    option (google.api.http) = {
      get: "/admin/v1/acctgroups/{id}"
    };
  }

  // WORK-IN-PROGRESS: Gets a CloudFormation launch url for enabling cross-account access to your account's billing information.
  // Upon successful deployment, you need to validate the access by calling 'POST /admin/v1/aws/crossacctaccess/default'.
  rpc GetDefaultBillingInfoTemplateUrl(GetDefaultBillingInfoTemplateUrlRequest) returns (GetDefaultBillingInfoTemplateUrlResponse) {
    option (google.api.http) = {
      get: "/admin/v1/aws/crossacctaccess/default"
    };
  }

  // WORK-IN-PROGRESS: Starts validation of a cross-account access stack deployment. If successful, the new IAM role will be
  // added/registered to the target account's records.
  rpc CreateDefaultBillingInfoRole(CreateDefaultBillingInfoRoleRequest) returns (api.Operation) {
    option (google.api.http) = {
      post: "/admin/v1/aws/crossacctaccess/default"
      body: "*"
    };
  }
}

// Request message for the Admin.ListAccountGroups rpc.
message ListAccountGroupsRequest {}

// Response message for the Admin.ListAccountGroups rpc.
message ListAccountGroupsResponse {
  repeated api.AccountGroup accountGroups = 1;
}

// Request message for the Admin.GetAccountGroup rpc.
message GetAccountGroupRequest {
  string id = 1;
}

// Response message for the Admin.GetAccountGroup rpc.
message GetAccountGroupResponse {
  api.AccountGroup acctGroup = 1;
}

// Request message for the Admin.GetDefaultBillingInfoTemplateUrl rpc.
message GetDefaultBillingInfoTemplateUrlRequest {
  // Optional. Set to the desired target region code. Defaults to 'ap-northeast-1' (Tokyo).
  // You can still change the final target region in the CloudFormation console before
  // the stack creation. You can check https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions
  // for the region list.
  string region = 1;
}

// Response message for the Admin.GetDefaultBillingInfoTemplateUrl rpc.
message GetDefaultBillingInfoTemplateUrlResponse {
  // The CloudFormation launch url. Open it in your browser.
  string launchUrl = 1;

  // The latest CloudFormation template. The version is included in the filename.
  string templateUrl = 2;

  // The default stack name used. Can be modified.
  string stackName = 3;

  // The AWS account that will receive the access. Do not change.
  string principal = 4;
}

// Request message for the Admin.CreateDefaultBillingInfoRole rpc.
message CreateDefaultBillingInfoRoleRequest {
  // Required. The target AWS account to validate.
  string target = 1;
}