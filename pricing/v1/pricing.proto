syntax = "proto3";

package blueapi.pricing.v1;

import "api/pricing/details.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/alphauslabs/blueapi/pricing";
option java_package = "cloud.alphaus.api.pricing";
option java_outer_classname = "PricingProto";

// Pricing service definition.
service Pricing {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    description: "(BETA) Pricing API. Base URL: https://api.alphaus.cloud/m/blue/pricing"
    external_docs: {
      url: "https://github.com/alphauslabs/blueapi/tree/main/pricing/";
      description: "Service definition";
    }
  };

  // Test endpoint only.
  rpc GetInfo(GetInfoRequest) returns (GetInfoResponse) {
    option (google.api.http) = {
      get: "/v0/info"
    };
  }

  //WORK-IN-PROGRESS: Get cloud pricing information
  rpc GetPricing(GetPricingRequest) returns (GetPricingResponse) {
    option (google.api.http) = {
      post: "/v0/{vendor}/pricing"
      body: "*"
    };
  }

  //WORK-IN-PROGRESS: Get list of supported services, regions, and attribute keys for filtering
  rpc GetSupportedServices(GetSupportedServicesRequest) returns (GetSupportedServicesResponse) {
    option (google.api.http) = {
      get: "/v0/{vendor}/services"
    };
  }
}

// Request message for the Pricing.GetInfo rpc.
message GetInfoRequest {}

// Response message for the Pricing.GetInfo rpc.
message GetInfoResponse {
  string response = 1;
}

// Request message for GetPricing
message GetPricingRequest {

  //Required. Cloud vendor, only `aws` and `azure` are supported for now.
  string vendor = 1;

  // Required. Cloud vendor service. 
  // Valid values are `ec2`, `lambda`, `s3`, `ebs`, `dataTransfer`, `rds`, `dynamoDb`, and `cloudWatch` for AWS.
  //Valid values are `vm`, `functions`, `sqlDb`, `cosmosDb`, `monitor`, `blobStorage`, `dataLake`, `queue`, `table`, `files`, `dataBox`, `dataBoxDisk`, `dataBoxHeavy`, `resourceMover`, `dataBoxGateway`, `stackEdge`, `dataFactory` for Azure.
  string service = 2;

  // Required. Region.
  // Valid values for AWS services are `af-south-1`, `af-south-1-los-1`, `ap-east-1`, `ap-northeast-1`, `ap-northeast-1-tpe-1`, `ap-northeast-1-wl1-kix1`, `ap-northeast-1-wl1-nrt1`, `ap-northeast-2`, `ap-northeast-2-wl1-cjj1`, `ap-northeast-2-wl1-sel1`, `ap-northeast-3`, `ap-south-1`, `ap-south-1-ccu-1`, `ap-south-1-del-1`, `ap-south-2`, `ap-southeast-1`, `ap-southeast-1-bkk-1`, `ap-southeast-1-mnl-`, `ap-southeast-2`, `ap-southeast-2-akl-1`, `ap-southeast-2-per-1`, `ap-southeast-3`, `ap-southeast-4`, `ca-central-1`, `ca-central-1-wl1-yto1`, `ca-west-1`, `eu-central-1`, `eu-central-1-ham-1`, `eu-central-1-waw-1`, `eu-central-1-wl1-ber1`, `eu-central-1-wl1-dtm1`, `eu-central-1-wl1-muc1`, `eu-central-2`, `eu-north-1`, `eu-north-1-cph-1`, `eu-north-1-hel-1`, `eu-south-1`, `eu-south-2`, `eu-west-1`, `eu-west-2`, `eu-west-2-wl1-lon1`, `eu-west-2-wl1-man1`, `eu-west-2-wl2-man1`, `eu-west-3`, `il-central-1`, `me-central-1`, `me-south-1`, `me-south-1-mct-1`, `sa-east-1`, `us-east-1`, `us-east-1-atl-1`, `us-east-1-bos-1`, `us-east-1-bue-1`, `us-east-1-chi-1`, `us-east-1-dfw-1`, `us-east-1-iah-1`, `us-east-1-lim-1`, `us-east-1-mci-1`, `us-east-1-mia-1`, `us-east-1-msp-1`, `us-east-1-nyc-1`, `us-east-1-phl-1`, `us-east-1-qro-1`, `us-east-1-scl-1`, `us-east-1-wl1`, `us-east-1-wl1-atl1`, `us-east-1-wl1-bna1`, `us-east-1-wl1-chi1`, `us-east-1-wl1-clt1`, `us-east-1-wl1-dfw1`, `us-east-1-wl1-dtw1`, `us-east-1-wl1-iah1`, `us-east-1-wl1-mia1`, `us-east-1-wl1-msp1`, `us-east-1-wl1-nyc1`, `us-east-1-wl1-tpa1`, `us-east-1-wl1-was1`, `us-east-2`, `us-gov-east-1`, `us-gov-west-1`, `us-west-1`, `us-west-2`, `us-west-2-den-1`, `us-west-2-hnl-1`, `us-west-2-las-1`, `us-west-2-lax-1`, `us-west-2-pdx-1`, `us-west-2-phx-1`, `us-west-2-sea-1`, `us-west-2-wl1`, `us-west-2-wl1-den1`, `us-west-2-wl1-las1`, `us-west-2-wl1-lax1`, `us-west-2-wl1-phx1`, `us-west-2-wl1-sea1`.
  // Valid values for Azure services are `asiapacific`, `australia`, `australiacentral`, `australiacentral2`, `australiaeast`, `australiasoutheast`, `brazil`, `brazilsouth`, `brazilsoutheast`, `canada`, `canadacentral`, `canadaeast`, `centralindia`, `centralus`, `eastasia`, `eastus`, `eastus2`, `europe`, `france`, `francecentral`, `francesouth`, `germany`, `germanynorth`, `germanywestcentral`, `india`, `israel`, `israelcentral`, `italy`, `italynorth`, `japan`, `japaneast`, `japanwest`, `korea`, `koreacentral`, `koreasouth`, `mexicocentral`, `newzealand`, `northcentralus`, `northeurope`, `norway`, `norwayeast`, `norwaywest`, `poland`, `polandcentral`, `qatar`, `qatarcentral`, `singapore`, `southafrica`, `southafricanorth`, `southafricawest`, `southcentralus`, `southeastasia`, `southindia`, `spaincentral`, `sweden`, `swedencentral`, `swedensouth`, `switzerland`, `switzerlandnorth`, `switzerlandwest`, `uae`, `uaecentral`, `uaenorth`, `uk`, `uknorth`, `uksouth`, `uksouth2`, `ukwest`, `unitedstates`, `westcentralus`, `westeurope`, `westindia`, `westus`, `westus2`.
  // Available AWS services by region can be accessed in https://aws.amazon.com/about-aws/global-infrastructure/regional-product-services/.
  // Available Azure services by region can be accessed in https://azure.microsoft.com/en-us/explore/global-infrastructure/products-by-region/.
  string region = 3;

  // Optional. Supply token that was included in the latest response to continue fetching the remaining chunks of data. All data has been returned once token is null.
  string token = 4;

  // Optional. This string represent valid columns which will serve as basis as to what columns will be returned by the API.
  // All columns will be returned if this array is empty.
  // This is not yet implemented.
  repeated string columns = 5;
}

// Response message for GetPricing
message GetPricingResponse {
  string token = 1;
  repeated api.pricing.PricingData pricingData = 2;
}

// Request message for GetSupportedServices
message GetSupportedServicesRequest{
  //Required. Cloud vendor, only `aws` and `azure` are supported for now.
  string vendor = 1;
}

// Response message for GetSupportedServices
message GetSupportedServicesResponse {
  // Suported services, regions, and attributes keys that can be used to fetch pricing data
  repeated SupportedService supportedServices = 1;
}

message SupportedService {
  // AWS or Azure services only as of now
  string service = 1;

  // Regions supported for the specific service
  repeated string regions = 2;

  // Attributes that can be used as keys for filtering
  repeated string attributes = 3;

  // Column names that can be used to specify what columns should GetPricing return
  repeated string columns = 4;
}
