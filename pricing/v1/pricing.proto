syntax = "proto3";

package blueapi.pricing.v1;

import "api/pricing/details.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";


option go_package = "github.com/alphauslabs/blueapi/pricing";
option java_package = "cloud.alphaus.api.pricing";
option java_outer_classname = "PricingProto";

// Pricing service definition.
service Pricing {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    description: "(BETA) Pricing API. Base URL: https://api.alphaus.cloud/m/blue/pricing"
    external_docs: {
      url: "https://github.com/alphauslabs/blueapi/tree/main/pricing/";
      description: "Service definition";
    }
  };

  // Test endpoint only.
  rpc GetInfo(GetInfoRequest) returns (GetInfoResponse) {
    option (google.api.http) = {
      get: "/v0/info"
    };
  }

  //WORK-IN-PROGRESS: Get cloud pricing information
  rpc GetPricing(GetPricingRequest) returns (GetPricingResponse) {
    option (google.api.http) = {
      post: "/v0/{vendor}/pricing"
      body: "*"
    };
  }
}

// Request message for the Pricing.GetInfo rpc.
message GetInfoRequest {}

// Response message for the Pricing.GetInfo rpc.
message GetInfoResponse {
  string response = 1;
}

// Request message for GetPricing
message GetPricingRequest {

  //Required. Cloud vendor, only `aws` and `azure` are supported for now.
  string vendor = 1;

  // Required. Cloud vendor service. 
  // Valid values are `ec2`, `lambda`, `s3`, `ebs`, `dataTransfer`, `rds`, `dynamoDb`, and `cloudWatch` for AWS.
  // Valid values are `vm`, `functions`, `blobStorage`, `storageAccount`, `dataTransfer`, `sqlDb`,`cosmosDb`, and `monitor` for Azure.
  string service = 2;

  // Required. Region.
  string region = 3;

  // Required. Token for continuing request.
  string token = 4;

  // Optional. This string represent valid columns which will serve as basis as to what columns will be returned by the API.
  // All columns will be returned if this array is empty.
  // This is not yet implemented.
  repeated string columns = 5;
}

// Response message for GetPricing
message GetPricingResponse {
  string token = 1;
  repeated api.pricing.PricingData pricingData = 2;
}
 