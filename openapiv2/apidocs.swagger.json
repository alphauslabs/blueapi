{
  "swagger": "2.0",
  "info": {
    "title": "Blue API reference",
    "description": "Alphaus provides an API for interacting with its services. Blue API is a RESTful API that can be accessed by an HTTP client such as `curl`, or any HTTP library which is part of most modern programming languages. This API reference is autogenerated from [protocol buffers](https://developers.google.com/protocol-buffers) defined in this [repository](https://github.com/alphauslabs/blueapi), together with our supported [client libraries](https://alphauslabs.github.io/docs/blueapi/client-sdks/). See the official [documentation](https://alphauslabs.github.io/docs/blueapi/overview/) for more information.\n\nYou may encounter the following feature maturity indicators:\n- **(WORK-IN-PROGRESS)** - Development is ongoing, don't use yet;\n- **(BETA)** - New or experimental features, subject to changes; and\n- **(DEPRECATED)** - Outdated or replaced features.\n\nSome endpoints, especially those that return lists of resources, have streaming responses; newline-separated stream of “chunks”. Each chunk is an envelope that can contain either a response message or an error. Only the last chunk will include an error, if any.",
    "version": "v1"
  },
  "tags": [
    {
      "name": "Organization",
      "description": "(BETA) Organization API. Base URL: https://api.alphaus.cloud/m/blue",
      "externalDocs": {
        "description": "Service definition",
        "url": "https://github.com/alphauslabs/blueapi/tree/main/org/"
      }
    },
    {
      "name": "Iam",
      "description": "(BETA) IAM API. Base URL: https://api.alphaus.cloud/m/blue",
      "externalDocs": {
        "description": "Service definition",
        "url": "https://github.com/alphauslabs/blueapi/tree/main/iam/"
      }
    },
    {
      "name": "Admin",
      "description": "Admin API. Base URL: https://api.alphaus.cloud/m/blue",
      "externalDocs": {
        "description": "Service definition",
        "url": "https://github.com/alphauslabs/blueapi/tree/main/admin/"
      }
    },
    {
      "name": "Cost",
      "description": "Cost API. Base URL: https://api.alphaus.cloud/m/blue/cost",
      "externalDocs": {
        "description": "Service definition",
        "url": "https://github.com/alphauslabs/blueapi/tree/main/cost/"
      }
    },
    {
      "name": "Billing",
      "description": "(BETA) Billing API. Base URL: https://api.alphaus.cloud/m/blue/billing",
      "externalDocs": {
        "description": "Service definition",
        "url": "https://github.com/alphauslabs/blueapi/tree/main/billing/"
      }
    },
    {
      "name": "Operations",
      "description": "(BETA) Long operations API. Base URL: https://api.alphaus.cloud/m/blue",
      "externalDocs": {
        "description": "Service definition",
        "url": "https://github.com/alphauslabs/blueapi/tree/main/operations/"
      }
    },
    {
      "name": "Cover",
      "description": "(ALPHA) Cover API. Base URL: https://api.alphaus.cloud/m/blue/cover",
      "externalDocs": {
        "description": "Service definition",
        "url": "https://github.com/alphauslabs/blueapi/tree/main/cover/"
      }
    },
    {
      "name": "Preferences",
      "description": "(BETA) Preferences API. Base URL: https://api.alphaus.cloud/m/blue",
      "externalDocs": {
        "description": "Service definition",
        "url": "https://github.com/alphauslabs/blueapi/tree/main/preferences/"
      }
    }
  ],
  "host": "api.alphaus.cloud",
  "basePath": "/m/blue",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/admin/v1/acctgroups": {
      "get": {
        "summary": "Lists all account groups.",
        "operationId": "Admin_ListAccountGroups",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1ListAccountGroupsResponse"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1ListAccountGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/v1/acctgroups/{id}": {
      "get": {
        "summary": "Gets an account group.",
        "operationId": "Admin_GetAccountGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAccountGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/v1/auditlogs:export": {
      "post": {
        "summary": "WORK-IN-PROGRESS: Exports audit logs for login user's organization.",
        "operationId": "Admin_ExportAuditLogs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiAuditExport"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the ExportAuditLogs rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ExportAuditLogsRequest"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/v1/aws/reports/proforma": {
      "post": {
        "summary": "WORK-IN-PROGRESS: Configure AWS Proforma Cost and Usage Report.",
        "operationId": "Admin_CreateProformaCur",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ProformaCur"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateProformaCurRequest"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/v1/aws/xacct/cwms": {
      "get": {
        "summary": "WORK-IN-PROGRESS: Gets a CloudFormation launch URL for enabling CloudWatch metrics streaming on a target account.",
        "operationId": "Admin_GetCloudWatchMetricsStreamTemplateUrl",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCloudWatchMetricsStreamTemplateUrlResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Admin"
        ]
      },
      "post": {
        "summary": "WORK-IN-PROGRESS: Starts validation of a CloudWatch Metrics streaming stack deployment.",
        "operationId": "Admin_CreateCloudWatchMetricsStream",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CloudWatchMetricsStream"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the Admin.CreateCloudWatchMetricsStream rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateCloudWatchMetricsStreamRequest"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/v1/aws/xacct/dca": {
      "get": {
        "summary": "Gets a CloudFormation launch URL for enabling the default cross-account access to your account's cost information based on type. See comments on the type for more information on what each template does.",
        "operationId": "Admin_GetDefaultCostAccessTemplateUrl",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetDefaultCostAccessTemplateUrlResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "type",
            "description": "Optional. Valid values are `default`, `s3only`, and `apionly`. Defaults to `default` if empty.\n\n`default` - Template for setting up both CUR export and read-only access to cost information. If selected, you need to deploy this template to `us-east-1` region as CloudFormation only supports the `AWS::CUR::ReportDefinition` in that region at the moment. The target S3 bucket will also be created in that region. If you prefer your S3 bucket to be located in a different region, you can use the template from this API by setting the type to `s3only`. After your S3 bucket is ready, call this API again (type is `default`) and set the `CurS3BucketOption` parameter to `USE_EXISTING`, then set your bucket name and region accordingly. This is the default for Ripple, unless specified otherwise.\n\n`apionly` - Template for setting up ready-only access to cost information. Handy if you already have exported your CUR to Alphaus through other means (i.e. manual setup). This template is the same as the `default` type but without the CUR export definitions. Although not required, we recommend you to deploy this template to allow us to query your cost-related information such as Reserved Instances, Saving Plans, etc. through the AWS API. At the moment, we only rely on CUR data which is a best-effort basis and sometimes not accurate. This is the default for Wave(Pro), unless specified otherwise.\n\n`s3only` - A helper template for creating an S3 bucket to be used for CUR export.\n\nAll templates are publicly available from the reponse link (`templateUrl`) if you want to audit the included permissions.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Admin"
        ]
      },
      "post": {
        "summary": "Starts validation of a default cross-account access stack deployment. If successful, the IAM role created from the CloudFormation stack will be registered to the target.",
        "operationId": "Admin_CreateDefaultCostAccess",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DefaultCostAccess"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the Admin.CreateDefaultCostAccess rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateDefaultCostAccessRequest"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/v1/aws/xacct/dca/all:read": {
      "post": {
        "summary": "Lists the default cross-account access role(s) attached to accounts under caller.",
        "operationId": "Admin_ListDefaultCostAccess",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1DefaultCostAccess"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1DefaultCostAccess"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/v1/aws/xacct/dca/{target}": {
      "get": {
        "summary": "Gets the current default cross-account role attached to the input target.",
        "operationId": "Admin_GetDefaultCostAccess",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DefaultCostAccess"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "target",
            "description": "Required. The target AWS account to query.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Admin"
        ]
      },
      "delete": {
        "summary": "Deletes the current default cross-account access role attached to this target account. This does not delete the CloudFormation deployment in your account.",
        "operationId": "Admin_DeleteDefaultCostAccess",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "target",
            "description": "Required. The target AWS account to delete.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Admin"
        ]
      },
      "put": {
        "summary": "Starts an update to an existing default cross-account access CloudFormation stack for template changes, if any. Only call this API if the status of your default cross-account access is 'outdated'.",
        "operationId": "Admin_UpdateDefaultCostAccess",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protosOperation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "target",
            "description": "Required. The target AWS account to update.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/v1/notification/channels": {
      "get": {
        "summary": "Lists all notification channels for login user's organization or group.",
        "operationId": "Admin_ListNotificationChannels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListNotificationChannelsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Admin"
        ]
      },
      "post": {
        "summary": "WORK-IN-PROGRESS: Creates notification settings for login user's organization or group.",
        "operationId": "Admin_CreateNotificationChannel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiNotificationChannel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the Admin.CreateNotificationChannel rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateNotificationChannelRequest"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/v1/notification/channels/{id}": {
      "get": {
        "summary": "Gets notification channel for login user's organization or group.",
        "operationId": "Admin_GetNotificationChannel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiNotificationChannel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fieldMask",
            "description": "Optional.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Admin"
        ]
      },
      "delete": {
        "summary": "Deletes notification settings for login user's organization or group.",
        "operationId": "Admin_DeleteNotificationChannel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Required. ID of the notification channel to delete.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Admin"
        ]
      },
      "put": {
        "summary": "WORK-IN-PROGRESS: Updates notification settings for login user's organization or group.",
        "operationId": "Admin_UpdateNotificationChannel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiNotificationChannel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Required. ID of the notification channel to update.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Required. Name of the notification channel."
                },
                "type": {
                  "type": "string",
                  "description": "Required. Valid values: `email`, `slack`, `msteams`."
                },
                "email": {
                  "$ref": "#/definitions/apiEmailChannel",
                  "description": "Required if type = `email`."
                },
                "slack": {
                  "$ref": "#/definitions/apiSlackChannel",
                  "description": "Required if type = `slack`."
                },
                "msteams": {
                  "$ref": "#/definitions/apiMSTeamsChannel",
                  "description": "Required if type = `msteams`."
                },
                "product": {
                  "type": "string",
                  "description": "Optional. For Octo use only: `octo`."
                }
              },
              "description": "Request message for the Admin.UpdateNotificationChannel rpc."
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/v1/notification/default": {
      "post": {
        "summary": "Creates a default notification channel of type email based on the caller's primary email address.",
        "operationId": "Admin_CreateDefaultNotificationChannel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiNotificationChannel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the Admin.CreateDefaultNotificationChannel rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateDefaultNotificationChannelRequest"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/v1/notification/settings": {
      "get": {
        "summary": "Get notification settings for login user's organization or group.",
        "operationId": "Admin_GetNotificationSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiNotificationSettings"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Admin"
        ]
      },
      "post": {
        "summary": "Creates or updates notification settings for login user's organization or group.",
        "operationId": "Admin_SaveNotificationSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiNotificationSettings"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the Admin.SaveNotificationSettings rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SaveNotificationSettingsRequest"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/v1/notifications": {
      "get": {
        "summary": "WORK-IN-PROGRESS: List all notification for login user's organization.",
        "operationId": "Admin_ListNotifications",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListNotificationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Admin"
        ]
      },
      "post": {
        "summary": "WORK-IN-PROGRESS: Creates notification for login user's organization.",
        "operationId": "Admin_CreateNotification",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/blueapiapiNotification"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the Admin.CreateNotificationTypeChannels rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateNotificationRequest"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/v1/notifications/{id}": {
      "get": {
        "summary": "WORK-IN-PROGRESS: Get notifications for login user's organization.",
        "operationId": "Admin_GetNotification",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/blueapiapiNotification"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Required",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "notificationType",
            "description": "Required\nValid values: \n`InvoiceCalculationStarted`, \n`InvoiceCalculationFinished`, \n`CurUpdatedAfterInvoice`.\n`AccountBudgetAlert`.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Admin"
        ]
      },
      "delete": {
        "summary": "WORK-IN-PROGRESS: Deletes notification for login user's organization.",
        "operationId": "Admin_DeleteNotification",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Required",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "notificationType",
            "description": "Required\nValid values: \n`InvoiceCalculationStarted`, \n`InvoiceCalculationFinished`, \n`CurUpdatedAfterInvoice`.\n`AccountBudgetAlert`.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Admin"
        ]
      },
      "put": {
        "summary": "WORK-IN-PROGRESS: Updates notification for login user's organization.",
        "operationId": "Admin_UpdateNotification",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/blueapiapiNotification"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Required",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "channels": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "Required"
                },
                "enabled": {
                  "type": "boolean",
                  "title": "Required"
                },
                "notificationType": {
                  "type": "string",
                  "description": "Required\nValid values: \n`InvoiceCalculationStarted`, \n`InvoiceCalculationFinished`, \n`CurUpdatedAfterInvoice`.\n`AccountBudgetAlert`."
                },
                "account": {
                  "$ref": "#/definitions/adminv1NotificationAccount",
                  "description": "Optional. only available Wave(Pro)."
                }
              },
              "description": "Request message for the Admin.UpdateNotificationTypeChannels rpc."
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/iam/v1/apiclients": {
      "get": {
        "summary": "Lists all API clients belonging to the caller.",
        "operationId": "Iam_ListApiClients",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/apiApiClient"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of apiApiClient"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Iam"
        ]
      },
      "post": {
        "summary": "Creates an API client for the caller.",
        "operationId": "Iam_CreateApiClient",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiApiClient"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the Iam.CreateApiClient rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateApiClientRequest"
            }
          }
        ],
        "tags": [
          "Iam"
        ]
      }
    },
    "/iam/v1/apiclients/{id}": {
      "delete": {
        "summary": "Deletes an API client belonging to the caller.",
        "operationId": "Iam_DeleteApiClient",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Required. The client id to delete.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Iam"
        ]
      }
    },
    "/iam/v1/grouprootusers": {
      "get": {
        "summary": "WORK-IN-PROGRESS: Retrieves all the existing group root users asscoiated with the organization.",
        "operationId": "Iam_ListGroupRootUsers",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/apiGroupRootUser"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of apiGroupRootUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Iam"
        ]
      },
      "post": {
        "summary": "WORK-IN-PROGRESS: Creates a new root user for a billing group or access group.",
        "operationId": "Iam_CreateGroupRootUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGroupRootUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateGroupRootUserRequest"
            }
          }
        ],
        "tags": [
          "Iam"
        ]
      }
    },
    "/iam/v1/grouprootusers/{id}": {
      "get": {
        "summary": "WORK-IN-PROGRESS: Retrieves a group root user.",
        "operationId": "Iam_GetGroupRootUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGroupRootUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Iam"
        ]
      },
      "delete": {
        "summary": "WORK-IN-PROGRESS: Deletes an existing group root user.",
        "operationId": "Iam_DeleteGroupRootUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Iam"
        ]
      }
    },
    "/iam/v1/grouprootusers/{id}/features": {
      "get": {
        "summary": "WORK-IN-PROGRESS: Retrieves the features available to a user on an Alphaus product.",
        "description": "For a list of valid feature flags, see our documentation at https://labs.alphaus.cloud/docs/blueapi/apis/iam/.",
        "operationId": "Iam_GetFeatureFlags",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiFeatureFlags"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Iam"
        ]
      },
      "put": {
        "summary": "WORK-IN-PROGRESS: Updates the features available to a user on an Alphaus product.",
        "description": "For a list of valid feature flags, see our documentation at https://labs.alphaus.cloud/docs/blueapi/apis/iam/.",
        "operationId": "Iam_UpdateFeatureFlags",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiFeatureFlags"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "featureFlags": {
                  "$ref": "#/definitions/apiFeatureFlags"
                }
              },
              "description": "Request message for the Iam.UpdateFeatureFlags rpc."
            }
          }
        ],
        "tags": [
          "Iam"
        ]
      }
    },
    "/iam/v1/idps": {
      "get": {
        "summary": "Lists all SSO Identity Providers (IdP).",
        "operationId": "Iam_ListIdentityProviders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListIdentityProvidersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Iam"
        ]
      },
      "post": {
        "summary": "Registers an SSO Identity Provider (IdP).",
        "operationId": "Iam_CreateIdentityProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the Iam.CreateIdentityProvider rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateIdentityProviderRequest"
            }
          }
        ],
        "tags": [
          "Iam"
        ]
      }
    },
    "/iam/v1/idps/{id}": {
      "delete": {
        "summary": "Deletes an SSO Identity Provider (IdP).",
        "operationId": "Iam_DeleteIdentityProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Required. The IdP id to delete.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Iam"
        ]
      }
    },
    "/iam/v1/ipfilters": {
      "get": {
        "summary": "Lists all IP filters. At the moment, this API is only available to root users.",
        "operationId": "Iam_ListIpFilters",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1IpFilter"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1IpFilter"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Iam"
        ]
      },
      "post": {
        "summary": "Creates an IP filter item for IP blacklisting or whitelisting. At the moment, this API is only available to root users.",
        "operationId": "Iam_CreateIpFilter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1IpFilter"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the Iam.CreateIpFilter rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateIpFilterRequest"
            }
          }
        ],
        "tags": [
          "Iam"
        ]
      }
    },
    "/iam/v1/ipfilters/{id}": {
      "delete": {
        "summary": "Deletes an IP filter item. At the moment, this API is only available to root users.",
        "operationId": "Iam_DeleteIpFilter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "The IP filter id to delete.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Iam"
        ]
      }
    },
    "/iam/v1/mfausers": {
      "get": {
        "summary": "WORK-IN-PROGRESS: List MFA users info for login user's organization based on status.",
        "operationId": "Iam_GetMFAUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1MFAUsersInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "status",
            "description": "Optional. If non empty: list users by status. Otherwise will list all MFA users.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Iam"
        ]
      }
    },
    "/iam/v1/partners/{id}/token": {
      "post": {
        "summary": "BETA: Creates a partner token for custom integrations. Available only to Ripple and Cover users.",
        "operationId": "Iam_CreatePartnerToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1PartnerToken"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Required. Partner id or audience for the token.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Request message for the Iam.CreatePartnerToken rpc."
            }
          }
        ],
        "tags": [
          "Iam"
        ]
      }
    },
    "/iam/v1/partners/{id}/token:refresh": {
      "post": {
        "summary": "BETA: Refreshes an expired partner token. Only partners are expected to call this API.",
        "operationId": "Iam_RefreshPartnerToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1PartnerToken"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Required. Partner id or audience for the token.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "description": "Required. The previous (old) token to be refreshed."
                }
              },
              "description": "Request message for the Iam.RefreshPartnerToken rpc."
            }
          }
        ],
        "tags": [
          "Iam"
        ]
      }
    },
    "/iam/v1/password:reset": {
      "post": {
        "summary": "WORK-IN-PROGRESS: Validate reset password link and proceed to update password",
        "operationId": "Iam_ValidateResetPasswordLinkAndChangePassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ValidateResetPasswordLinkAndChangePasswordResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request for message Iam.ValidateVerificationCode rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ValidateResetPasswordLinkAndChangePasswordRequest"
            }
          }
        ],
        "tags": [
          "Iam"
        ]
      }
    },
    "/iam/v1/permissions": {
      "get": {
        "summary": "WORK-IN-PROGRESS: Lists all permissions based on the input's scope. For reference, supported permissions can be found on [https://github.com/mobingi/rbac-permissions].",
        "operationId": "Iam_ListPermissions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListPermissionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "subUser",
            "description": "Optional. The subuser to query. If empty (default), query all available permissions. If set to a valid subuser, query that subuser's permissions, if allowed. You can also set this field to `me` to query your own permissions.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Iam"
        ]
      }
    },
    "/iam/v1/roles": {
      "get": {
        "summary": "WORK-IN-PROGRESS: Lists all available roles.",
        "operationId": "Iam_ListRoles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListRolesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "description": "Optional. If not set, all roles will be returned.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Iam"
        ]
      },
      "post": {
        "summary": "WORK-IN-PROGRESS: Creates a role. If your `permissions` list contains an `Admin` entry, all other entries will be discarded except `Admin`. Roles are root user-level. That means all roles created by the root user, or any subuser that has permissions to create roles, are available to all subusers.",
        "operationId": "Iam_CreateRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiRole"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the Iam.CreateRole rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateRoleRequest"
            }
          }
        ],
        "tags": [
          "Iam"
        ]
      }
    },
    "/iam/v1/roles/{namespace}/{name}": {
      "delete": {
        "summary": "WORK-IN-PROGRESS: Deletes a role. Deleting a role will also remove all mappings.",
        "operationId": "Iam_DeleteRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "description": "Required. The parent namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Required. The role name to delete.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Iam"
        ]
      },
      "put": {
        "summary": "WORK-IN-PROGRESS: Updates a role. If role name is different, rename mapped role name.",
        "operationId": "Iam_UpdateRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiRole"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "description": "Required. The new namespace.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "Required. The role name to update.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "newName": {
                  "type": "string",
                  "description": "Optional. If set, update the current name to this."
                },
                "permissions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Required. The list of permissions to attach to this role."
                }
              },
              "description": "Request message for the Iam.UpdateRole rpc."
            }
          }
        ],
        "tags": [
          "Iam"
        ]
      }
    },
    "/iam/v1/userroles": {
      "get": {
        "summary": "WORK-IN-PROGRESS: Lists roles attached to the caller or the input.",
        "operationId": "Iam_ListUserRoleMappings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListUserRoleMappingsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "subUser",
            "description": "Optional. The subuser to query. Defaults to caller if not set.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Iam"
        ]
      },
      "post": {
        "summary": "WORK-IN-PROGRESS: Maps roles to a subuser. You can only map (or attach) up to 5 roles to a user per namespace. There is no limit for filtering rules per user.",
        "operationId": "Iam_CreateUserRoleMapping",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateUserRoleMappingResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the Iam.CreateUserRoleMapping rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateUserRoleMappingRequest"
            }
          }
        ],
        "tags": [
          "Iam"
        ]
      },
      "put": {
        "summary": "WORK-IN-PROGRESS: Updates user-to-role mappings. You can only map (or attach) up to 5 roles to a user per namespace. There is no limit for filtering rules per user.",
        "operationId": "Iam_UpdateUserRoleMapping",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateUserRoleMappingResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the Iam.UpdateUserRoleMapping rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateUserRoleMappingRequest"
            }
          }
        ],
        "tags": [
          "Iam"
        ]
      }
    },
    "/iam/v1/users": {
      "get": {
        "summary": "Lists all subusers.",
        "operationId": "Iam_ListUsers",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/apiUser"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of apiUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Iam"
        ]
      },
      "post": {
        "summary": "Creates a subuser.",
        "operationId": "Iam_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the Iam.CreateUser rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateUserRequest"
            }
          }
        ],
        "tags": [
          "Iam"
        ]
      }
    },
    "/iam/v1/users/{id}": {
      "get": {
        "summary": "Gets subuser information. This call includes all of the subuser metadata. See\n[https://alphauslabs.github.io/blueapi/] for the list of supported attributes.\nIf the `{name}` parameter is `me` or `-`, returns the caller information, which\nis equivalent to `WhoAmI()` or `GET:/iam/v*/whoami`.",
        "operationId": "Iam_GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Iam"
        ]
      },
      "delete": {
        "summary": "Deletes a subuser.",
        "operationId": "Iam_DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Required. The subuser name to delete.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Iam"
        ]
      }
    },
    "/iam/v1/whoami": {
      "get": {
        "summary": "Gets user information about the caller. This call includes all of the user metadata.\nSee [https://alphauslabs.github.io/blueapi/] for the list of supported attributes.",
        "operationId": "Iam_WhoAmI",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Iam"
        ]
      }
    },
    "/iam/v1/{user}/password:verify": {
      "post": {
        "summary": "WORK-IN-PROGRESS: Verify User Input For Reset Password",
        "operationId": "Iam_VerifyUserForResetPassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1VerifyUserForResetPasswordResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Iam"
        ]
      }
    },
    "/ops/v1": {
      "get": {
        "summary": "Lists long-running operations.",
        "operationId": "Operations_ListOperations",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/protosOperation"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of protosOperation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "Optional. The name of the operation's parent resource. Not used at the moment.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "asOf",
            "description": "Optional. List operations on and after this date. Format is yyyymmdd. For example,\nif you want to list all operations starting from June 01, 2021, set to `20210601`.\nIf not set, defaults to the first day of the current UTC month.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "includeDone",
            "description": "Optional. If true, include all operations that are marked as done. Exclude by\ndefault.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Operations"
        ]
      }
    },
    "/ops/v1/{name}": {
      "get": {
        "summary": "Gets the latest state of a long-running operation. You can use this method to\npoll the operation result at intervals.",
        "operationId": "Operations_GetOperation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protosOperation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "The name of the operation resource.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Operations"
        ]
      },
      "delete": {
        "summary": "Deletes a long-running operation. This method indicates that the client is no\nlonger interested in the operation result. It does not cancel the operation.",
        "operationId": "Operations_DeleteOperation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "The name of the operation resource to be deleted.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Operations"
        ]
      }
    },
    "/ops/v1/{name}:cancel": {
      "post": {
        "summary": "Starts asynchronous cancellation on a long-running operation. The server makes\na best effort to cancel the operation, but success is not guaranteed. On successful\ncancellation, the operation is not deleted; instead, it becomes an operation with\na value of [google.rpc.Status.code][google.rpc.Status.code] 1, corresponding\nto `Code.CANCELLED`.",
        "operationId": "Operations_CancelOperation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "The name of the operation resource to be cancelled.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Request message for the Operations.CancelOperation rpc."
            }
          }
        ],
        "tags": [
          "Operations"
        ]
      }
    },
    "/org/v1": {
      "get": {
        "summary": "Gets information about the caller's organization.",
        "operationId": "Organization_GetOrg",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rippleOrg"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Organization"
        ]
      },
      "delete": {
        "summary": "WORK-IN-PROGRESS: Deletes the organization.",
        "operationId": "Organization_DeleteOrg",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Organization"
        ]
      },
      "post": {
        "summary": "Creates the organization account.",
        "operationId": "Organization_CreateOrg",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateOrgResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the Organization.CreateOrg rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateOrgRequest"
            }
          }
        ],
        "tags": [
          "Organization"
        ]
      }
    },
    "/org/v1/metadata": {
      "put": {
        "summary": "WORK-IN-PROGRESS: Updates organization metadata. See [https://alphauslabs.github.io/blueapi/]\nfor the list of supported attributes.",
        "operationId": "Organization_UpdateMetadata",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the Organization.UpdateMetadata rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateMetadataRequest"
            }
          }
        ],
        "tags": [
          "Organization"
        ]
      }
    },
    "/org/v1/passwd": {
      "put": {
        "summary": "Updates the organization password.",
        "operationId": "Organization_UpdatePassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the Organization.UpdatePassword rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdatePasswordRequest"
            }
          }
        ],
        "tags": [
          "Organization"
        ]
      }
    },
    "/org/v1:sendVerification": {
      "post": {
        "summary": "WORK-IN-PROGRESS: Sends (or resends) the verification email. Only valid for unverified\norganizations. The verification key will be valid for a day.",
        "operationId": "Organization_SendVerification",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Organization"
        ]
      }
    },
    "/org/v1:verify": {
      "post": {
        "summary": "WORK-IN-PROGRESS: Verifies an organization using the key received from the verification email.\nThe verification key is only valid for a day.",
        "operationId": "Organization_VerifyOrg",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Organization"
        ]
      }
    },
    "/prefs/v1": {
      "get": {
        "summary": "WORK-IN-PROGRESS: Gets current preferences.",
        "operationId": "Preferences_GetPreferences",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Preference"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Preferences"
        ]
      }
    },
    "/v1/accessgroups": {
      "get": {
        "summary": "Lists access group. Only available in Ripple.",
        "operationId": "Billing_ListAccessGroups",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/apirippleAccessGroup"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of apirippleAccessGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "fieldMask",
            "description": "Optional. Get only the value that set fieldMask.\n\nsee more info: https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/field_mask.proto",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Billing"
        ]
      },
      "post": {
        "summary": "Registers the access group. Only available in Ripple.",
        "operationId": "Billing_CreateAccessGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apirippleAccessGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the CreateAccessGroup rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAccessGroupRequest"
            }
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/accessgroups/{accessGroupId}": {
      "get": {
        "summary": "WORK-IN-PROGRESS: Gets an access group.",
        "operationId": "Billing_GetAccessGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAccessGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accessGroupId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fieldMask",
            "description": "Optional. Get only the value that set fieldMask.\n\nsee more info: https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/field_mask.proto",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/accessgroups/{id}": {
      "delete": {
        "summary": "Deletes the access group. Only available in Ripple.",
        "operationId": "Billing_DeleteAccessGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Required. access group id.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Billing"
        ]
      },
      "put": {
        "summary": "Updates the access group. Only available in Ripple.",
        "operationId": "Billing_UpdateAccessGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apirippleAccessGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Required. access group id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Optional. access group name. Set only the name to be changed.\n\nWe recommend the name length of 1~60 characters."
                },
                "description": {
                  "type": "string",
                  "description": "Optional. access group description. Set only the description to be changed.\n\nWe recommend the description length of 0~150 characters."
                },
                "billingGroups": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Optional. Billing group to be included in the access group.\n\nYou can only include billing groups with the same calculation type and currency type.\nSet only the billingGroups to be changed.\nSpecify the billingInternalIds. For example: [`billingInternalId1`,`billingInternalId2`,`billingInternalId3`]"
                }
              },
              "description": "Request message for the UpdateAccessGroup rpc."
            }
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/account": {
      "post": {
        "summary": "Registers GCP/Azure account.",
        "operationId": "Cover_RegisterDataAccess",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for Register Data Access. For azure and gcp.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RegisterDataAccessRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/account/all:read": {
      "post": {
        "summary": "Lists Azure and GCP accounts.",
        "operationId": "Cover_ListDataAccess",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1DataAccess"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1DataAccess"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/account/{target}": {
      "get": {
        "summary": "Gets the current account. For GCP and Azure.",
        "operationId": "Cover_GetDataAccess",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DataAccess"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "target",
            "description": "Required. (Project ID for GCP / Account ID for Azure)",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "vendor",
            "description": "Vendor (GCP/Azure)",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountType",
            "description": "In the context of fetching account details, specifying the account type is necessary. This is because the target alone might not uniquely identify an account and could result in multiple data points.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cover"
        ]
      },
      "delete": {
        "summary": "Deletes GCP or Azure accounts based on the provided request.",
        "operationId": "Cover_DeleteDataAccess",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "target",
            "description": "Required. (Project ID for GCP / Account ID for Azure)",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "vendor",
            "description": "Vendor (GCP/Azure)",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountType",
            "description": "In the context of fetching account details, specifying the account type is necessary. This is because the target alone might not uniquely identify an account and could result in multiple data points.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cover"
        ]
      },
      "put": {
        "summary": "Update GCP/Azure account info",
        "operationId": "Cover_UpdateDataAccess",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "target",
            "description": "Project Id for GCP, Account Id for Azure",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "vendor": {
                  "type": "string",
                  "title": "GCP or Azure"
                },
                "gcpOptions": {
                  "$ref": "#/definitions/coverGcpOptions",
                  "title": "GCP Options"
                },
                "azureOptions": {
                  "$ref": "#/definitions/coverAzureOptions",
                  "title": "Azure Options"
                },
                "awsOptions": {
                  "$ref": "#/definitions/apicoverAwsOptions",
                  "title": "AWS Options"
                },
                "accountType": {
                  "type": "string",
                  "title": "Account Type"
                }
              },
              "title": "Request message for UpdateDataAccess (GCP/Azure)"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/acctaccess/{target}": {
      "delete": {
        "summary": "Deletes the current account access role attached to this target account. This does not delete the CloudFormation deployment in your account.",
        "operationId": "Cover_DeleteAccountAccess",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteAccountAccessResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "target",
            "description": "Required. The target AWS account to delete.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "vendor",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/adjustmentconfig/{vendor}": {
      "get": {
        "summary": "WORK-IN-PROGRESS: Gets adjustment config",
        "operationId": "Billing_GetAdjustmentConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiAdjustmentConfig"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Billing"
        ]
      },
      "delete": {
        "summary": "WORK-IN-PROGRESS: Deletes adjustment config",
        "operationId": "Billing_DeleteAdjustmentConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Billing"
        ]
      },
      "post": {
        "summary": "WORK-IN-PROGRESS: Creates adjustment config",
        "description": "[ERRORS] \n- InvalidArgument:\n - the AdjustmentConfig is already exists.\n- NotFound:\n - the AdjustmentConfig is not found.",
        "operationId": "Billing_CreateAdjustmentConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiAdjustmentConfig"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "config": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/apiConfigFilters"
                  },
                  "description": "Required. \nA list of filtering options. See [api.ConfigFilters] for more information on each filter item. Multiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc."
                },
                "accounts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/apiManagementAccount"
                  },
                  "description": "Optional."
                }
              },
              "description": "Request message for the Billing.CreateAdjustmentConfig rpc."
            }
          }
        ],
        "tags": [
          "Billing"
        ]
      },
      "put": {
        "summary": "WORK-IN-PROGRESS: Updates adjustment config",
        "operationId": "Billing_UpdateAdjustmentConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiAdjustmentConfig"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "config": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/apiConfigFilters"
                  },
                  "description": "Optional."
                },
                "accounts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/apiManagementAccount"
                  },
                  "description": "Optional."
                }
              },
              "description": "Request message for the Billing.UpdateAdjustmentConfig rpc."
            }
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/alerts": {
      "post": {
        "summary": "CreateBudgetAlerts",
        "description": "Create the budget alerts.\nOnly available in Wave(Pro).",
        "operationId": "Cost_CreateBudgetAlerts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BudgetAlerts"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the CreateBudgetAlerts rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateBudgetAlertsRequest"
            }
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/alerts/anomaly": {
      "post": {
        "summary": "Create Anomaly Alert",
        "operationId": "Cover_CreateAnomalyAlert",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAnomalyAlertRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/alerts/anomaly/all:read": {
      "post": {
        "summary": "List all the Anomaly Alert Data",
        "operationId": "Cover_ListAnomalyAlert",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1AnomalyAlertData"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1AnomalyAlertData"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/alerts/anomaly/{id}": {
      "get": {
        "summary": "Get Anomaly Alert Data",
        "operationId": "Cover_GetAnomalyAlert",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AnomalyAlertData"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "required. Id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cover"
        ]
      },
      "delete": {
        "summary": "Delete Anomaly Alert",
        "operationId": "Cover_DeleteAnomalyAlert",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "required. Id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cover"
        ]
      },
      "put": {
        "summary": "Update Anomaly Alert",
        "operationId": "Cover_UpdateAnomalyAlert",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "required. Id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "title": "required. alert name"
                },
                "alertEnabled": {
                  "type": "boolean",
                  "description": "required."
                },
                "notificationChannels": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "required. Notification Channel Ids."
                },
                "frequency": {
                  "type": "string",
                  "description": "required. Frequency."
                },
                "costGroupId": {
                  "type": "string",
                  "title": "required. cost group id"
                }
              }
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/alerts/cost": {
      "get": {
        "summary": "Get Alerts under organization",
        "operationId": "Cover_GetAlerts",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1GetAlertsResponse"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1GetAlertsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Cover"
        ]
      },
      "post": {
        "summary": "Create Alerts under organization",
        "operationId": "Cover_CreateAlert",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateAlertResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAlertRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/alerts/cost/{id}": {
      "get": {
        "summary": "Get Specific Alert under organization",
        "operationId": "Cover_GetAlertDetails",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAlertDetailsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Required. Alert ID.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cover"
        ]
      },
      "delete": {
        "summary": "Delete Specific Alert under organization",
        "operationId": "Cover_DeleteAlert",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteAlertResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Required. Alert ID.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cover"
        ]
      },
      "put": {
        "summary": "Update Specific Alert under organization",
        "operationId": "Cover_UpdateAlertDetails",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateAlertDetailsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Required. Alert ID.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "If optional fields are not supplied, no changes occur.\nOptional."
                },
                "fixedAmount": {
                  "type": "number",
                  "format": "float",
                  "description": "Both are optional."
                },
                "percentage": {
                  "type": "number",
                  "format": "float"
                },
                "granularity": {
                  "type": "string",
                  "description": "Optional. daily or monthly. Only 'daily' is supported for now."
                },
                "costGroups": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Optional. Cost group IDs."
                },
                "channels": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Optional. Channel IDs."
                }
              },
              "title": "Request message for UpdateAlertDetails"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/alerts/expire/discount": {
      "post": {
        "summary": "Create discount Expiration Alert.",
        "operationId": "Cover_CreateDiscountExpirationAlert",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateDiscountExpirationAlertRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/alerts/expire/discount/all:read": {
      "post": {
        "summary": "List all discount Expiration Alert Data",
        "operationId": "Cover_ListDiscountExpirationAlert",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1DiscountExpiryAlertData"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1DiscountExpiryAlertData"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/alerts/expire/discount/{id}": {
      "get": {
        "summary": "Get discount Expiration Alert Data",
        "operationId": "Cover_GetDiscountExpirationAlert",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DiscountExpiryAlertData"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "required. Id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cover"
        ]
      },
      "delete": {
        "summary": "Delete selected discount Expiration Alert Data",
        "operationId": "Cover_DeleteDiscountExpirationAlert",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "required. Id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cover"
        ]
      },
      "put": {
        "summary": "Update discount Expiration Alert",
        "operationId": "Cover_UpdateDiscountExpirationAlert",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "required. Id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "alertEnabled": {
                  "type": "boolean",
                  "description": "required."
                },
                "channels": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "required. Notification Channel Ids."
                },
                "frequencies": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "int64"
                  },
                  "description": "required. Frequencies."
                },
                "costGroups": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "Required. Cost Group Ids"
                },
                "name": {
                  "type": "string",
                  "title": "required. Name"
                }
              }
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/alerts/{id}": {
      "get": {
        "summary": "GetBudgetAlerts",
        "description": "Gets the budget alerts.\nOnly available in Wave(Pro).",
        "operationId": "Cost_GetBudgetAlerts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BudgetAlerts"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Required. budget alert id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cost"
        ]
      },
      "delete": {
        "summary": "DeleteBudgetAlerts",
        "description": "Deletes the budget alerts.\nOnly available in Wave(Pro).",
        "operationId": "Cost_DeleteBudgetAlerts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Required. budget alert id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cost"
        ]
      },
      "put": {
        "summary": "UpdateBudgetAlerts",
        "description": "Updates the budget alerts.\nOnly available in Wave(Pro).",
        "operationId": "Cost_UpdateBudgetAlerts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BudgetAlerts"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Required. budget alert id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "vendor": {
                  "type": "string",
                  "description": "Required. At the moment, only `aws` is supported."
                },
                "accounts": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Required. Lsit of accountId. For example, you set to [\"accountId1\",\"accountId2\",\"accountId3\"]."
                },
                "notification": {
                  "$ref": "#/definitions/apiBudgetAlertNotification",
                  "description": "Required."
                },
                "daily": {
                  "$ref": "#/definitions/apiDailyBudgetAlert",
                  "description": "Optional."
                },
                "dailyRate": {
                  "$ref": "#/definitions/apiDailyRateIncreaseBudgetAlert",
                  "description": "Optional."
                },
                "monthly": {
                  "$ref": "#/definitions/apiMonthlyBudgetAlert",
                  "description": "Optional."
                }
              },
              "description": "Request message for the UpdateBudgetAlerts rpc."
            }
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/alerts:read": {
      "post": {
        "summary": "ReadBudgetAlerts",
        "description": "Reads the budget alerts.\nOnly available in Wave(Pro).\n[ERRORS] \n- Unimplemented:\n  - not implemented\n- InvalidArgument:\n  - parse error",
        "operationId": "Cost_ReadBudgetAlerts",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1BudgetAlerts"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1BudgetAlerts"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the ReadBudgetAlerts rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ReadBudgetAlertsRequest"
            }
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/allocations/accountusage/all:read": {
      "post": {
        "summary": "WORK-IN-PROGRESS: Lists the allocated account usages",
        "operationId": "Cover_ListAccountUsage",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1AccountUsageDetails"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1AccountUsageDetails"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the RestoreAccountUsage rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListAccountUsageRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/allocations/accountusage/restore": {
      "post": {
        "summary": "WORK-IN-PROGRESS: Restore the allocated account usages",
        "operationId": "Cover_RestoreAccountUsage",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1AccountUsageDetails"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1AccountUsageDetails"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the RestoreAccountUsage rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RestoreAccountUsageRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/allocations/accountusage/simulate": {
      "post": {
        "summary": "WORK-IN-PROGRESS: Simulate the output of the account usage allocation",
        "operationId": "Cover_SimulateAccountUsage",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1AccountUsageDetails"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1AccountUsageDetails"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the CreateAllocator rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAllocatorRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/allocations/fees/all:read": {
      "post": {
        "summary": "Lists the fees",
        "operationId": "Cover_ListFees",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/coverv1FeeDetails"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of coverv1FeeDetails"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the ListFees rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListFeesRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/allocations/fees/restore": {
      "post": {
        "summary": "Restore distributed fees",
        "operationId": "Cover_RestoreFee",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/coverv1FeeDetails"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of coverv1FeeDetails"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the RestoreFee rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RestoreFeeRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/allocations/fees/simulate": {
      "post": {
        "summary": "WORK-IN-PROGRESS: Simulate fee allocator",
        "operationId": "Cover_SimulateFeeAllocator",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/coverv1FeeDetails"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of coverv1FeeDetails"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the CreateAllocator rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAllocatorRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/allocations/fees:read": {
      "post": {
        "summary": "Get all available fees for the specified cost group",
        "operationId": "Cover_GetCostGroupFee",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1FeeItem"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1FeeItem"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the GetCostGroupFee rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetCostGroupFeeRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/allocations/savings/all:read": {
      "post": {
        "summary": "WORK-IN-PROGRESS: Lists the allocated ri and sp savings",
        "operationId": "Cover_ListSavings",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1SavingsDetails"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1SavingsDetails"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the ListFees rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListFeesRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/allocations/savings/restore": {
      "post": {
        "summary": "WORK-IN-PROGRESS: Restore the allocated ri and sp savings",
        "operationId": "Cover_RestoreSavings",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1SavingsDetails"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1SavingsDetails"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the RestoreSavings rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RestoreSavingsRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/allocations/savings/simulate": {
      "post": {
        "summary": "WORK-IN-PROGRESS: Simulate the output of the ri and sp savings allocation",
        "operationId": "Cover_SimulateSavings",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1SavingsDetails"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1SavingsDetails"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the CreateAllocator rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAllocatorRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/allocations:read": {
      "post": {
        "summary": "WORK-IN-PROGRESS: Get all available allocation items for the specified cost group",
        "operationId": "Cover_GetCostGroupAllocation",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1AllocationItem"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1AllocationItem"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the GetCostGroupAllocation rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetCostGroupAllocationRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/allocators": {
      "get": {
        "summary": "WORK-IN-PROGRESS: Lists all the allocators",
        "operationId": "Cover_ListAllocators",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1CostAllocatorDetails"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1CostAllocatorDetails"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Cover"
        ]
      },
      "post": {
        "summary": "WORK-IN-PROGRESS: Creates cost allocator item",
        "operationId": "Cover_CreateAllocator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CostAllocatorDetails"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the CreateAllocator rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAllocatorRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/allocators/{id}": {
      "delete": {
        "summary": "WORK-IN-PROGRESS: Deletes a cost allocator",
        "operationId": "Cover_DeleteAllocator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Required. The id of the allocator to delete.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cover"
        ]
      },
      "put": {
        "summary": "WORK-IN-PROGRESS: Updates a cost allocator item",
        "operationId": "Cover_UpdateAllocator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CostAllocatorDetails"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "category": {
                  "type": "string"
                },
                "expiration": {
                  "type": "string",
                  "format": "int64"
                },
                "startMonth": {
                  "type": "string",
                  "description": "Optional. The starting month of the allocator to be effective."
                },
                "defaultAccount": {
                  "type": "string",
                  "description": "Optional. The default account for remaining costs. If not set, will allocate the cost to the original account."
                },
                "criteria": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/v1Criteria"
                  },
                  "description": "Required. Criteria for the adjustment to be applied."
                },
                "allocator": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/v1Allocator"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/anomaly": {
      "post": {
        "summary": "Get the data of a cost group containing anomaly values",
        "operationId": "Cover_GetAnomalyinCostGroup",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1AnomalyData"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1AnomalyData"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetAnomalyinCostGroupRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/assets/summary/{costGroupId}": {
      "get": {
        "summary": "WORK-IN-PROGRESS: Assets summary for costgroup",
        "operationId": "Cover_GetAssetsSummary",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAssetsSummaryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "costGroupId",
            "description": "Required. Cost Group Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "startMonth",
            "description": "Optional. If not set, current month will be used. Format: `yyyymm`.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endMonth",
            "description": "Optional. If not set, current month will be used. Format: `yyyymm`.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "combineDates",
            "description": "Optional. If true, return the assets summary for the requested period. Else, summary per month is returned.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/assets:read": {
      "post": {
        "summary": "WORK-IN-PROGRESS: Lists assets for costgroup",
        "operationId": "Cover_ListAssets",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1Resource"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1Resource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the Asset.ListResources rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListAssetsRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/attributes": {
      "post": {
        "summary": "WORK-IN-PROGRESS: Get Cost Group by Attribute Type",
        "operationId": "Cover_GetCostGroupAttribute",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCostGroupAttributeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetCostGroupAttributeRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/aws/acctaccess": {
      "get": {
        "summary": "Gets a CloudFormation launch URL for enabling the account access.",
        "operationId": "Cover_GetAccountAccessTemplateUrl",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAccountAccessTemplateUrlResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "type",
            "description": "All templates are publicly available from the reponse link (`templateUrl`) if you want to audit the included permissions.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cover"
        ]
      },
      "post": {
        "summary": "Starts validation of the account access stack deployment. If successful, the IAM role created from the CloudFormation stack will be registered to the target.",
        "operationId": "Cover_CreateAccountAccess",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AccountAccess"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the CreateAccountAccess rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAccountAccessRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/aws/acctaccess/all:read": {
      "post": {
        "summary": "Lists the account access role(s) attached to accounts under caller.",
        "operationId": "Cover_ListAccountAccess",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1AccountAccess"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1AccountAccess"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the ListAccountAccess rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListAccountAccessRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/aws/acctaccess/cur": {
      "post": {
        "summary": "Starts validation of the account access cur stack deployment. If successful, the IAM role created from the CloudFormation stack will be registered to the target.",
        "operationId": "Cover_CreateAccountAccessCur",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AccountAccess"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the CreateAccountAccess rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAccountAccessRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/aws/acctaccess/{target}": {
      "get": {
        "summary": "Gets the current account role attached to the input target.",
        "operationId": "Cover_GetAccountAccess",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AccountAccess"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "target",
            "description": "Required. The target AWS account to query.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cover"
        ]
      },
      "put": {
        "summary": "Starts an update to an existing account access CloudFormation stack for template changes, if any. Only call this API if the status of your account access is 'outdated'.",
        "operationId": "Cover_UpdateAccountAccess",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protosOperation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "target",
            "description": "Required. The target AWS account to update.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/aws/cur:import": {
      "post": {
        "summary": "Initiates an ondemand import of all registered CUR files. See [https://help.alphaus.cloud/en/articles/3612555-ripple-aws-things-you-need-to-prepare-before-starting] for more information.",
        "operationId": "Cost_ImportCurFiles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protosOperation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the Cost.ImportCurFiles rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ImportCurFilesRequest"
            }
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/aws/dailyrunhistory:read": {
      "post": {
        "summary": "Reads the daily calculation history of all accounts in your billing groups. Only available in Ripple.",
        "operationId": "Billing_ListAwsDailyRunHistory",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1AwsDailyRunHistory"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1AwsDailyRunHistory"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the Billing.ListAwsCalculationHistory rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListAwsDailyRunHistoryRequest"
            }
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/azure/credentials/mpn": {
      "post": {
        "summary": "WORK-IN-PROGRESS: Adding MpnSetting for Azure",
        "operationId": "Cover_AddMpnSetting",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AddMpnSettingRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/azure/credentials/partnercenter": {
      "post": {
        "summary": "WORK-IN-PROGRESS: PartnerCenterCredentials for Azure",
        "operationId": "Cover_AddPartnerCenterCredentials",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AddPartnerCenterCredentialsRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/billing/status": {
      "get": {
        "summary": "Get the Customer Subscription status from marketplace",
        "operationId": "Cover_GetCustomerSubscriptionStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCustomerSubscriptionStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/billingacct": {
      "post": {
        "summary": "Add Billing Account ID for GCP.",
        "operationId": "Cover_AddBillingAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1BillingAccountRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/billinggroups": {
      "get": {
        "summary": "Lists all billing groups.",
        "operationId": "Billing_ListBillingGroups",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1BillingGroup"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1BillingGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "fieldMask",
            "description": "Optional. Get only the value that set fieldMask.\n\nsee more info: https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/field_mask.proto",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "vendors",
            "description": "Optional. Filter vendor accounts included in BillingGroup. Format: vendors=vendor1,vendor2,vendor3.\nFor example, When Aws and Gcp to be filtered vendors=aws,gcp\nIf you want to get all vendors, not set parameter.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Billing"
        ]
      },
      "post": {
        "summary": "Registers a billing group.",
        "operationId": "Billing_CreateBillingGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BillingGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the Billing.CreateBillingGroup rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateBillingGroupRequest"
            }
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/billinggroups/billingconductor/{id}": {
      "get": {
        "summary": "WORK-IN-PROGRESS: Gets all Billing Groups in AWS Billing Conductor(ABC) for specific payer id.",
        "operationId": "Billing_ListAbcBillingGroups",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1AbcBillingGroup"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1AbcBillingGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Required. Payer Id.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/billinggroups/billingconductor/{payerId}/accounts": {
      "get": {
        "summary": "WORK-IN-PROGRESS: Gets all accounts associated to AWS Billing Conductor(ABC) Billing group",
        "operationId": "Billing_ListAbcBillingGroupAccounts",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1AbcAccount"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1AbcAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "payerId",
            "description": "Required. Payer Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "billingGroupArn",
            "description": "Required. BillingGroup Id.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/billinggroups/{billingInternalId}": {
      "get": {
        "summary": "Gets a billing group.",
        "operationId": "Billing_GetBillingGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetBillingGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "billingInternalId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fieldMask",
            "description": "Optional. Get only the value that set fieldMask.\n\nsee more info: https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/field_mask.proto",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/budget": {
      "post": {
        "summary": "WORK-IN-PROGRESS: Create Budget for specific cost group in an organization",
        "operationId": "Cover_CreateBudget",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateBudgetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateBudgetRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/budget/{id}": {
      "get": {
        "summary": "WORK-IN-PROGRESS: Get specific Budget data for a cost group in an organization",
        "operationId": "Cover_GetBudget",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetBudgetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Required. Budget ID.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cover"
        ]
      },
      "delete": {
        "summary": "WORK-IN-PROGRESS: Delete Budget for specific cost group in an organization",
        "operationId": "Cover_DeleteBudget",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteBudgetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Required. Budget ID.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cover"
        ]
      },
      "put": {
        "summary": "WORK-IN-PROGRESS: Update Budget for specific cost group in an organization",
        "operationId": "Cover_UpdateBudget",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateBudgetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Required. Budget ID.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "budgetData": {
                  "$ref": "#/definitions/coverBudgetData"
                }
              }
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/budget:read": {
      "post": {
        "summary": "WORK-IN-PROGRESS: List all Budgets in an organization or Budgets under specific cost group",
        "operationId": "Cover_ListBudgets",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1ListBudgetsResponse"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1ListBudgetsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListBudgetsRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/categories": {
      "get": {
        "summary": "Retrieve the categories to be utilized in the creation of the cost group.",
        "operationId": "Cover_GetCategories",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCategoriesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/channels": {
      "post": {
        "summary": "WORK-IN-PROGRESS: Create Channel under organization",
        "operationId": "Cover_CreateChannel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateChannelResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateChannelRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/channels/{id}": {
      "get": {
        "summary": "WORK-IN-PROGRESS: Get Specific Channel under organization",
        "operationId": "Cover_GetChannelDetails",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetChannelDetailsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Required. Channel ID.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cover"
        ]
      },
      "delete": {
        "summary": "WORK-IN-PROGRESS: Delete Specific Channel under organization",
        "operationId": "Cover_DeleteChannel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteChannelResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Required. Channel ID.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cover"
        ]
      },
      "put": {
        "summary": "WORK-IN-PROGRESS: Update Specific Channel under organization",
        "operationId": "Cover_UpdateChannelDetails",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateChannelDetailsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Required. Channel ID.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "title": "If optional fields are not supplied, no changes occur.\nOptional. Either actual email address or slack/msteams channel name"
                },
                "type": {
                  "type": "string",
                  "description": "Optional. email, slack, or msteams."
                },
                "webhookUrl": {
                  "type": "string",
                  "description": "Optional. Only needed for slack and msteams type."
                }
              },
              "title": "Request message for UpdateChannelDetails"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/channels:read": {
      "post": {
        "summary": "WORK-IN-PROGRESS: Get Channels under organization",
        "operationId": "Cover_GetChannels",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1GetChannelsResponse"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1GetChannelsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetChannelsRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/chargecode/upload": {
      "post": {
        "summary": "Upload charge code",
        "operationId": "Cover_UploadChargeCode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UploadChargeCodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": " (streaming inputs)",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UploadChargeCodeRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/costgroups": {
      "get": {
        "summary": "Get all the cost groups",
        "operationId": "Cover_GetCostGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCostGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Cover"
        ]
      },
      "post": {
        "summary": "Create a cost group",
        "operationId": "Cover_CreateCostGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateCostGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateCostGroupRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/costgroups/resolve/{costGroupId}": {
      "get": {
        "operationId": "Cover_ResolveCostGroupCombinations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ResolveCostGroupCombinationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "costGroupId",
            "description": "Required. Cost Group Id.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/costgroups/{costGroupId}": {
      "get": {
        "summary": "Get the details of the cost group",
        "operationId": "Cover_GetCostGroupDetails",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCostGroupDetailsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "costGroupId",
            "description": "Required. Cost Group Id.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cover"
        ]
      },
      "delete": {
        "summary": "Deletes a cost group",
        "operationId": "Cover_DeleteCostGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteCostGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "costGroupId",
            "description": "Required. Cost Group Id.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/costgroups/{costGroupId}/anomaly": {
      "post": {
        "summary": "Sets Cost group's anomaly options",
        "operationId": "Cover_SetCostGroupAnomalyOptions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SetCostGroupAnomalyOptionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "costGroupId",
            "description": "Required. Cost Group Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "threshold": {
                  "type": "number",
                  "format": "float",
                  "title": "Required"
                },
                "isPercentage": {
                  "type": "boolean",
                  "description": "Required. When set to true, the threshold is a percentage to the actual cost. Otherwise, it is a fixed amount."
                },
                "pastDataInMonths": {
                  "type": "string",
                  "format": "int64",
                  "description": "Optional. The number of past months to be used in training the model. Note: This will affect the results of anomaly detection. Default and max is 9 while min is 1."
                }
              }
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/costgroups/{costGroupId}/colortheme": {
      "put": {
        "summary": "Update cost group's color theme",
        "operationId": "Cover_UpdateCostGroupColorTheme",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateCostGroupColorThemeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "costGroupId",
            "description": "Required. Cost Group Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "colorTheme": {
                  "type": "string",
                  "description": "Required. Color Theme."
                }
              },
              "title": "Request message for UpdateCostGroupColorTheme"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/costgroups/{costGroupId}/combinations": {
      "put": {
        "summary": "Update cost group's combinations",
        "operationId": "Cover_UpdateCostGroupCombinations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateCostGroupCombinationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "costGroupId",
            "description": "Required. Cost Group Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "combinations": {
                  "$ref": "#/definitions/coverCombinations"
                }
              },
              "title": "Request message for UpdateCostGroupCombinations"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/costgroups/{costGroupId}/description": {
      "put": {
        "summary": "Update cost group's description",
        "operationId": "Cover_UpdateCostGroupDescription",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateCostGroupDescriptionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "costGroupId",
            "description": "Required. Cost Group Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "description": "Required. Description."
                }
              },
              "title": "Request message for UpdateCostGroupDescription"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/costgroups/{costGroupId}/eventIndicator": {
      "post": {
        "summary": "Sets Cost group's event indicator",
        "operationId": "Cover_SetCostGroupEventIndicator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SetCostGroupEventIndicatorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "costGroupId",
            "description": "Required. Cost Group Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "anomaly": {
                  "type": "boolean",
                  "title": "Required. Only anomaly is supported as of now"
                }
              }
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/costgroups/{costGroupId}/icon": {
      "put": {
        "summary": "Update cost group's icon",
        "operationId": "Cover_UpdateCostGroupIcon",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateCostGroupIconResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "costGroupId",
            "description": "Required. Cost Group Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "icon": {
                  "type": "string",
                  "description": "Required. Icon."
                }
              },
              "title": "Request message for UpdateCostGroupIcon"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/costgroups/{costGroupId}/image": {
      "put": {
        "summary": "Update cost group's image",
        "operationId": "Cover_UpdateCostGroupImage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateCostGroupImageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "costGroupId",
            "description": "Required. Cost Group Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "image": {
                  "type": "string",
                  "description": "Required. Image."
                }
              },
              "title": "Request message for UpdateCostGroupImage"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/costgroups/{costGroupId}/member/add": {
      "post": {
        "summary": "Assign a member to a cost group",
        "operationId": "Cover_AssignCostGroupMember",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AssignCostGroupMemberResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "costGroupId",
            "description": "Required. Cost Group Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string",
                  "description": "Required. User Id."
                }
              },
              "title": "Request message for AssignCostGroupMember"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/costgroups/{costGroupId}/member/remove": {
      "post": {
        "summary": "Remove a member from a cost group",
        "operationId": "Cover_RemoveCostGroupMember",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RemoveCostGroupMemberResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "costGroupId",
            "description": "Required. Cost Group Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string",
                  "description": "Required. User Id."
                }
              },
              "title": "Request message for RemoveCostGroupMember"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/costgroups/{costGroupId}/name": {
      "put": {
        "summary": "Update cost group's name",
        "operationId": "Cover_UpdateCostGroupName",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateCostGroupNameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "costGroupId",
            "description": "Required. Cost Group Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Required. Name."
                }
              },
              "title": "Request message for UpdateCostGroupName"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/costusage:read": {
      "post": {
        "summary": "WORK-IN-PROGRESS: Get usage and usage-based costs for the specified costgroup",
        "operationId": "Cover_GetCostUsage",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/blueapicoverv1CostItem"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of blueapicoverv1CostItem"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetCostUsageRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/discount": {
      "post": {
        "summary": "Get the discount recommendations for every account in a cost group",
        "operationId": "Cover_GetDiscountRecommendations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetDiscountRecommendationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetDiscountRecommendationsRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/invoice/status/{date}:read": {
      "post": {
        "summary": "WORK-IN-PROGRESS: Reads an invoice status. Only available in Ripple.",
        "operationId": "Billing_ListInvoiceStatus",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/apiInvoiceMessage"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of apiInvoiceMessage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "date",
            "description": "Required. Month to get invoice status. Format: `yyyymm`.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Request message for the ListInvoiceStatus rpc."
            }
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/invoice/status/{id}": {
      "get": {
        "summary": "Gets an invoice. Only available in Ripple.",
        "operationId": "Billing_GetInvoiceStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiInvoiceMessage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Required. invoice generate request id.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/invoice/{date}:create": {
      "post": {
        "summary": "Creates an invoice. Only available in Ripple.",
        "operationId": "Billing_CreateInvoice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiInvoiceMessage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "date",
            "description": "Required. Month to get invoice. Format: `yyyymm`.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "vendor": {
                  "type": "string",
                  "description": "Required. At the moment, only `aws` is supported."
                },
                "allGroups": {
                  "type": "boolean",
                  "description": "Optional. You can set all billing groups.\n\nIf this parameter is not set, The list set to `groups` is used."
                },
                "groups": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "Optional. You can set it to a list of billing internal group id"
                }
              },
              "description": "Request message for the CreateInvoice rpc."
            }
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/invoice/{date}:export": {
      "post": {
        "summary": "Exports an invoice.",
        "operationId": "Billing_ExportInvoiceFile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ExportInvoiceFileResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "date",
            "description": "Required. Month to get invoice. Format: `yyyymm`.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "groupId": {
                  "type": "string",
                  "description": "Optional.\n\nFor Ripple, only billing internal ids are supported at the moment. You can set it to a single group or a comma-separated list of groups. ex) `group1,group2`. if want to set all group, set `*`. \n\nImplied as the parent billing group for Wave(Pro) users."
                }
              },
              "description": "Request message for the ExportCostFiltersFile rpc."
            }
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/invoice/{date}:preview": {
      "put": {
        "summary": "Updates an invoice preview. Only available in Ripple.",
        "operationId": "Billing_UpdateInvoicePreviews",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "date",
            "description": "Required. Month to get invoice. Format: `yyyymm`.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "allGroups": {
                  "type": "boolean",
                  "description": "Optional. You can set all billing groups.\n\nIf this parameter is not set, The list set to `groups` is used."
                },
                "groups": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "Optional. You can set it to a list of billing internal group id"
                },
                "enabled": {
                  "type": "boolean",
                  "description": "Required. You can set display or hiding.\n\nIf true, Hiding Invoice. If false, Display Invoice."
                }
              },
              "description": "Request message for the UpdateInvoicePreviews rpc."
            }
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/invoice/{date}:read": {
      "post": {
        "summary": "Gets an invoice.",
        "operationId": "Billing_GetInvoice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiInvoice"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "date",
            "description": "Required. Month to get invoice. Format: `yyyymm`.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "groupId": {
                  "type": "string",
                  "description": "Required.\n\nFor Ripple, only billing internal ids are supported at the moment. You can set it to a single group\n\nImplied as the parent billing group for Wave(Pro) users."
                }
              },
              "description": "Request message for the Cost.GetInvoiceRequest rpc."
            }
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/invoice:read": {
      "post": {
        "summary": "Reads list of the invoice.",
        "operationId": "Billing_ListInvoice",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1ListInvoiceResponse"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1ListInvoiceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the ListInvoice rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListInvoiceRequest"
            }
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/marketplace/info": {
      "post": {
        "summary": "Adding orgId to marketplace customers",
        "operationId": "Cover_AddInfotoMarketplace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AddInfotoMarketplaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AddInfotoMarketplaceRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/me": {
      "get": {
        "summary": "Get the details of the logged-in user",
        "operationId": "Cover_GetUserDetails",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetUserDetailsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/me/apptheme": {
      "put": {
        "summary": "Modify user's app theme",
        "operationId": "Cover_UpdateUserAppTheme",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateUserAppThemeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateUserAppThemeRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/me/attributes": {
      "put": {
        "summary": "Modify attributes",
        "operationId": "Cover_UpdateUserAttributes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateUserAttributesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateUserAttributesRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/me/avatar": {
      "put": {
        "summary": "Modify user's avatar",
        "operationId": "Cover_UpdateUserAvatar",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateUserAvatarResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateUserAvatarRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/me/colortheme": {
      "put": {
        "summary": "Modify user's color theme",
        "operationId": "Cover_UpdateUserColorTheme",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateUserColorThemeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateUserColorThemeRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/me/email": {
      "put": {
        "summary": "Modify user's email",
        "operationId": "Cover_UpdateUserEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateUserEmailResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateUserEmailRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/me/icon": {
      "put": {
        "summary": "Modify user's icon",
        "operationId": "Cover_UpdateUserIcon",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateUserIconResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateUserIconRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/me/locale": {
      "put": {
        "summary": "Modify user's locale",
        "operationId": "Cover_UpdateUserLocale",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateUserLocaleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateUserLocaleRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/me/mainview": {
      "put": {
        "summary": "Modify user's main view",
        "operationId": "Cover_UpdateUserMainView",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateUserMainViewResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateUserMainViewRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/me/name": {
      "put": {
        "summary": "Modify user's name",
        "operationId": "Cover_UpdateUserName",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateUserNameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateUserNameRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/me/password": {
      "post": {
        "summary": "Reset user's password",
        "operationId": "Cover_ResetUserPassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ResetUserPasswordResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ResetUserPasswordRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/me/timezone": {
      "put": {
        "summary": "Modify user's timezone",
        "operationId": "Cover_UpdateUserTimezone",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateUserTimezoneResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateUserTimezoneRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/members": {
      "get": {
        "summary": "Get all the members/subusers of the company",
        "operationId": "Cover_GetMembers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMembersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Cover"
        ]
      },
      "post": {
        "summary": "Create a member",
        "operationId": "Cover_CreateMember",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateMemberResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateMemberRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/members/activate": {
      "post": {
        "summary": "Activate the added user",
        "operationId": "Cover_ActivateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ActivateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ActivateUserRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/members/auth0": {
      "post": {
        "summary": "WORK-IN-PROGRESS: Add or read user from Auth0",
        "operationId": "Cover_ProcessAuth0User",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ProcessAuth0UserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ProcessAuth0UserRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/members/aws/subscription": {
      "post": {
        "summary": "WORK-IN-PROGRESS:Resolve user for aws marketplace subscription integration",
        "operationId": "Cover_ResolveAWSMarketplaceTokenForOnboarding",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ResolveAWSMarketplaceTokenForOnboardingResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ResolveAWSMarketplaceTokenForOnboardingRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/members/invite": {
      "post": {
        "summary": "Invite members to the system",
        "operationId": "Cover_InviteMember",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1InviteMemberResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1InviteMemberRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/members/onboard": {
      "post": {
        "summary": "Onboard an organization with an admin account and default cost group",
        "operationId": "Cover_OnboardOrg",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1OnboardOrgResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1OnboardOrgRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/members/profile": {
      "post": {
        "summary": "Profiling for new users.",
        "operationId": "Cover_CreateProfiling",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateProfilingResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateProfilingRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/members/profile/{email}": {
      "get": {
        "summary": "Octo getting user profile",
        "operationId": "Cover_GetUserProfile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetUserProfileResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "email",
            "description": "required email",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/members/register": {
      "post": {
        "summary": "Octo new user registration",
        "operationId": "Cover_RegisterNewUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RegisterNewUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RegisterNewUserRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/members/resetpassword": {
      "post": {
        "summary": "Reset member's password",
        "operationId": "Cover_ResetPassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ResetPasswordResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ResetPasswordRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/members/{userId}": {
      "get": {
        "summary": "Get the details of the user",
        "operationId": "Cover_GetMemberDetails",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMemberDetailsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "description": "Required. UserId.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cover"
        ]
      },
      "delete": {
        "summary": "Deletes a user",
        "operationId": "Cover_DeleteMember",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteMemberResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "description": "Required. UserId.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/members/{userId}/costgroup": {
      "get": {
        "summary": "Get the cost group to which the member is attached",
        "operationId": "Cover_GetMemberCostGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMemberCostGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "description": "Required. UserId.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/members/{userId}/isadmin": {
      "put": {
        "summary": "Modify member's permission",
        "operationId": "Cover_UpdateMemberPermission",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateMemberPermissionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "description": "Required. UserId.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "isAdmin": {
                  "type": "boolean",
                  "description": "Required. IsAdmin."
                }
              },
              "title": "Request message for UpdateMemberPermission"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/recommendations/optimization": {
      "get": {
        "summary": "Lists recommendations based on specified criteria.",
        "operationId": "Cover_ListRecommendations",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1ListRecommendationResponse"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1ListRecommendationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "costgroupId",
            "description": "Required. Cost Group Id.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "dateRangeStart",
            "description": "Required. Start date of retrieved data. If not set, the default would be today.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "dateRangeEnd",
            "description": "Required. End date of retrieved data. If not set, the default would be today.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "vendor",
            "description": "Valid inputs are: \"all\", \"aws\", \"gcp\", and  \"azure\". Default is \"all\".",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "source",
            "description": "Valid inputs are: \"all\", \"trustedadvisor\", \"costexplorer\", and  \"costoptimizationhub\". Default is \"all\".",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "optimizationStatus",
            "description": "Valid inputs are: \"in-progress\", \"error\", \"open\",\"done\" and \"all\"",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/recommendations/optimization/executed/{id}": {
      "post": {
        "summary": "Mark a recommendation executed.",
        "operationId": "Cover_MarkAsExecuted",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1MarkAsExecutedResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/recommendations/optimization/history": {
      "get": {
        "summary": "Lists recommendations based on specified criteria.",
        "operationId": "Cover_OptimizationHistory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1OptimizationHistoryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "costgroupId",
            "description": "Required. Cost Group Id.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "dateRangeStart",
            "description": "Required. Start date of retrieved data. If not set, default is three months past.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "dateRangeEnd",
            "description": "Required. End date of retrieved data.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "vendor",
            "description": "Required. Valid inputs are: \"all\", \"aws\", \"gcp\", and  \"azure\".",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "source",
            "description": "Valid inputs are: \"all\", \"trusted-advisor\", \"cost-explorer\", and  \"cost-optimization-hub\". Default is \"All\".",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "periodOption",
            "description": "Valid inputs are: \"daily\", \"monthly\". and \"yearly\". Default is \"monthly\".",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/recommendations/optimization/{id}": {
      "get": {
        "summary": "Retrieves a specific recommendation by its ID.",
        "operationId": "Cover_GetRecommendation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetRecommendationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "costGroupId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "PeriodOption",
            "description": "Valid inputs are: \"30days\", \"60days\". and \"90days\". Default is \"30days\".",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/recommendations/optimization/{recommendationId}": {
      "post": {
        "summary": "Executes optimization based on a recommendation.",
        "operationId": "Cover_ExecuteOptimization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ExecuteOptimizationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "recommendationId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "target": {
                  "type": "string"
                },
                "resourceId": {
                  "type": "string"
                },
                "vendor": {
                  "type": "string"
                },
                "service": {
                  "type": "string"
                },
                "category": {
                  "type": "string"
                },
                "region": {
                  "type": "string"
                },
                "awsOptions": {
                  "$ref": "#/definitions/coverAWS"
                },
                "gcpOptions": {
                  "$ref": "#/definitions/coverGCP"
                },
                "azureCspOptions": {
                  "$ref": "#/definitions/coverAzureCSP"
                }
              }
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/reports/fiscalmonth": {
      "get": {
        "summary": "Get Org's starting month/ fiscal month",
        "operationId": "Cover_GetOrgFiscalMonth",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetOrgFiscalMonthResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Cover"
        ]
      },
      "post": {
        "summary": "Sets Org's starting month/ fiscal month",
        "operationId": "Cover_SetOrgFiscalMonth",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SetOrgFiscalMonthResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SetOrgFiscalMonthRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/reports/insight/summary/{costGroupId}": {
      "get": {
        "summary": "Get data for insights reports summary",
        "operationId": "Cover_GetReportSummary",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetReportSummaryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "costGroupId",
            "description": "Required. Cost Group Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "startDate",
            "description": "Required. Start date Format: \"YYYYMMDD\"",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endDate",
            "description": "Required. End date Format: \"YYYYMMDD\"",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "reportType",
            "description": "Required. Report Type. Valid inputs are: \"quarterly\", \"yearly\"",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/resellers": {
      "get": {
        "summary": "ListResellers",
        "description": "**Lists all the reseller accounts.**\n\u003e **Only available in Ripple.**",
        "operationId": "Billing_ListResellers",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/rippleReseller"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of rippleReseller"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "fieldMask",
            "description": "Optional. Get only the value that set fieldMask.\n\nsee more info: https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/field_mask.proto",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Billing"
        ]
      },
      "post": {
        "summary": "Registers the reseller account. Only available in Ripple.",
        "operationId": "Billing_CreateReseller",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rippleReseller"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the CreateReseller rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateResellerRequest"
            }
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/resellers/{id}": {
      "get": {
        "summary": "Gets the reseller account. Only available in Ripple.",
        "operationId": "Billing_GetReseller",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rippleReseller"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Required. reseller id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fieldMask",
            "description": "Optional. Get only the value that set fieldMask.\n\nsee more info: https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/field_mask.proto",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Billing"
        ]
      },
      "delete": {
        "summary": "Deletes the reseller account. Only available in Ripple.",
        "operationId": "Billing_DeleteReseller",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Required. reseller id.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Billing"
        ]
      },
      "put": {
        "summary": "Updates the reseller account. Only available in Ripple.",
        "operationId": "Billing_UpdateReseller",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rippleReseller"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Required. reseller id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "Optional."
                },
                "password": {
                  "type": "string",
                  "description": "Optional.\n\nWe recommend a password length of 8~32 characters. If you send 0 characters, a password will be generated automatically."
                },
                "waveConfig": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/rippleResellerConfig"
                  },
                  "description": "Set only the config to be changed.\nFor example, If you want to change only dashboardGraph, set `{\"waveConfig\": [{\"key\": \"dashboardGraph\",\"value\": true}]}` as a parameter",
                  "title": "Optional. wave feature config"
                },
                "aquaConfig": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/rippleResellerConfig"
                  },
                  "description": "Set only the config to be changed.\nFor example, If you want to change only aqRiManagement, set `{\"waveConfig\": [{\"key\": \"aqRiManagement\",\"value\": true}]}` as a parameter",
                  "title": "Optional. aqua feature config"
                },
                "notification": {
                  "type": "boolean",
                  "description": "Optional.\n\nIf valid when email or password is updated, you will be notified via email address.\nIf only waveConfig or aquaConfig is changed, it is ignored."
                },
                "updateMask": {
                  "type": "string",
                  "description": "Required."
                }
              },
              "description": "Request message for the UpdateReseller rpc.",
              "required": [
                "updateMask"
              ]
            }
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/resources/accounts/{vendor}": {
      "get": {
        "summary": "WORK-IN-PROGRESS: Returns all registered accounts that are not associated to any billing groups and accounts found in CUR for the specified month. For Ripple only",
        "operationId": "Billing_ListAccountResources",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1ResourceAccount"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1ResourceAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws`,`azure`,`gcp` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "month",
            "description": "Optional. The UTC month to query. If empty, defaults to current month. Format is `yyyymm`.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/rightsizingrecommendation/{costGroupId}": {
      "get": {
        "summary": "Gets the right sizing recommendation of all the accounts in the costgroup",
        "operationId": "Cover_GetRightSizingRecommendation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetRightSizingRecommendationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "costGroupId",
            "description": "Required. Cost Group Id.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/servicediscounts/{groupId}/account": {
      "delete": {
        "summary": "Deletes the account invoice service discounts. Only available in Ripple.",
        "operationId": "Billing_DeleteAccountInvoiceServiceDiscounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "groupId",
            "description": "Required.\n\nFor Ripple, only billing internal ids are supported at the moment. You can set it to a single group\n\nImplied as the parent billing group for Wave(Pro) users.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Billing"
        ]
      },
      "post": {
        "summary": "Registers the account invoice service discounts. Only available in Ripple.",
        "operationId": "Billing_CreateAccountInvoiceServiceDiscounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateAccountInvoiceServiceDiscountsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "groupId",
            "description": "Required.\n\nFor Ripple, only billing internal ids are supported at the moment. You can set it to a single group\n\nImplied as the parent billing group for Wave(Pro) users.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "accounts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/v1AccountServiceDiscounts"
                  },
                  "description": "Required."
                }
              },
              "description": "Request message for the CreateAccountInvoiceServiceDiscounts rpc."
            }
          }
        ],
        "tags": [
          "Billing"
        ]
      },
      "put": {
        "summary": "Updates the account invoice service discounts. Only available in Ripple.",
        "operationId": "Billing_UpdateAccountInvoiceServiceDiscounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateAccountInvoiceServiceDiscountsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "groupId",
            "description": "Required.\n\nFor Ripple, only billing internal ids are supported at the moment. You can set it to a single group\n\nImplied as the parent billing group for Wave(Pro) users.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "accounts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/v1AccountServiceDiscounts"
                  },
                  "description": "Required."
                }
              },
              "description": "Request message for the UpdateAccountInvoiceServiceDiscounts rpc."
            }
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/servicediscounts/{groupId}/account:read": {
      "post": {
        "summary": "Reads the account invoice service discounts. Only available in Ripple.",
        "operationId": "Billing_ListAccountInvoiceServiceDiscounts",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1AccountInvoiceServiceDiscounts"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1AccountInvoiceServiceDiscounts"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "groupId",
            "description": "Required.\n\nFor Ripple, only billing internal ids are supported at the moment. You can set it to a single group\n\nImplied as the parent billing group for Wave(Pro) users.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Request message for the ListAccountInvoiceServiceDiscounts rpc."
            }
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/servicediscounts/{groupId}/account:remove": {
      "put": {
        "summary": "Removes the account invoice service discounts. Only available in Ripple.",
        "operationId": "Billing_RemoveAccountInvoiceServiceDiscounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "groupId",
            "description": "Required.\n\nFor Ripple, only billing internal ids are supported at the moment. You can set it to a single group\n\nImplied as the parent billing group for Wave(Pro) users.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "accounts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/v1AccountServiceDiscounts"
                  },
                  "description": "Required."
                }
              }
            }
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/servicediscounts:read": {
      "post": {
        "summary": "Reads the invoice service discounts. Only available in Ripple.",
        "operationId": "Billing_ListInvoiceServiceDiscounts",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1InvoiceServiceDiscounts"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1InvoiceServiceDiscounts"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the ListInvoiceServiceDiscounts rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListInvoiceServiceDiscountsRequest"
            }
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/settings": {
      "get": {
        "summary": "WORK-IN-PROGRESS: Gets all billing settings.",
        "operationId": "Billing_GetBillingSetting",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetBillingSettingResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "fieldMask",
            "description": "Optional. Get only the value that set fieldMask.\n\nsee more info: https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/field_mask.proto",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/views": {
      "get": {
        "summary": "Get all the views",
        "operationId": "Cover_GetViews",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetViewsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Cover"
        ]
      },
      "post": {
        "summary": "Create a view",
        "operationId": "Cover_CreateView",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateViewResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateViewRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/views/favorite/add": {
      "put": {
        "summary": "Add to favorites",
        "operationId": "Cover_AddFavorite",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AddFavoriteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AddFavoriteRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/views/favorite/remove": {
      "put": {
        "summary": "Remove from favorites",
        "operationId": "Cover_RemoveFavorite",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RemoveFavoriteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RemoveFavoriteRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/views/favorites": {
      "get": {
        "summary": "Get favorite views",
        "operationId": "Cover_GetFavoriteViews",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetFavoriteViewsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/views/layout/{viewId}": {
      "put": {
        "summary": "Updates the view's layout",
        "operationId": "Cover_UpdateViewLayout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateViewLayoutResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "viewId",
            "description": "Required. View Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "layout": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/coverWidgetData"
                  }
                }
              },
              "title": "Request message for UpdateViewLayout"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/views/layout/{viewId}/{widgetId}": {
      "put": {
        "summary": "Updates the view's widget",
        "operationId": "Cover_UpdateViewWidget",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateViewWidgetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "viewId",
            "description": "Required. View Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "widgetId",
            "description": "Required. Widget Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "options": {
                  "type": "object"
                },
                "requests": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/coverLayoutRequests"
                  }
                }
              },
              "title": "Request message for UpdateViewWidget"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/views/publish": {
      "post": {
        "summary": "Publish current view",
        "operationId": "Cover_PublishView",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1PublishViewResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PublishViewRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/views/{viewId}": {
      "get": {
        "summary": "Get the details of the current view",
        "operationId": "Cover_GetCurrentView",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCurrentViewResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "viewId",
            "description": "Required. View Id.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cover"
        ]
      },
      "delete": {
        "summary": "Deletes a view",
        "operationId": "Cover_DeleteView",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteViewResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "viewId",
            "description": "Required. View Id.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cover"
        ]
      },
      "put": {
        "summary": "Updates the view details",
        "operationId": "Cover_UpdateView",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateViewResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "viewId",
            "description": "Required. View Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "icon": {
                  "type": "string"
                },
                "isPrivate": {
                  "type": "boolean"
                },
                "isEditable": {
                  "type": "boolean"
                },
                "colorTheme": {
                  "type": "string"
                }
              },
              "title": "Request message for UpdateView"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/views/{viewId}/colortheme": {
      "put": {
        "summary": "Update view's color theme",
        "operationId": "Cover_UpdateViewColorTheme",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateViewColorThemeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "viewId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "colorTheme": {
                  "type": "string"
                }
              },
              "title": "Request message for UpdateViewColorTheme"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/views/{viewId}/sidemenufavorite": {
      "post": {
        "summary": "Add as side menu favorite",
        "operationId": "Cover_AddSideMenuFavorite",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AddSideMenuFavoriteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "viewId",
            "description": "Required. View Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "menuItemId": {
                  "type": "string"
                }
              },
              "title": "Request message for AddSideMenuFavorite"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/views/{viewId}/sidemenustate": {
      "put": {
        "summary": "Updates the side menu state",
        "operationId": "Cover_UpdateSideMenuState",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateSideMenuStateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "viewId",
            "description": "Required. View Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "sidemenustate": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/coverSideMenuState"
                  }
                }
              },
              "title": "Request message for UpdateSideMenuState"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/views/{viewId}/sidemenuunfavorite": {
      "post": {
        "summary": "Remove from side menu favorite",
        "operationId": "Cover_RemoveSideMenuFavorite",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RemoveSideMenuFavoriteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "viewId",
            "description": "Required. View Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "menuItemId": {
                  "type": "string"
                }
              },
              "title": "Request message for RemoveSideMenuFavorite"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/x/pcc": {
      "post": {
        "summary": "WORK-IN-PROGRESS: Do not use.",
        "operationId": "Cover_ProxyCreateCompletion",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1ProxyCreateCompletionResponse"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1ProxyCreateCompletionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request message for the ProxyCreateCompletion rpc.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ProxyCreateCompletionRequest"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/{vendor_1}/payers": {
      "get": {
        "summary": "Get list of all payers",
        "operationId": "Cover_GetPayers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetPayersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor_1",
            "description": "Required. Cloud vendor.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cover"
        ]
      },
      "post": {
        "summary": "Assign payer to a linked account",
        "operationId": "Cover_AssignPayer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AssignPayerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor_1",
            "description": "Required. Cloud vendor.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "accountId": {
                  "type": "string",
                  "description": "Required. Account Id."
                },
                "payerId": {
                  "type": "string",
                  "description": "Required. The Payer Id."
                }
              },
              "title": "Request message for AssignPayer"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/{vendor}/account": {
      "post": {
        "summary": "Registers an account",
        "operationId": "Cover_RegisterAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. Cloud vendor.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "accountId": {
                  "type": "string",
                  "description": "Required. The AWS account Id."
                },
                "accountName": {
                  "type": "string",
                  "title": "The account name"
                }
              },
              "description": "Request message for the RegisterAccount rpc."
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/{vendor}/accounts": {
      "get": {
        "summary": "Lists all vendor accounts.",
        "operationId": "Cost_ListAccounts",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/blueapiapiAccount"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of blueapiapiAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, `aws` and `gcp` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupId",
            "description": "Optional. The billing group internal id. Only valid for Ripple users.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldMask",
            "description": "Optional.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cost"
        ]
      },
      "post": {
        "summary": "Registers a vendor account.",
        "operationId": "Cost_CreateAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/blueapiapiAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Required. The account id to register."
                },
                "name": {
                  "type": "string",
                  "description": "Optional. If empty, set to the value of `id`."
                },
                "parent": {
                  "type": "string",
                  "description": "Optional. The parent `billingInternalId` of the billing group to which this account will belong to."
                },
                "awsOptions": {
                  "$ref": "#/definitions/v1CreateAccountRequestAwsOptions",
                  "description": "Required for the `aws` vendor. AWS-specific options."
                },
                "gcpOptions": {
                  "$ref": "#/definitions/v1CreateAccountRequestGcpOptions",
                  "description": "Required for the `gcp` vendor. GCP-specific options."
                }
              },
              "description": "Request message for the Cost.CreateAccount rpc."
            }
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/{vendor}/accounts/customers/accounts:check": {
      "post": {
        "summary": "WORK-IN-PROGRESS: Check inputed accountIds belong to current MSP or not",
        "operationId": "Cost_CheckAccountsBelongToMsp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CheckAccountsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "accountIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Required. A comma-separated list of account ids. For example, you set to [\"accountId1\",\"accountId2\",\"accountId3\"]."
                }
              }
            }
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/{vendor}/accounts/groups/{groupId}": {
      "get": {
        "summary": "Lists all vendor accounts.",
        "operationId": "Cost_ListAccounts2",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/blueapiapiAccount"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of blueapiapiAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, `aws` and `gcp` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupId",
            "description": "Optional. The billing group internal id. Only valid for Ripple users.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fieldMask",
            "description": "Optional.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/{vendor}/accounts/{costGroupId}": {
      "get": {
        "summary": "Get list of registered accounts",
        "operationId": "Cover_GetAccounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAccountsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. Cloud vendor.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "costGroupId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/{vendor}/accounts/{id}": {
      "get": {
        "summary": "Gets a vendor account. This API includes all of the account's metadata. See https://alphauslabs.github.io/blueapi/ for the list of supported attributes.",
        "operationId": "Cost_GetAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/blueapiapiAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, `aws` and `gcp` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "Required. The account id to retrieve.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fieldMask",
            "description": "Optional.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cost"
        ]
      },
      "delete": {
        "summary": "WORK-IN-PROGRESS: Deletes a vendor account.",
        "operationId": "Cost_DeleteAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "Required. The account id to delete.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cost"
        ]
      },
      "put": {
        "summary": "WORK-IN-PROGRESS: Updates a vendor account. Only available in Ripple.",
        "operationId": "Cost_UpdateAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/blueapiapiAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "Required.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Optional."
                }
              },
              "description": "Request message for the Cost.UpdateAccount rpc."
            }
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/{vendor}/adjustments:read": {
      "post": {
        "summary": "Reads the non-usage-based details of an organization (Ripple) or billing group (Wave). This API covers non-usage-based adjustments, such as Fees, Credits, Discounts, Tax, Upfront Fees, etc. At the moment, the supported {vendor} is 'aws' or 'azure'. If datetime range parameters are not set, month-to-date (current month) will be returned.",
        "operationId": "Cost_ReadAdjustments",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/blueapicostv1CostItem"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of blueapicostv1CostItem"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` or `azure` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "groupId": {
                  "type": "string",
                  "description": "Optional. At the moment, only billing internal ids are supported. If set, reads the non-usage-based adjustment details of this group. Valid only if `accountId` is not set. If both `groupId` and `accountId` are not set, reads the adjustment details of the whole organization. Only valid for Ripple users. Implied (or discarded) for Wave(Pro) users."
                },
                "accountId": {
                  "type": "string",
                  "description": "Optional. If set, reads the non-usaged-based adjustment details of this account. Also invalidates the `groupId` value even if set. If both `groupId` and `accountId` are not set, reads the adjustment details of the whole organization."
                },
                "startTime": {
                  "type": "string",
                  "description": "Optional. The UTC date to start streaming data from. If not set, the first day of the current month will be used. Format: `yyyymmdd`."
                },
                "endTime": {
                  "type": "string",
                  "description": "Optional. The UTC date to end the streaming data. If not set, current date will be used. Format: `yyyymmdd`."
                },
                "awsOptions": {
                  "$ref": "#/definitions/v1ReadAdjustmentsRequestAwsOptions",
                  "description": "Optional. Valid only for the `aws` vendor. AWS-specific options."
                }
              },
              "description": "Request message for the Cost.ReadAdjustments rpc."
            }
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/{vendor}/alerts/{id}": {
      "get": {
        "summary": "Get the budget alerts for the account id. Only available in Wave(Pro).",
        "operationId": "Cost_GetAccountBudgetAlerts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiwaveBudgetAlert"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "Required. Account Id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cost"
        ]
      },
      "delete": {
        "summary": "Delete the budget alerts for the account id. Only available in Wave(Pro).",
        "operationId": "Cost_DeleteAccountBudgetAlerts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "Required. Account Id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cost"
        ]
      },
      "post": {
        "summary": "Create the budget alerts for the account id. Only available in Wave(Pro).",
        "operationId": "Cost_CreateAccountBudgetAlerts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiwaveBudgetAlert"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "Required. Account Id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "budgetAlert": {
                  "$ref": "#/definitions/apiwaveBudgetAlert",
                  "description": "Required. Budget alert setting."
                }
              },
              "title": "Request message for CreateAccountBudgetAlerts"
            }
          }
        ],
        "tags": [
          "Cost"
        ]
      },
      "put": {
        "summary": "Update the budget alerts for the account id. Only available in Wave(Pro).",
        "operationId": "Cost_UpdateAccountBudgetAlerts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiwaveBudgetAlert"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "Required. Account Id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "budgetAlert": {
                  "$ref": "#/definitions/apiwaveBudgetAlert",
                  "description": "Required. Budget alert setting.\n\nSet only the setting value to be changed.\nFor example, If you want to change only daily value, set `{\"budget\":[{\"id\":\"daily\",\"value\":100,\"enabled\":true}}` as a parameter\nThe same goes for notification. If you want to change only email value, set `{\"notification\":[{\"id\":\"email\",\"destination\":\"budgetalert-example@alphaus.cloud\",\"enabled\":true}}` as a parameter"
                }
              },
              "title": "Request message for UpdateAccountBudgetAlerts"
            }
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/{vendor}/bep/{orgId}": {
      "get": {
        "summary": "Get the breakeven point details for the RI or SP.",
        "operationId": "Cost_GetBreakevenPoint",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetBreakevenPointResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgId",
            "description": "Required. Organization Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "description": "Required. For AWS, \"ri\" or \"sp\".",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "arn",
            "description": "Required. RI/SP Arn.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/{vendor}/budget/{budgetId}": {
      "delete": {
        "summary": "Removes monthly budget for the account/acctgroup id from database.",
        "operationId": "Cost_DeleteAccountBudget",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "budgetId",
            "description": "Required. Budget Id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cost"
        ]
      },
      "put": {
        "summary": "Updates monthly budget for the account/acctgroup id.",
        "operationId": "Cost_UpdateAccountBudget",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "budgetId",
            "description": "Required. Budget Id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/blueapiapiBudget"
                }
              },
              "title": "Request message for UpdateAccountBudget"
            }
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/{vendor}/budget/{level}/{id}": {
      "get": {
        "summary": "Fetches monthly budget for the account/acctgroup id.",
        "operationId": "Cost_GetAccountBudget",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAccountBudgetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "level",
            "description": "Required. 'account' or 'acctgroup'",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "Required. Account or AccountGroup Id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "year",
            "description": "Optional. Default is current year. Format: `yyyy`.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cost"
        ]
      },
      "post": {
        "summary": "Creates monthly budget for the account/acctgroup id.",
        "operationId": "Cost_CreateAccountBudget",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateAccountBudgetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "level",
            "description": "Required. 'account' or 'acctgroup'",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "Required. Account or AccountGroup Id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/blueapiapiBudget"
                }
              },
              "title": "Request message for CreateAccountBudget"
            }
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/{vendor}/calculations/history": {
      "get": {
        "summary": "Lists vendor costs calculations history and statuses.",
        "operationId": "Cost_ListCalculationsHistory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListCalculationsHistoryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "asOf",
            "description": "Optional. List operations on and after this date. Format is yyyymmdd. For example, if you want to list all operations starting from June 01, 2021, set to `20210601`. If not set, defaults to the first day of the current UTC month.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "excludeDone",
            "description": "Optional. If true, exclude all operations that are marked as done. Include by default.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/{vendor}/calculations/schedules": {
      "get": {
        "summary": "Lists the schedules of your monthly calculations. Only available in Ripple.",
        "operationId": "Cost_ListCalculationsSchedules",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListCalculationsSchedulesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cost"
        ]
      },
      "post": {
        "summary": "Creates a schedule to trigger your monthly calculations. At the moment, only one schedule is allowed per account. Only available in Ripple.",
        "operationId": "Cost_CreateCalculationsSchedule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CalculationsSchedule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "schedule": {
                  "type": "string",
                  "description": "Required. The desired schedule in UTC, using the unix-cron string format `* * * * *` which is a set of five fields in a line using the order: `minute hour day-of-the-month month day-of-the-week`.\n\n* `minute` values can be `0-59`\n* `hour` values can be `0-23`\n* `day-of-the-month` values can be `1-31`\n* `month` values can be `1-12`, or `JAN-DEC`\n* `day-of-the-week` values can be `0-6`, or `SUN-SAT`, or `7` for Sunday\n\nSpecial characters:\n* A field can contain an asterisk (*), which always stands for \"first-last\".\n* Ranges are two numbers separated with a hyphen (-) and the specified range is inclusive.\n* Following a range with `/NUMBER` specifies skips of the number's value through the range. For example, both `0-23/2` and `*/2` can be used in the `hour` field to specify execution every two hours.\n* A list is a set of numbers (or ranges) separated by commas (,). For example, `1,2,5,6` in the `month` field specifies an execution on the first, second, fifth, and sixth days of the month."
                },
                "scheduleMacro": {
                  "type": "string",
                  "description": "Optional. Non-standard macro(s) that augment(s) `schedule`'s behavior. The only supported value for now is `@endofmonth`.\n\n`@endofmonth` - If set, the backend scheduler will only use the `minute` and `hour` part of `schedule`'s value and set the days to 28th, 29th, 30th, and 31st but the runner will do the filtering for the actual end of the trigger month. Note that this is different than setting `schedule` to, say, `0 0 28-31 * *`."
                },
                "targetMonth": {
                  "type": "string",
                  "description": "Optional. The desired month to calculate. If not set, defaults to previous month. The only supported value for now is `@current`.\n\n`@current` - If set, calculate for the month the schedule is triggered (or current month)."
                },
                "notificationChannel": {
                  "type": "string",
                  "description": "Optional. The channel id to use for notifications. At the moment, only email-type notification channels are supported. If not set, your default channel will be used. And if non-existent, an email-type notification channel will be created using your primary email address."
                },
                "force": {
                  "type": "boolean",
                  "description": "Optional. Not used at the moment."
                },
                "dryRun": {
                  "type": "boolean",
                  "description": "Optional. If set to true, skips the actual calculations. Useful as test, or reminder."
                }
              },
              "description": "Request message for the Cost.CreateCalculationsSchedule rpc."
            }
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/{vendor}/calculations/schedules/{id}": {
      "delete": {
        "summary": "Deletes the schedule of your monthly calculations. Only available in Ripple.",
        "operationId": "Cost_DeleteCalculationsSchedule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "Required. The id to delete. Can be set to either `-` or `*`, which means all.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/{vendor}/calculator/config": {
      "get": {
        "summary": "WORK-IN-PROGRESS: Gets the vendor cost calculator's current configuration.",
        "operationId": "Cost_GetCalculatorConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCalculatorConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/{vendor}/calculator/config/costmods": {
      "get": {
        "summary": "Lists the cost calculator's cost modifiers. At the moment, the supported {vendor} is 'aws'. Only available in Ripple.",
        "operationId": "Cost_ListCalculatorCostModifiers",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1CalculatorCostModifier"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1CalculatorCostModifier"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cost"
        ]
      },
      "post": {
        "summary": "Creates a cost modifier. A cost modifier allows you to modify the cost per lineitem. At the moment, the supported {vendor} is 'aws' and only applies to items not affected by trueunblended calculations. Items not covered include some usages under AmazonEC2, AmazonRDS, AmazonElastiCache, AmazonES, and AmazonRedShift, that are covered by their respective RIs and/or SPs. Non-usage items such as discounts, refunds, fees, etc. are also not covered. Only available in Ripple.",
        "operationId": "Cost_CreateCalculatorCostModifier",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateCalculatorCostModifierResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "awsOptions": {
                  "$ref": "#/definitions/v1CalculatorCostModifierAwsOptions",
                  "description": "Required if `{vendor}` is `aws`. AWS-specific options."
                }
              },
              "description": "Request message for the Cost.CreateCalculatorCostModifier rpc."
            }
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/{vendor}/calculator/config/costmods/{id}": {
      "delete": {
        "summary": "Deletes a cost modifier. At the moment, the supported {vendor} is 'aws'. Only available in Ripple.",
        "operationId": "Cost_DeleteCalculatorCostModifier",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "Required. The id of the modifier to delete.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/{vendor}/calculator/running:read": {
      "post": {
        "summary": "Lists the vendor calculator's queued accounts for calculation. If result is non-empty, it means calculation is still in progress for the returned accounts. Only available in Ripple.",
        "operationId": "Cost_ListCalculatorRunningAccounts",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1ListCalculatorRunningAccountsResponse"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1ListCalculatorRunningAccountsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "month": {
                  "type": "string",
                  "description": "Optional. The UTC month to query. Defaults to current month if empty. Format is `yyyymm`. For example, June 2021 will be `202106`."
                }
              },
              "description": "Request message for the Cost.ListCalculatorRunningAccounts rpc."
            }
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/{vendor}/costattrs": {
      "get": {
        "summary": "WORK-IN-PROGRESS: Reads the available cost attributes of an organization (Ripple) or billing group (Wave).",
        "operationId": "Cost_GetCostAttributes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCostAttributesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "month",
            "description": "Required. Format: `yyyy-mm`.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "groupId",
            "description": "Optional. If set, reads the cost attributes of this group. Only valid for Ripple users. Implied as the parent billing group for Wave(Pro) users.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "description": "Optional. You can set it to a single account or a comma-separated list of accounts. If set, overrides `groupId`",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "category",
            "description": "Optional. A comma-separated list of dimensions to query. Valid values are `productCode`, `serviceCode`, `region`, `zone`, `usageType`, `instanceType`, `operation`, `invoiceId`, `description`, `resourceId` and `tags`. Sequence doesn't matter. An empty value implies all attributes will be returned.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/{vendor}/costattrs:read": {
      "post": {
        "summary": "Reads the available cost attributes of an organization (Ripple) or billing group (Wave). Similar to the 'ReadCosts' API but without the aggregated usages and costs. At the moment, the supported {vendor} is 'aws'. If datetime range parameters are not set, month-to-date (current month) will be returned.",
        "operationId": "Cost_ReadCostAttributes",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1CostAttributeItem"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1CostAttributeItem"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "groupId": {
                  "type": "string",
                  "description": "Optional. If set, reads the cost attributes of this group. Only valid for Ripple users. Implied as the parent billing group for Wave(Pro) users.\n\nFor AWS Ripple, only billing internal ids are supported at the moment. Overriden when `accountId` is set to anything other than `*`. Set this and `accountId` to `*` to read the cost attributes of the whole organization. Optional for AWS Wave(Pro)."
                },
                "accountId": {
                  "type": "string",
                  "description": "Optional. You can set it to a single account or a comma-separated list of accounts.\n\nFor AWS, setting this will override `groupId`. Set this and `groupId` to `*` to read the cost attributes of the whole organization."
                },
                "startTime": {
                  "type": "string",
                  "description": "Optional. The UTC date to start streaming data from. If not set, the first day of the current month will be used. Format: `yyyymmdd`. The oldest supported date is `20200101`."
                },
                "endTime": {
                  "type": "string",
                  "description": "Optional. The UTC date to end the streaming data. If not set, current date will be used. Format: `yyyymmdd`."
                },
                "awsOptions": {
                  "$ref": "#/definitions/v1ReadCostAttributesRequestAwsOptions",
                  "description": "Optional. Valid only for the `aws` vendor. AWS-specific options."
                }
              },
              "description": "Request message for the Cost.ReadCostAttributes rpc."
            }
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/{vendor}/costfilters": {
      "get": {
        "summary": "Lists the usage-based cost filter condition. Only available in Wave(Pro).",
        "operationId": "Cost_ListCostFilters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListCostFiltersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cost"
        ]
      },
      "post": {
        "summary": "Creates the usage-based cost filter condition. You can consider cost filters as predefined/prefiltered queries using the 'v1/{vendor}/costs:read' or 'ReadCosts' API. Only available in Wave(Pro).",
        "operationId": "Cost_CreateCostFilters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateCostFiltersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "filterName": {
                  "type": "string",
                  "title": "Required. Filter Name. Specify characters between 1 ~ 100"
                },
                "groupId": {
                  "type": "string",
                  "description": "Required. If set, reads the usage-based cost details of this group. Only valid for Ripple users. Implied as the parent billing group for Wave(Pro) users.\n\nFor AWS Ripple, only billing internal ids are supported at the moment. Overriden when `accountId` is set to anything other than `*`. Set this and `accountId` to `*` to read the usage-based cost details of the whole organization. Optional for AWS Wave(Pro)."
                },
                "accountId": {
                  "type": "string",
                  "description": "Required. You can set it to a single account or a comma-separated list of accounts.\n\nFor AWS, setting this will override `groupId`. Set this and `groupId` to `*` to read the usage-based cost details of the whole organization."
                },
                "awsOptions": {
                  "$ref": "#/definitions/v1ReadCostsRequestAwsOptions",
                  "description": "Required. Valid only for the `aws` vendor. AWS-specific options."
                }
              },
              "description": "Request message for the CreateCostFilters rpc."
            }
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/{vendor}/costfilters/{filterId}": {
      "delete": {
        "summary": "Deletes the usage-based cost filter condition. Only available in Wave(Pro).",
        "operationId": "Cost_DeleteCostFilters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "filterId",
            "description": "Required. Filter Id to delete.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cost"
        ]
      },
      "put": {
        "summary": "Updates the usage-based cost filter condition. Only available in Wave(Pro).",
        "operationId": "Cost_UpdateCostFilters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateCostFiltersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "filterId",
            "description": "Required. Filter Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "filterName": {
                  "type": "string",
                  "title": "Required. Filter Name. Specify characters between 1 ~ 100"
                },
                "groupId": {
                  "type": "string",
                  "description": "Required. If set, reads the usage-based cost details of this group. Only valid for Ripple users. Implied as the parent billing group for Wave(Pro) users.\n\nFor AWS Ripple, only billing internal ids are supported at the moment. Overriden when `accountId` is set to anything other than `*`. Set this and `accountId` to `*` to read the usage-based cost details of the whole organization. Optional for AWS Wave(Pro)."
                },
                "accountId": {
                  "type": "string",
                  "description": "Required. You can set it to a single account or a comma-separated list of accounts.\n\nFor AWS, setting this will override `groupId`. Set this and `groupId` to `*` to read the usage-based cost details of the whole organization."
                },
                "awsOptions": {
                  "$ref": "#/definitions/v1ReadCostsRequestAwsOptions",
                  "description": "Required. Valid only for the `aws` vendor. AWS-specific options."
                }
              },
              "description": "Request message for the UpdateCostFilters rpc."
            }
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/{vendor}/costfilters/{filterId}:export": {
      "post": {
        "summary": "Exports the usage-based cost filter condition. Only available in Wave(Pro).",
        "operationId": "Cost_ExportCostFiltersFile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ExportCostFiltersFileResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "filterId",
            "description": "Required. Filter Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "startTime": {
                  "type": "string",
                  "description": "Optional. The UTC date to start streaming data from. If not set, the first day of the current month will be used. Format: `yyyymmdd`. The oldest supported date is `20200101`."
                },
                "endTime": {
                  "type": "string",
                  "description": "Optional. The UTC date to end the streaming data. If not set, current date will be used. Format: `yyyymmd`."
                },
                "groupByMonth": {
                  "type": "boolean",
                  "description": "Optional. If set to true, return data grouped by month within the date range. If you want data that is grouped per account per month, set this to `true`, then set `groupByColumns` to `none`."
                },
                "groupByColumns": {
                  "type": "string",
                  "description": "Optional. A comma-separated list of columns to aggregate the data into. Valid values are `productCode`, `serviceCode`, `region`, `zone`, `usageType`, `instanceType`, `operation`, `invoiceId`, `description`, and `resourceId`. A special value of `none` is also supported, which means query by date or month per account only.\n\nFor example, if you only want the services and region data, you can set this field to `productCode,region`. Your input sequence doesn't matter (although the sequence above is recommended) as the actual sequence is already fixed in the return data (see the definition in https://github.com/alphauslabs/blueapi/blob/main/api/aws/cost.proto), which is generic to specific, top to bottom. Invalid values are discarded. Excluded columns will be empty."
                },
                "includeTags": {
                  "type": "boolean",
                  "description": "Optional. If set to true, stream will include resource tags."
                }
              },
              "description": "Request message for the ExportCostFiltersFile rpc."
            }
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/{vendor}/costs:calculate": {
      "post": {
        "summary": "Triggers monthly calculations for costs and invoices at either organization or billing group level. For the AWS calculator, aggregation is done at daily and monthly level. Also, all occurrences of the character `|` (pipe) in the CUR descriptions and tag key/values are replaced with the `/` (forward-slash) character. This is due to the `|` character having a special designation in the data processing workflows.",
        "operationId": "Cost_CalculateCosts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protosOperation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "groupId": {
                  "type": "string",
                  "description": "Optional. A comma-separated list of billing internal ids. If empty, calculate for all billing groups.\n\nAt the moment, for AWS, this is only valid for account type billing groups, not tag billing groups. If a tag billing group is provided, it is discarded and the calculation is done for the whole organization."
                },
                "month": {
                  "type": "string",
                  "description": "Optional. The UTC month to calculate. If empty, it defaults to the previous month. Format is `yyyymm`. For example, June 2021 will be `202106`."
                },
                "awsOptions": {
                  "$ref": "#/definitions/v1CalculateCostsRequestAwsOptions",
                  "description": "Optional. Valid only for the `aws` vendor. AWS-specific options."
                }
              },
              "description": "Request message for the Cost.CalculateCosts rpc."
            }
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/{vendor}/costs:read": {
      "post": {
        "summary": "Reads the usage-based cost details of an organization (Ripple) or billing group (Wave). At the moment, the supported {vendor} are 'aws' and 'gcp'. If datetime range parameters are not set, month-to-date (current month) will be returned.",
        "operationId": "Cost_ReadCosts",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/blueapicostv1CostItem"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of blueapicostv1CostItem"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, `aws`,`azure` and `gcp` are supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "groupId": {
                  "type": "string",
                  "description": "Optional. If set, reads the usage-based cost details of this group. Only valid for Ripple users. Implied as the parent billing group for Wave(Pro) users.\n\nFor AWS Ripple, only billing internal ids are supported at the moment. Overriden when `accountId` is set to anything other than `*`. Set this and `accountId` to `*` to read the usage-based cost details of the whole organization. Optional for AWS Wave(Pro)."
                },
                "accountId": {
                  "type": "string",
                  "description": "Optional. You can set it to a single account or a comma-separated list of accounts.\n\nFor AWS, setting this will override `groupId`. Set this and `groupId` to `*` to read the usage-based cost details of the whole organization."
                },
                "startTime": {
                  "type": "string",
                  "description": "Optional. The UTC date to start streaming data from. If not set, the first day of the current month will be used. Format: `yyyymmdd`. The oldest supported date is `20200101`."
                },
                "endTime": {
                  "type": "string",
                  "description": "Optional. The UTC date to end the streaming data. If not set, current date will be used. Format: `yyyymmdd`."
                },
                "awsOptions": {
                  "$ref": "#/definitions/v1ReadCostsRequestAwsOptions",
                  "description": "Optional. Valid only for the `aws` vendor. AWS-specific options."
                },
                "gcpOptions": {
                  "$ref": "#/definitions/v1ReadCostsRequestGcpOptions",
                  "description": "Optional. Valid only for the `gcp` vendor. GCP-specific options."
                },
                "azureOptions": {
                  "$ref": "#/definitions/v1ReadCostsRequestAzureOptions",
                  "description": "Optional. Valid only for the `azure` vendor. Azure-specific options."
                }
              },
              "description": "Request message for the Cost.ReadCosts rpc."
            }
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/{vendor}/coverage/ondemand/{orgId}:read": {
      "post": {
        "summary": "Get ondemand cost details for an organization (or MSP).",
        "operationId": "Cost_GetCoverageOndemand",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCoverageOndemandResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgId",
            "description": "Required. Organization Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "period": {
                  "type": "string",
                  "title": "Required. Available values: day, hour"
                },
                "fromDate": {
                  "type": "string",
                  "description": "Optional. The start date of the displayed data. If not set, the first day of the current month will be used. Format: yyyy-mm-dd."
                },
                "toDate": {
                  "type": "string",
                  "description": "Optional. The end date of the displayed data. If not set, current date will be used. Format: yyyy-mm-dd."
                },
                "payerId": {
                  "type": "string",
                  "description": "Optional. Payer Id."
                },
                "billingInternalId": {
                  "type": "string",
                  "description": "Optional. Billing group Id."
                },
                "groupId": {
                  "type": "string",
                  "description": "Optional. Account group Id."
                },
                "costGroupId": {
                  "type": "string",
                  "title": "Optional. Cost Group Id, currently used in octo"
                },
                "accounts": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Optional. List of Account Ids."
                },
                "services": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Optional. List of services."
                }
              },
              "title": "Request message for GetCoverageOndemand"
            }
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/{vendor}/coverage/options/{orgId}:read": {
      "post": {
        "summary": "Get coverage options details for an organization (or MSP).",
        "operationId": "Cost_GetCoverageOptions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCoverageOptionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgId",
            "description": "Required. Organization Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "period": {
                  "type": "string",
                  "description": "Required. Available values: day, hour."
                },
                "fromDate": {
                  "type": "string",
                  "description": "Optional. The start date of the displayed data. If not set, the first day of the current month will be used. Format: yyyy-mm-dd."
                },
                "toDate": {
                  "type": "string",
                  "description": "Optional. The end date of the displayed data. If not set, current date will be used. Format: yyyy-mm-dd."
                },
                "payerId": {
                  "type": "string",
                  "description": "Optional. Payer Id."
                },
                "billingInternalId": {
                  "type": "string",
                  "description": "Optional. Billing group Id."
                },
                "groupId": {
                  "type": "string",
                  "description": "Optional. Account group Id."
                },
                "costGroupId": {
                  "type": "string",
                  "title": "Optional. Cost Group Id"
                },
                "accounts": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Optional. List of Account Ids."
                },
                "services": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Optional. List of services."
                }
              },
              "title": "Request message for GetCoverageOptions"
            }
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/{vendor}/exchangerate/{month}": {
      "get": {
        "summary": "ListExchangeRates",
        "description": "Lists all exchange rate.\n\u003e Only available in Ripple.",
        "operationId": "Billing_ListExchangeRates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListExchangeRatesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. vendor.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "month",
            "description": "Required. month. Format: `yyyymm`.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/{vendor}/forecasts": {
      "get": {
        "summary": "Fetches cost forecasts for the specified billing group. Includes historical cost (up to previous month) and forecasted cost (up to three months for now).",
        "operationId": "Cost_GetForecasts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetForecastsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "billingInternalId",
            "description": "Optional. Company Id of Billing Group to retrieve. Default value is user's Company Id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "frequency",
            "description": "Optional. Forecast frequency. Valid values are `daily` and `monthly`. \nDefault value is `daily`.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "level",
            "description": "Optional. Forecast granularity. Valid values are `account`, `category` and `product`. Default value is `account`.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fromDate",
            "description": "Optional. Start date to get cost forecast. If from_date is less than current date, historical costs are included. If from_date is greater than current date, only forecasted costs are returned. Format: `yyyy-mm-dd`.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "toDate",
            "description": "Optional. End date to get cost forecast. Currently, we only support 90 days forecasting from the first day of current month. Format: `yyyy-mm-dd`.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/{vendor}/forecasts/month-on-month/{level}/{id}": {
      "get": {
        "summary": "Fetches previous month cost vs current month forecast vs current accumulated cost per category for id.",
        "operationId": "Cost_GetMonthOnMonthCostForecast",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMonthOnMonthCostForecastResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "level",
            "description": "Required. 'account' or 'acctgroup'",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "Required. Account or AccountGroup Id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "date",
            "description": "Optional. Default is current month. Format: `yyyymm`.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/{vendor}/forecasts/month-to-date/{level}/{id}": {
      "get": {
        "summary": "Fetches current month daily forecast vs current accumulated daily cost for id.",
        "operationId": "Cost_GetMonthToDateCostForecast",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMonthToDateCostForecastResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "level",
            "description": "Required. 'account' or 'acctgroup'",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "Required. Account or AccountGroup Id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "date",
            "description": "Optional. Default is current month. Format: `yyyymm`.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/{vendor}/forecasts/monthly/{level}/{id}": {
      "get": {
        "summary": "Fetches monthly accumulated costs vs forecasted cost vs budget for the id.",
        "operationId": "Cost_GetMonthlyCostForecast",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMonthlyCostForecastResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "level",
            "description": "Required. 'account' or 'acctgroup'",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "Required. Account or AccountGroup Id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fromDate",
            "description": "Optional. Start month to get cost forecast. Format: `yyyymm`.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "toDate",
            "description": "Optional. Last month to get cost forecast. Format: `yyyymm`.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/{vendor}/invoiceadjustments:read": {
      "post": {
        "summary": "Reads the adjustment details involved in invoicing of an organization billing group (Wave).",
        "operationId": "Billing_ReadInvoiceAdjustments",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/waveAdjustment"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of waveAdjustment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws`,`azure`,`gcp` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "accountId": {
                  "type": "string",
                  "description": "Required."
                },
                "month": {
                  "type": "string",
                  "description": "Optional. The UTC month to query. If empty, defaults to current month. Format is `yyyymm`. For example, June 2021 will be `202106`."
                },
                "feeType": {
                  "type": "string",
                  "description": "Optional. If empty, defaults to all fee type. At the moment, only `Fee`,`Refund`,`Credit`,`SppDiscount`,`EdpDiscount`,`BundledDiscount` is supported."
                }
              },
              "description": "Request message for the Billing.ReadInvoiceAdjustments rpc."
            }
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/{vendor}/nontagcosts:read": {
      "post": {
        "summary": "Reads the usage-based non tag costs of a billing group. At the moment, the supported {vendor} is 'aws'. If datetime range parameters are not set, month-to-date (current month) will be returned.",
        "operationId": "Cost_ReadNonTagCosts",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/blueapicostv1CostItem"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of blueapicostv1CostItem"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "billingInternalId": {
                  "type": "string",
                  "description": "Required. The billing internal id to stream."
                },
                "startTime": {
                  "type": "string",
                  "description": "Optional. Timestamp to start streaming data from. If not set, the first day of the current month will be used. Format: `yyyymmdd`."
                },
                "endTime": {
                  "type": "string",
                  "description": "Optional. Timestamp to end the streaming data. If not set, current date will be used. Format: `yyyymmdd`."
                },
                "groupByMonths": {
                  "type": "boolean",
                  "description": "Optional. Group services and costs by months in the range of `startTime` and `endTime`. If not set, daily data will be returned."
                }
              },
              "description": "Request message for the Cost.ReadNonTagCosts rpc."
            }
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/{vendor}/payers": {
      "get": {
        "summary": "Lists vendor payer accounts. For AWS, these are management accounts (formerly known as master or payer accounts); for Azure, these are subscriptions, for GCP, these are projects.",
        "operationId": "Cost_ListPayerAccounts",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/blueapiapiAccount"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of blueapiapiAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fieldMask",
            "description": "Optional. Get only the value that set fieldMask.\n\nsee more info: https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/field_mask.proto",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cost"
        ]
      },
      "post": {
        "summary": "DEPRECATED: Registers a vendor payer account. This is now deprecated for AWS payer accounts. To register an AWS payer account, check out the 'CreateDefaultCostAccess' API.",
        "operationId": "Cost_CreatePayerAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/blueapiapiAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "awsOptions": {
                  "$ref": "#/definitions/v1CreatePayerAccountRequestAwsOptions",
                  "description": "Required for the `aws` vendor. AWS-specific options."
                }
              },
              "description": "Request message for the Cost.CreatePayerAccount rpc."
            }
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/{vendor}/payers/{id}": {
      "get": {
        "summary": "Gets a vendor payer account. This API includes all of the account's metadata. See https://alphauslabs.github.io/blueapi/ for the list of supported attributes. For AWS, this means a management account (formerly known as master or payer account); for Azure, this means a subscription, for GCP, this means a project.",
        "operationId": "Cost_GetPayerAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ripplePayer"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "Required. The id of the account to get.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cost"
        ]
      },
      "delete": {
        "summary": "Deletes a vendor payer account.",
        "operationId": "Cost_DeletePayerAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "Required. The id of the account.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/{vendor}/payers/{id}/importhistory": {
      "get": {
        "summary": "Gets a payer account's import history, which is a list of timestamps our system tracks when the account's data are imported to our system, which in turn, triggers processing. At the moment, this only supports AWS (CUR files). You can also set {id} to `*` to return all payers' information under the organization.",
        "operationId": "Cost_GetPayerAccountImportHistory",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1GetPayerAccountImportHistoryResponse"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1GetPayerAccountImportHistoryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "Required. The account id to query. Could be `*`, which implies all payers.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "month",
            "description": "Optional. The UTC month to query. If empty, defaults to current month. Format is `yyyymm`. For example, June 2021 will be `202106`.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/{vendor}/payers/{id}/proforma": {
      "get": {
        "summary": "Gets a payer account's proforma reports. Applicable for AWS payer accounts only.",
        "operationId": "Cost_GetPayerProformaReports",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetPayerProformaReportsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "Required. The account id to query.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/{vendor}/recommendations/{orgId}:read": {
      "post": {
        "summary": "WORK-IN-PROGRESS: Get cost opmtimization recommendations for an organization (or MSP).",
        "operationId": "Cost_GetRecommendations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetRecommendationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgId",
            "description": "Required. Organization Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "accounts": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Required. List of Account Ids."
                },
                "costGroupId": {
                  "type": "string",
                  "description": "Required. For OCTO only."
                },
                "awsOptions": {
                  "$ref": "#/definitions/v1GetRecommendationsRequestAwsOptions",
                  "title": "Required if vendor = 'aws'"
                }
              },
              "title": "Request message for GetRecommendations"
            }
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/{vendor}/reduction/{orgId}:read": {
      "post": {
        "summary": "Get cost reduction details for an organization (or MSP).",
        "operationId": "Cost_GetCostReduction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCostReductionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgId",
            "description": "Required. Organization Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "reductionDisplay": {
                  "type": "string",
                  "title": "Required. Valid values: 'all', 'reservation', 'savingsplan'"
                },
                "includeDetails": {
                  "type": "boolean",
                  "description": "Optional. If set to \"true\", details of the RI or SP list is returned. Default: false."
                },
                "fromDate": {
                  "type": "string",
                  "description": "Optional. The start date of the displayed data. If not set, the first day of the current month will be used. Format: yyyy-mm-dd."
                },
                "toDate": {
                  "type": "string",
                  "description": "Optional. The end date of the displayed data. If not set, current date will be used. Format: yyyy-mm-dd."
                },
                "payerId": {
                  "type": "string",
                  "description": "Optional. Payer Id."
                },
                "billingInternalId": {
                  "type": "string",
                  "description": "Optional. Billing group Id."
                },
                "groupId": {
                  "type": "string",
                  "description": "Optional. Account group Id."
                },
                "costGroupId": {
                  "type": "string",
                  "description": "Optional. Cost Group Id used in octo."
                },
                "accounts": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Optional. List of Account Ids."
                },
                "services": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Optional. List of services."
                }
              },
              "title": "Request message for GetCostReduction"
            }
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/{vendor}/regions/{costGroupId}": {
      "get": {
        "summary": "Get list of available regions",
        "operationId": "Cover_GetRegions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetRegionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. Cloud vendor.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "costGroupId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/{vendor}/resource/modify": {
      "post": {
        "summary": "Modify resource type from right sizing recommendation",
        "operationId": "Cover_ModifyResourceType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ModifyResourceTypeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. Cloud vendor.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "accountId": {
                  "type": "string",
                  "description": "Required. Account Id."
                },
                "resourceId": {
                  "type": "string",
                  "description": "Required. The resource Id."
                },
                "resourceType": {
                  "type": "string",
                  "description": "Required. The recommended resource type."
                },
                "region": {
                  "type": "string",
                  "description": "Required. Resource region."
                }
              },
              "title": "Request message for ModifyResourceType"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/{vendor}/resource/terminate": {
      "post": {
        "summary": "Terminate a resource from right sizing recommendation",
        "operationId": "Cover_TerminateResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1TerminateResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. Cloud vendor.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "accountId": {
                  "type": "string",
                  "description": "Required. Account Id."
                },
                "resourceId": {
                  "type": "string",
                  "description": "Required. The resource Id."
                },
                "region": {
                  "type": "string",
                  "description": "Required. Resource region."
                }
              },
              "title": "Request message for TerminateResource"
            }
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/{vendor}/services/{costGroupId}": {
      "get": {
        "summary": "Get list of supported services",
        "operationId": "Cover_GetServices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetServicesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. Cloud vendor.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "costGroupId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/{vendor}/tagcosts:read": {
      "post": {
        "summary": "Reads the usage-based tag costs of a billing group. At the moment, the supported {vendor} is 'aws'. If datetime range parameters are not set, month-to-date (current month) will be returned.",
        "operationId": "Cost_ReadTagCosts",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/blueapicostv1CostItem"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of blueapicostv1CostItem"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "billingInternalId": {
                  "type": "string",
                  "description": "Required. The billing internal id to stream."
                },
                "startTime": {
                  "type": "string",
                  "description": "Optional. Timestamp to start streaming data from. If not set, the first day of the current month will be used. Format: `yyyymmdd`."
                },
                "endTime": {
                  "type": "string",
                  "description": "Optional. Timestamp to end the streaming data. If not set, current date will be used. Format: `yyyymmdd`."
                },
                "groupByMonths": {
                  "type": "boolean",
                  "description": "Optional. Group services and costs by months in the range of `startTime` and `endTime`. If not set, daily data will be returned."
                },
                "awsOptions": {
                  "$ref": "#/definitions/v1ReadTagCostsRequestAwsOptions",
                  "description": "Optional. Valid only for the `aws` vendor. AWS-specific options."
                }
              },
              "description": "Request message for the Cost.ReadTagCosts rpc."
            }
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/{vendor}/tags": {
      "get": {
        "summary": "Lists all vendor tags.",
        "operationId": "Cost_ListTags",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/apiCostTag"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of apiCostTag"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupId",
            "description": "Optional. The billing group internal id. Only valid for Ripple users.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldMask",
            "description": "Optional.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/{vendor}/tags/groups/{groupId}": {
      "get": {
        "summary": "Lists all vendor tags.",
        "operationId": "Cost_ListTags2",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/apiCostTag"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of apiCostTag"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupId",
            "description": "Optional. The billing group internal id. Only valid for Ripple users.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fieldMask",
            "description": "Optional.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    },
    "/v1/{vendor}/tags/{costGroupId}": {
      "get": {
        "summary": "Get list of available tags",
        "operationId": "Cover_GetTags",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetTagsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. Cloud vendor.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "costGroupId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Cover"
        ]
      }
    },
    "/v1/{vendor}/untaggedgroups:read": {
      "post": {
        "summary": "WORK-IN-PROGRESS: Reads the untagged group. Only available in Ripple.",
        "operationId": "Billing_ReadUntaggedGroups",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/rippleUntaggedGroup"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of rippleUntaggedGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "fieldMask": {
                  "type": "string",
                  "description": "Optional. Get only the value that set fieldMask.\n\nsee more info: https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/field_mask.proto"
                }
              },
              "description": "Request message for the Billing.ReadUntaggedGroups rpc."
            }
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/{vendor}/usagecostsdrift:read": {
      "post": {
        "summary": "Returns a list of accounts that have been updated after invoice along with the differences in costs, if any. Only available in Ripple.",
        "operationId": "Billing_ListUsageCostsDrift",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1UsageCostsDrift"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1UsageCostsDrift"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "billingInternalId": {
                  "type": "string",
                  "description": "Optional. If empty, returns all billing groups."
                },
                "month": {
                  "type": "string",
                  "description": "Optional. If empty, defaults to current UTC month. Format: yyyymm."
                }
              },
              "description": "Request message for the Billing.ListUsageCostsDrift rpc."
            }
          }
        ],
        "tags": [
          "Billing"
        ]
      }
    },
    "/v1/{vendor}/utilization/{orgId}": {
      "get": {
        "summary": "Get the utilization details for an organization (or MSP).",
        "operationId": "Cost_GetUtilization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetUtilizationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "vendor",
            "description": "Required. At the moment, only `aws` is supported.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgId",
            "description": "Required. Organization Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "description": "Required. For AWS, \"ri\" or \"sp\".",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fromDate",
            "description": "Optional. The start date of the displayed data. If not set, the first day of the current month will be used. Format: yyyy-mm-dd.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "toDate",
            "description": "Optional. The end date of the displayed data. If not set, current date will be used. Format: yyyy-mm-dd.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payerId",
            "description": "Optional. Payer Id.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "billingInternalId",
            "description": "Optional. Billing group Id.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "groupId",
            "description": "Optional. Account group Id.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "costGroupId",
            "description": "Optional. Cost Group Id used in octo.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cost"
        ]
      }
    }
  },
  "definitions": {
    "AccountHistory": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "description": "Calculation timestamp in UTC, RFC3339."
        },
        "trigger": {
          "type": "string",
          "description": "Calculation trigger. Either `invoice` or `cur`."
        }
      }
    },
    "CalculatorCostModifierAwsOptionsModifier": {
      "type": "object",
      "properties": {
        "formula": {
          "type": "string",
          "description": "Required. Our modifier formula. The final result should be a number. Integers are converted to floating points.\n\nSupported operators are `*`, `/`, `+`, `-`, and `%`. You can use parenthesis `()` to control precedence. Additional supported operators include `==`, `!=`, `!`, `\u003e`, `\u003c`, `\u003e=`, `\u003c=`, and the ternary operator `? :`, or `cond ? expr1 : expr2`.\nExamples:\n `1 + 2 * 3` = 7\n `(1 + 2) * 3` = 9\n `7.8 % 5` = 2.8\n `true ? 1.1 : 2.2` = 1.1\n `1 \u003e 2 ? 1.1 : 2.2` = 2.2\n\nYou can use the `cost` variable to reference the original lineitem cost. For example, if you want to add $10 to the cost, you can use the formula: `cost + 10`. For trueunblended-type billing groups, `cost` refers to the calculated trueunblended cost.\n\nThe `usage` variable refers to the usage amount of a lineitem. For example, if you want to use a different rate of $1.5, you can use the formula: `usage * 1.5`.\n\nThe `unblendedcost` variable refers to the lineitem's unblended cost as indicated in the CUR. Note that the `unblendedcost` variable is different than the `cost` variable, although there are cases where the two are equal.\n\nThe `ondemandrate` variable refers to the lineitem's public ondemand rate as indicated in the CUR.\n\nYou can check out this [guide](https://alphauslabs.github.io/docs/guides/aws-cost-mods/) for more examples."
        },
        "descriptionModifier": {
          "$ref": "#/definitions/ModifierDescriptionModifier",
          "description": "Optional. A simple description modifier."
        }
      }
    },
    "CalculatorCostModifierAwsOptionsQualifier": {
      "type": "object",
      "properties": {
        "and": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "A map of \"key:value\" attribute filters. The key indicates the column name while the value is the filter value prefixed by either \"eq:\" (equal), \"re:\" (regular expressions based on https://github.com/google/re2), or \"!re:\" (reverse \"re:\"). No prefix is the same as \"eq:\". Multiple map items will use the logical 'and' operator, e.g. mapfilter1 \u0026\u0026 mapfilter2 \u0026\u0026 mapfilter3, etc.\n\nFor example, if you like your modifiers to apply to `productCode:AmazonEC2`, set to `{\"productCode\":\"eq:AmazonEC2\"}` or `{\"productCode\":\"AmazonEC2\"}`. You can also use a regular expression like `{\"productCode\":\"re:AmazonEC2|AmazonRDS\"}`, which means apply to all AmazonEC2 or AmazonRDS lineitems. Or reverse regexp, such as `{\"productCode\":\"!re:^AmazonEC2$\"}`, which means apply to all items except `AmazonEC2`. Valid keys are `productCode`, `serviceCode`, `region`, `zone`, `usageType`, `instanceType`, `operation`, `description`, and `resourceId`."
    },
    "IdentityProvidersamlInfo": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "string"
        }
      }
    },
    "ListCalculatorRunningAccountsResponseAwsRunningAccount": {
      "type": "object",
      "properties": {
        "month": {
          "type": "string",
          "description": "The queried month. Format is yyyy-mm."
        },
        "account": {
          "type": "string",
          "description": "The AWS account that is actively processing."
        },
        "date": {
          "type": "string",
          "description": "The target date the account is processing for."
        },
        "started": {
          "type": "string",
          "description": "The timestamp when the calculation has started."
        }
      }
    },
    "ListIdentityProvidersResponseIdentityProvider": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "saml": {
          "$ref": "#/definitions/IdentityProvidersamlInfo"
        }
      }
    },
    "ModifierDescriptionModifier": {
      "type": "object",
      "properties": {
        "prefix": {
          "type": "string",
          "description": "Optional. Add a prefix to the description."
        },
        "suffix": {
          "type": "string",
          "description": "Optional. Add a suffix to the description."
        },
        "replace": {
          "type": "string",
          "description": "Optional. Replace the description with the input."
        },
        "replaceMatch": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. Replace matching occurences with the input. The key part is the regular expression matcher based on https://github.com/google/re2, while the value is the replacement. The order of replacement is not guaranteed.\n\nYou can use the `{{ondemandrate}}` variable in the replacement value part to reference the public ondemand rate indicated in the CUR."
        }
      }
    },
    "RoundingRoundingMethod": {
      "type": "string",
      "enum": [
        "ROUND",
        "ROUNDUP",
        "ROUNDDOWN"
      ],
      "default": "ROUND",
      "description": "- ROUND: round\n - ROUNDUP: round up\n - ROUNDDOWN: round down",
      "title": "RoundingMethod"
    },
    "adminv1NotificationAccount": {
      "type": "object",
      "properties": {
        "vendor": {
          "type": "string",
          "description": "Required."
        },
        "accountId": {
          "type": "string",
          "description": "Required."
        }
      }
    },
    "apiAccountDetails": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource Id. \n\nif account, customer id.\n\nif tag, tag resource id."
        },
        "name": {
          "type": "string",
          "description": "Resource Name. \n\nif account, customer name.\n\nif tag, tag resources."
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiUsageDetails"
          },
          "title": "details: Vendor service fees included"
        },
        "customDetails": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiCustomDetails"
          },
          "title": "customDetails: Includes details of custom service and additional item data"
        },
        "feeDetails": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/blueapiapiFeeDetails"
          },
          "title": "feeDetails: Includes details of re-caluclated fee data"
        },
        "total": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiAccountTotal"
          },
          "description": "substitution:\n   Total amount of agency fee costs\n\nsupportFee:\n   Total amount of Support Fee costs\n\nusageOnlyTotal:\n   Total amount of vendor usage fee only costs\n\nusageTotal:\n   Total amount of vendor usage fee costs\n\nmarketplace:\n   Total amount of vendor marketplace usage costs\n\nmarketplaceFees:\n   Total amount of vendor marketplace fee costs",
          "title": "The keys included in the account total column have the following values"
        }
      },
      "description": "AccountDetails resource definition."
    },
    "apiAccountGroup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The AccountGroup id."
        },
        "name": {
          "type": "string",
          "description": "The AccountGroup name."
        },
        "metadata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiKeyValue"
          },
          "description": "The attributes (key/value pair) of the AccountGroup."
        },
        "accounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/blueapiapiAccount"
          }
        }
      }
    },
    "apiAccountTotal": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "amount": {
          "type": "number",
          "format": "double"
        }
      },
      "description": "AccountTotal resource definition."
    },
    "apiAdditionalItems": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "unitCost": {
          "type": "number",
          "format": "double"
        },
        "total": {
          "type": "number",
          "format": "double"
        },
        "quantity": {
          "type": "number",
          "format": "double"
        }
      },
      "description": "AdditionalItems resource definition."
    },
    "apiAdjustmentConfig": {
      "type": "object",
      "properties": {
        "config": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiConfigFilters"
          },
          "title": "User configuration"
        },
        "vendor": {
          "type": "string",
          "title": "Vendor"
        },
        "accounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiManagementAccount"
          },
          "title": "Management account configuration"
        }
      },
      "description": "AdjustmentConfig resource definition."
    },
    "apiApiClient": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "API client id."
        },
        "clientSecret": {
          "type": "string",
          "description": "API client secret. Only available during creation; otherwise, redacted."
        },
        "name": {
          "type": "string",
          "description": "API client name."
        },
        "grantType": {
          "type": "string",
          "description": "Grant type. Always set to `client_credentials`."
        },
        "parent": {
          "type": "string",
          "description": "The client's parent resource."
        },
        "createTime": {
          "type": "string"
        }
      }
    },
    "apiAuditExport": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/apiAuditExportData"
        }
      },
      "description": "AuditExport resource definition."
    },
    "apiAuditExportData": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string",
          "description": "Base64 encoded value\nFor example, content :`dGltZSx1c2VySWQsc3ViVXNlcklkLHVzZXJOYW1lLGlzQWRtaW4sZXZlbnROYW1lLHBhdGgsdXNlclBhc3MsY2F0ZU5hbWUNCg==``\nDecoding this value, get `time,userId,subUserId,userName,isAdmin,eventName,path,userPass,cateName`."
        },
        "downloadedRows": {
          "type": "string",
          "format": "int64",
          "description": "Downloaded content lines."
        },
        "totalRows": {
          "type": "string",
          "format": "int64",
          "description": "Total of content lines."
        }
      },
      "description": "AuditExportData resource definition."
    },
    "apiBillingGroupForecast": {
      "type": "object",
      "properties": {
        "billingInternalId": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiForecastData"
          }
        }
      }
    },
    "apiBudgetAlertNotification": {
      "type": "object",
      "properties": {
        "channels": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required. List of channelId. For example, you set to [\"channelId1\",\"channelId2\",\"channelId3\"]."
        },
        "enabled": {
          "type": "boolean",
          "description": "Required. notification enable/disable \nIf disabled, no alert is sent."
        }
      },
      "description": "BudgetAlertNotification resource definition."
    },
    "apiBudgetAlertNotificationDetail": {
      "type": "object",
      "properties": {
        "channels": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiNotificationChannel"
          },
          "description": "List of channel info."
        },
        "enabled": {
          "type": "boolean",
          "description": "Notification enable/disable \nIf disabled, no alert is sent."
        }
      },
      "description": "BudgetAlertNotificationDetail resource definition."
    },
    "apiConfigFilters": {
      "type": "object",
      "properties": {
        "andFilters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "ConfigFilters resource definition.\nA map of \"key:value\" config filters. The key indicates the adjustment key while the value is the filter adjustment value which can be prefixed by either \"eq:\" (equal), \"re:\" (regular expressions based on https://github.com/google/re2), or \"!re:\" (reverse \"re:\"). No prefix is the same as \"eq:\". Multiple map items will use the logical 'and' operator, e.g. mapfilter1 \u0026\u0026 mapfilter2 \u0026\u0026 mapfilter3, etc.\n\nFor example, if you want to query lineitems with the adjustment `productCode:AmazonEC2`, set to `{\"productCode\":\"AmazonEC2\"}`. You can also use regular expressions for adjustment values, such as `{\"description\":\"re:[A-Za-z0-9]*\"}`.\nList of available adjustment keys: productCode, type, description\nFor example value on productCode: AmazonEC2, AmazonRDS, AWSLambda, etc.\nFor example value on type: Fee, Refund, SppDiscount, etc."
    },
    "apiCostTag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The costtag id."
        },
        "orgId": {
          "type": "string",
          "description": "The parent organization id."
        },
        "billingInternalId": {
          "type": "string",
          "description": "The parent billing internal id."
        },
        "vendor": {
          "type": "string",
          "description": "The vendor."
        },
        "accountId": {
          "type": "string",
          "description": "The account id."
        },
        "logic": {
          "type": "string",
          "title": "The logic.(and/or)"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiKeyValue"
          },
          "description": "The attributes (key/value pair) of the costtag."
        }
      }
    },
    "apiCustomDetails": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "amount": {
          "type": "number",
          "format": "double"
        }
      },
      "description": "CustomDetails resource definition."
    },
    "apiDailyBudgetAlert": {
      "type": "object",
      "properties": {
        "value": {
          "type": "number",
          "format": "double",
          "title": "Required. threshold in budget alerts"
        },
        "enabled": {
          "type": "boolean",
          "description": "Required. notification enable/disable \nIf disabled, no alert is sent."
        }
      },
      "description": "DailyBudgetAlert resource definition."
    },
    "apiDailyRateIncreaseBudgetAlert": {
      "type": "object",
      "properties": {
        "value": {
          "type": "number",
          "format": "double",
          "title": "Required. threshold in budget alerts"
        },
        "enabled": {
          "type": "boolean",
          "description": "Required. notification enable/disable \nIf disabled, no alert is sent."
        }
      },
      "description": "DailyRateIncreaseBudgetAlert resource definition."
    },
    "apiEmailChannel": {
      "type": "object",
      "properties": {
        "format": {
          "type": "string"
        },
        "recipients": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "apiFeatureFlags": {
      "type": "object",
      "properties": {
        "dashboardGraph": {
          "type": "boolean",
          "title": "Control view-access to the Wave dashboard graph"
        },
        "usageAccount": {
          "type": "boolean",
          "title": "Control access to the Accounts pane under usage reports on Wave"
        },
        "usageAccountGraph": {
          "type": "boolean",
          "title": "Control view-access to the Account-level graph under usage reports on Wave"
        },
        "usageAccountMenuAccountEdit": {
          "type": "boolean",
          "title": "Control edit-access to Accounts under usage reports on Wave"
        },
        "usageAccountMenuBudget": {
          "type": "boolean",
          "title": "Control view-access to budget settings for an Account under usage reports on Wave"
        },
        "usageAccountMenuBudgetEdit": {
          "type": "boolean",
          "title": "Control edit-access to budget settings for an Account under usage reports on Wave"
        },
        "usageAccountMenuFeesFee": {
          "type": "boolean",
          "title": "Control view-access to the fees menu for an Account under usage reports on Wave"
        },
        "usageAccountMenuFeesCredit": {
          "type": "boolean",
          "title": "Control view-access to credits for an Account under usage reports on Wave"
        },
        "usageAccountMenuFeesRefund": {
          "type": "boolean",
          "title": "Control view-access to refunds for an Account under usage reports on Wave"
        },
        "usageAccountMenuFeesOtherFees": {
          "type": "boolean",
          "title": "Control view-access to other fees for an Account under usage reports on Wave"
        },
        "usageReportDownload": {
          "type": "boolean",
          "title": "Control download-access to usage report on Wave"
        },
        "usageGroup": {
          "type": "boolean",
          "title": "Control access to the Groups pane under usage reports on Wave"
        },
        "usageGroupGraph": {
          "type": "boolean",
          "title": "Control view-access to the Group-level graph under usage reports on Wave"
        },
        "usageTag": {
          "type": "boolean",
          "title": "Control view-access to the Tags pane under usage reports on Wave"
        },
        "usageTagGraph": {
          "type": "boolean",
          "title": "Control view-access to the Tag-level graph under usage reports on Wave"
        },
        "usageCrosstag": {
          "type": "boolean",
          "title": "Control view-access to the Tags pane for crosstag groups under usage reports on Wave"
        },
        "usageCrosstagGraph": {
          "type": "boolean",
          "title": "Control view-access to the Tag-level graph for crosstag groups under usage reports on Wave"
        },
        "riPurchased": {
          "type": "boolean",
          "title": "Control view-access to purchased reservations under reserved instances on Wave"
        },
        "riUtilization": {
          "type": "boolean",
          "title": "Control access to RI utilization under reserved instances on Wave"
        },
        "riRecommendation": {
          "type": "boolean",
          "title": "Control access to RI recommendations on Wave"
        },
        "spPurchased": {
          "type": "boolean",
          "title": "Control access to purchased savings plans on Wave"
        },
        "invoice": {
          "type": "boolean",
          "title": "Control access to the invoice on Wave"
        },
        "invoiceDownloadCsvDiscount": {
          "type": "boolean",
          "title": "Control download-access to the discounted invoice CSV on Wave"
        },
        "invoiceDownloadCsvMerged": {
          "type": "boolean",
          "title": "Control download-access to the merged invoice CSV on Wave"
        },
        "openApi": {
          "type": "boolean",
          "title": "Control access to API tokens on Wave"
        },
        "usersManagement": {
          "type": "boolean",
          "title": "Control access to sub-user management on Wave"
        },
        "aqCoverageRatio": {
          "type": "boolean",
          "title": "Control access to the Coverage Ratio pane on Aqua"
        },
        "aqRiManagement": {
          "type": "boolean",
          "title": "Control access to the RI management pane on Aqua"
        },
        "aqSpManagement": {
          "type": "boolean",
          "title": "Control access to the savings plan management pane on Aqua"
        },
        "aqRiSpInstances": {
          "type": "boolean",
          "title": "Control access to RI and savings plan recommendations on Aqua"
        },
        "aqRightSizing": {
          "type": "boolean",
          "title": "Control access to right-sizing on Aqua"
        },
        "aqScheduling": {
          "type": "boolean",
          "title": "Control access to scheduling on Aqua"
        },
        "reportFilters": {
          "type": "boolean",
          "title": "Control access to the report filters pane in Wave Pro"
        },
        "aquaLink": {
          "type": "boolean",
          "title": "Control access to Aqua from Wave Pro"
        },
        "budgetalerts": {
          "type": "boolean",
          "title": "Control access to budget alerts from Wave Pro"
        }
      },
      "description": "Describes the features and whether or not they are enabled for a particular user."
    },
    "apiForecastData": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "productCategory": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        },
        "frequency": {
          "type": "string",
          "title": "daily, monthly"
        },
        "date": {
          "type": "string"
        },
        "historicalCost": {
          "type": "number",
          "format": "double"
        },
        "forecastedCost": {
          "type": "number",
          "format": "double"
        },
        "upperBound": {
          "type": "number",
          "format": "double"
        },
        "lowerBound": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "apiGroupCustomDetails": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "amount": {
          "type": "number",
          "format": "double"
        }
      },
      "description": "GroupCustomDetails resource definition."
    },
    "apiGroupDetails": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "amount": {
          "type": "number",
          "format": "double"
        }
      },
      "description": "GroupDetails resource definition."
    },
    "apiGroupRootUser": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "The email address associated with the user. If there is no email\r\naddress provided then this field will contain \"Not Set\"."
        },
        "password": {
          "type": "string",
          "description": "The password associated with the user. This field will only be\r\npopulated when the reseller is first created."
        },
        "groupId": {
          "type": "string",
          "description": "The ID of the group to which the user belongs. This will either\r\nbe a billing group ID or an access group ID."
        },
        "groupName": {
          "type": "string",
          "description": "The name of the group to which the user belongs. This will either\r\nbe the name of a billing group or an access group."
        },
        "groupType": {
          "type": "string",
          "description": "This field describes what type of group to which the user belongs.\r\nThis field will contain either a value of \"billing_group\" or \"access_group\"."
        },
        "meta": {
          "$ref": "#/definitions/apiFeatureFlags",
          "description": "A collection of feature flags and whether or not they should be enabled. \r\nFor a full list of such flags, see https://alphauslabs.github.io/blueapi/apis/groups.html."
        },
        "passwordUpdateTime": {
          "type": "string",
          "description": "The time when the password was last updated. This value will be null if \r\nthe password has never been updated."
        },
        "updateTime": {
          "type": "string",
          "description": "The time when the user was last updated. This value will be null if the\r\nuser has never been updated."
        },
        "userAccessId": {
          "type": "string",
          "description": "An ID that uniquely identifies the user in the context of its access group.\r\nIf the user does not belong to an access group then this value field will\r\ncontain the same value as the user ID."
        },
        "userId": {
          "type": "string",
          "description": "An ID that unqiuely identifies the user."
        },
        "waveAvailabilityDays": {
          "type": "integer",
          "format": "int32",
          "description": "How many days of Wave use remain. This value is only used for trial accounts.\r\nThis field cannot be updated."
        },
        "waveRegistered": {
          "type": "string",
          "description": "When the user registered on Wave."
        },
        "waveStatus": {
          "type": "string",
          "description": "The plan associated with the user. Possible values include \"trial\",\r\n\"limited3\" and \"limited4\"."
        }
      },
      "description": "Describes the fields on an Alphaus root user for a billing group or access group."
    },
    "apiInvoice": {
      "type": "object",
      "properties": {
        "aws": {
          "$ref": "#/definitions/apiVendorDetail",
          "title": "Invoice vendor detail by 'aws'"
        },
        "gcp": {
          "$ref": "#/definitions/apiVendorDetail",
          "title": "Invoice vendor detail by 'gcp'"
        },
        "azure": {
          "$ref": "#/definitions/apiVendorDetail",
          "title": "Invoice vendor detail by 'azure'"
        }
      },
      "description": "Invoice resource definition."
    },
    "apiInvoiceMessage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "invoice generate request id"
        },
        "status": {
          "type": "string",
          "description": "done: Invoicing is complete.\nrunning: Invoicing in progress.\nfailed: Invoicing is failure.",
          "title": "invoice generate request status"
        },
        "timestamp": {
          "type": "string",
          "description": "status timestamp in UTC, RFC3339."
        }
      },
      "description": "InvoiceMessage resource definition."
    },
    "apiInvoiceSettings": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "groupId": {
          "type": "string"
        },
        "groupName": {
          "type": "string"
        },
        "contact": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "dueDate": {
          "type": "string"
        },
        "dueDateCustomDay": {
          "type": "number",
          "format": "double"
        },
        "dueDateDay": {
          "type": "string"
        },
        "dueDateMonth": {
          "type": "string"
        },
        "exchangeRate": {
          "type": "number",
          "format": "double"
        },
        "invoiceNo": {
          "type": "string"
        },
        "language": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "postal": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "description": "InvoiceSettings resource definition."
    },
    "apiInvoiceTotal": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "supportFee: \n   Total amount of Support Fee costs\n\nsubstitution: \n   Total amount of agency fee costs\n\nchargeOnly: \n   Total amount of vendor usage fee only costs\n\nmarketplace: \n   Total amount of vendor marketplace usage costs\n\nmarketplaceFees: \n   Total amount of vendor marketplace fee costs\n\ncharge: \n   Total amount of vendor usage fee costs\n\ndiscount: \n   Total amount after discounts. Inculuded Support fee costs\n\ndiscountWithSubstitution: \n   Total Discounts plus agency fee costs\n\nchargeTaxFree: \n   Amounts not included in consumption tax\n\nadditionalItem: \n   Total amount of additional item costs \n\ncustomService: \n   Total amount of custom service item costs \n\nsumOfBeforeTax: \n   Total amount before consumption tax\n\ntax: \n   Consumption tax amount on the total amount\n\ntotal: \n   Total billing amount including tax",
          "title": "Key names related to the total. Each key is described in the following detail"
        },
        "currency": {
          "type": "string"
        },
        "amount": {
          "type": "number",
          "format": "double"
        }
      },
      "description": "InvoiceTotal resource definition."
    },
    "apiKeyValue": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "apiMSTeamsChannel": {
      "type": "object",
      "properties": {
        "webhookUrl": {
          "type": "string"
        }
      }
    },
    "apiManagementAccount": {
      "type": "object",
      "properties": {
        "managementAccountId": {
          "type": "string",
          "title": "Vendor-managed organization account Id"
        },
        "config": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiConfigFilters"
          },
          "description": "A list of filtering options. See [ConfigFilters] for more information on each filter item. Multiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc."
        }
      },
      "description": "ManagementAccount resource definition."
    },
    "apiMonthOnMonthCostForecast": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string"
        },
        "costCurrent": {
          "type": "number",
          "format": "double"
        },
        "costPrev": {
          "type": "number",
          "format": "double"
        },
        "costForecast": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "apiMonthToDateCostForecast": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "costPrev": {
          "type": "number",
          "format": "double"
        },
        "costAccumulated": {
          "type": "number",
          "format": "double"
        },
        "costForecast": {
          "type": "number",
          "format": "double"
        },
        "upperBound": {
          "type": "number",
          "format": "double"
        },
        "lowerBound": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "apiMonthlyBudget": {
      "type": "object",
      "properties": {
        "yearMonth": {
          "type": "string",
          "title": "Format: yyyymm"
        },
        "amount": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "apiMonthlyBudgetAlert": {
      "type": "object",
      "properties": {
        "value": {
          "type": "number",
          "format": "double",
          "title": "Required. threshold in budget alerts"
        },
        "enabled": {
          "type": "boolean",
          "description": "Required. notification enable/disable \nIf disabled, no alert is sent."
        }
      },
      "description": "MonthlyBudgetAlert resource definition."
    },
    "apiMonthlyCostForecast": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "costActual": {
          "type": "number",
          "format": "double"
        },
        "costForecast": {
          "type": "number",
          "format": "double"
        },
        "budget": {
          "type": "number",
          "format": "double"
        },
        "upperBound": {
          "type": "number",
          "format": "double"
        },
        "lowerBound": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "apiNotificationChannel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "email": {
          "$ref": "#/definitions/apiEmailChannel"
        },
        "slack": {
          "$ref": "#/definitions/apiSlackChannel"
        },
        "msteams": {
          "$ref": "#/definitions/apiMSTeamsChannel"
        },
        "product": {
          "type": "string"
        }
      }
    },
    "apiNotificationSettings": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Indicates whether notification is enabled for this account globally."
        },
        "defaultChannel": {
          "type": "string",
          "description": "The id of the default notification channel."
        }
      }
    },
    "apiOndemandChart": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "normalizedUsage": {
          "type": "number",
          "format": "double"
        },
        "ondemandCost": {
          "type": "number",
          "format": "double"
        },
        "usage": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "apiOndemandData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "ondemandChart": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiOndemandChart"
          }
        }
      }
    },
    "apiOptionsChart": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "coverage": {
          "type": "number",
          "format": "double"
        },
        "usage": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "apiOptionsData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "optionsChart": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiOptionsChart"
          }
        }
      }
    },
    "apiPermission": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "policies": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiPolicy"
          }
        }
      }
    },
    "apiPolicy": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string"
        },
        "effect": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "apiRole": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "policies": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiPolicy"
          }
        }
      }
    },
    "apiSlackChannel": {
      "type": "object",
      "properties": {
        "webhookUrl": {
          "type": "string"
        },
        "channelId": {
          "type": "string"
        },
        "channel": {
          "type": "string"
        },
        "configurationUrl": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "redirectUri": {
          "type": "string"
        }
      }
    },
    "apiUsageDetails": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "amount": {
          "type": "number",
          "format": "double"
        }
      },
      "description": "UsageDetails resource definition."
    },
    "apiUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "User's unique id."
        },
        "parent": {
          "type": "string",
          "description": "The user's parent. If empty or non-existent, it means this user is a root user;\notherwise, it's a subuser."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The attributes (key/value pair) of the user. If hierarchy is supported, it will be\nseparated by '/', such as 'key/subkey=value'. See https://alphauslabs.github.io/blueapi/\nfor the list of supported attributes."
        }
      }
    },
    "apiUserRoleMapping": {
      "type": "object",
      "properties": {
        "rootUser": {
          "type": "string"
        },
        "subUser": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "filter": {
          "type": "string"
        }
      }
    },
    "apiUtilizationData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "chartData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/blueapiapiChartData"
          }
        }
      }
    },
    "apiVendorDetail": {
      "type": "object",
      "properties": {
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiAccountDetails"
          },
          "title": "details: Includes account-by-account details"
        },
        "groupDetails": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiGroupDetails"
          },
          "description": "groupDetails: Includes account-by-account details(fee item data)."
        },
        "groupCustomDetails": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiGroupCustomDetails"
          },
          "description": "groupCustomDetails: Includes account-by-account details(custom service and additional item data)."
        },
        "total": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiInvoiceTotal"
          },
          "title": "total: Includes data on billing totals"
        },
        "settings": {
          "$ref": "#/definitions/apiInvoiceSettings",
          "title": "settings: Includes settings related to billing"
        }
      },
      "description": "VendorDetail resource definition."
    },
    "apiawsChartData": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "actualOndemand": {
          "type": "number",
          "format": "double"
        },
        "actualCost": {
          "type": "number",
          "format": "double"
        },
        "utilization": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "apiawsCost": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string",
          "description": "The account being queried."
        },
        "groupId": {
          "type": "string",
          "description": "The group id the account is associated with during the query."
        },
        "type": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "description": "For daily data, format is `yyyy-mm-dd`; for monthly, `yyyy-mm`."
        },
        "productCode": {
          "type": "string",
          "description": "The product code for an AWS service, such as `AmazonEC2`, `AmazonRDS`, etc. This can also be an Alphaus-specified custom value."
        },
        "serviceCode": {
          "type": "string",
          "description": "The CUR service code of the lineitem, if applicable. Sometimes, this is the same as `productCode`, a subset of `productCode`, an Alphaus-specified custom value, or empty."
        },
        "region": {
          "type": "string",
          "description": "The region of the lineitem, if applicable."
        },
        "zone": {
          "type": "string",
          "description": "The zone of the lineitem, if applicable."
        },
        "usageType": {
          "type": "string",
          "description": "The CUR usage type of the lineitem, if applicable."
        },
        "instanceType": {
          "type": "string",
          "description": "The CUR instance type of the lineitem, if applicable."
        },
        "operation": {
          "type": "string",
          "description": "The CUR operation of the lineitem, if applicable."
        },
        "invoiceId": {
          "type": "string",
          "description": "The AWS invoice ID of the lineitem, if applicable."
        },
        "description": {
          "type": "string",
          "description": "The description of the lineitem, if applicable."
        },
        "resourceId": {
          "type": "string",
          "description": "The resource id of the lineitem, if applicable. At the moment, this is not yet fully supported."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "costCategories": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "usage": {
          "type": "number",
          "format": "double",
          "description": "Only set when `description` and/or `resourceId` attributes are specified."
        },
        "cost": {
          "type": "number",
          "format": "double",
          "description": "The true cost (calculated) for this lineitem."
        },
        "unblendedCost": {
          "type": "number",
          "format": "double",
          "description": "The unblended cost as reflected in the CUR for this lineitem."
        },
        "baseCurrency": {
          "type": "string",
          "description": "The base currency for `cost`, `unblendedCost`, `effectiveCost`, `amortizedCost`. Always set to `USD`, CUR's default currency."
        },
        "exchangeRate": {
          "type": "number",
          "format": "double",
          "description": "The exchange rate used to convert `baseCurrency` to `targetCurrency`."
        },
        "targetCost": {
          "type": "number",
          "format": "double",
          "description": "Converted `cost`."
        },
        "targetUnblendedCost": {
          "type": "number",
          "format": "double",
          "description": "Converted `unblendedCost`."
        },
        "targetCurrency": {
          "type": "string",
          "description": "The currency set by `toCurrency`."
        },
        "effectiveCost": {
          "type": "number",
          "format": "double"
        },
        "targetEffectiveCost": {
          "type": "number",
          "format": "double",
          "description": "Converted `effectiveCost`."
        },
        "amortizedCost": {
          "type": "number",
          "format": "double"
        },
        "targetAmortizedCost": {
          "type": "number",
          "format": "double",
          "description": "Converted `amortizedCost`."
        },
        "tagId": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "description": "Get last update in UNIX time format."
        },
        "metadata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiKeyValue"
          },
          "description": "Various metadata associated with this lineitem."
        }
      }
    },
    "apiawsCostAttribute": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string"
        },
        "groupId": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        },
        "serviceCode": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "zone": {
          "type": "string"
        },
        "usageType": {
          "type": "string"
        },
        "instanceType": {
          "type": "string"
        },
        "operation": {
          "type": "string"
        },
        "invoiceId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "costCategories": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "apiazureCost": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string",
          "description": "The account being queried."
        },
        "groupId": {
          "type": "string",
          "description": "The group id the account is associated with during the query."
        },
        "date": {
          "type": "string",
          "description": "For daily data, format is `yyyy-mm-dd`; for monthly, `yyyy-mm`."
        },
        "serviceName": {
          "type": "string",
          "description": "The service name, such as `Software License`, `Cognosys`, `SendGrid`, `New-Commerce ERP Software License`, etc."
        },
        "productName": {
          "type": "string",
          "description": "The product code for an Azure service, such as `Dsv4 Series Windows VM`, `CentOS 7.6`, etc."
        },
        "region": {
          "type": "string",
          "description": "The region of lineitem, if applicable."
        },
        "chargeType": {
          "type": "string",
          "description": "The charge type of lineitem, if applicable. Such as `New`, `CycleCharge`, `Prorate fees when cancel`, etc."
        },
        "description": {
          "type": "string",
          "description": "The description of lineitem, if applicable."
        },
        "billableQuantity": {
          "type": "number",
          "format": "double",
          "description": "The billable quantity of lineitem, if applicable."
        },
        "effectiveUnitPrice": {
          "type": "number",
          "format": "double",
          "description": "The effective unit price of lineitem, if applicable."
        },
        "cost": {
          "type": "number",
          "format": "double",
          "description": "The true cost (calculated) for this lineitem."
        },
        "baseCurrency": {
          "type": "string",
          "description": "The base currency for `cost`."
        },
        "exchangeRate": {
          "type": "number",
          "format": "double",
          "description": "The exchange rate used to convert `baseCurrency` to `targetCurrency`."
        },
        "targetCost": {
          "type": "number",
          "format": "double",
          "description": "Converted `cost`."
        },
        "targetCurrency": {
          "type": "string",
          "description": "The currency set by `toCurrency`."
        },
        "timeInterval": {
          "type": "string",
          "description": "The time interval of lineitem, if applicable. Format is `yyyy-MM-ddThh:MM:ssZ/yyyy-mm-ddTHH:mm:ssZ` (for example 2020-09-16T00:00:00Z/2021-09-24T00:00:00Z)."
        },
        "billingType": {
          "type": "string",
          "description": "The billing type of lineitem, if applicable. Such as `MARKETPLACE`, `UPFRONT`, `Refund`, `Credit` and `OTHERS`."
        },
        "alternateId": {
          "type": "string",
          "description": "The alternate ID of lineitem, if applicable."
        },
        "domainName": {
          "type": "string",
          "description": "The domain name of lineitem, if applicable."
        },
        "operation": {
          "type": "string",
          "description": "The operation of lineitem, if applicable. Such as `Cool LRS Write Operations`, `Cool LRS Data Write`, `Standard Data Transfer Out`, etc."
        },
        "usageType": {
          "type": "string",
          "description": "The usage type of lineitem, if applicable. Such as `Standard HDD Managed Disks`, `Tables`, `Blob Storage`, etc."
        },
        "instanceType": {
          "type": "string",
          "description": "The instance type of lineitem, if applicable. Such as `Gateway`, `Standard_B2s`, `Standard_D4s_v3`, etc."
        }
      }
    },
    "apicoverAccount": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "title": "account, subscription, project"
        }
      }
    },
    "apicoverAwsOptions": {
      "type": "object",
      "properties": {
        "AccountName": {
          "type": "string"
        },
        "PayerId": {
          "type": "string"
        },
        "RoleArn": {
          "type": "string"
        },
        "ExternalId": {
          "type": "string"
        },
        "StackId": {
          "type": "string"
        },
        "StackRegion": {
          "type": "string"
        },
        "TemplateUrl": {
          "type": "string"
        },
        "BucketName": {
          "type": "string"
        },
        "Prefix": {
          "type": "string"
        },
        "ReportName": {
          "type": "string"
        },
        "registrationStatus": {
          "$ref": "#/definitions/coverRegistrationStatus"
        },
        "Status": {
          "type": "string"
        }
      }
    },
    "apicoverBudgetAlert": {
      "type": "object",
      "properties": {
        "threshold": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverThreshold"
          }
        },
        "channels": {
          "$ref": "#/definitions/coverAlertChannels"
        }
      }
    },
    "apigcpCost": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string",
          "title": "account data"
        },
        "groupId": {
          "type": "string",
          "description": "The group id the account is associated with during the query."
        },
        "date": {
          "type": "string",
          "description": "For daily data, format is `yyyy-mm-dd`; for monthly, `yyyy-mm`."
        },
        "invoiceMonth": {
          "type": "string",
          "description": "The invoice.month of the lineitem, if applicable."
        },
        "service": {
          "type": "string",
          "description": "The service.Description of the lineitem, if applicable."
        },
        "sku": {
          "type": "string",
          "description": "The sku.Description of the lineitem, if applicable."
        },
        "region": {
          "type": "string",
          "description": "The location.region of the lineitem, if applicable."
        },
        "zone": {
          "type": "string",
          "description": "The location.zone of the lineitem, if applicable."
        },
        "creditsType": {
          "type": "string",
          "description": "The credits.type of the lineitem, if applicable."
        },
        "creditsName": {
          "type": "string",
          "description": "The credits.name of the lineitem, if applicable."
        },
        "usageUnit": {
          "type": "string",
          "description": "The usage.pricing_unit of the lineitem, if applicable."
        },
        "usageAmount": {
          "type": "number",
          "format": "double",
          "description": "The usage.amount_in_pricing_units of the lineitem, if applicable."
        },
        "baseCurrency": {
          "type": "string",
          "description": "The currency of the lineitem, if applicable."
        },
        "cost": {
          "type": "number",
          "format": "double",
          "description": "The cost of the lineitem, if applicable."
        }
      },
      "description": "see gcp billing data schema details:[https://cloud.google.com/billing/docs/how-to/export-data-bigquery-tables]",
      "title": "Cost for Api Response"
    },
    "apirippleAccessGroup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "billingGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "AccessGroup resource definition."
    },
    "apiwaveBudget": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "budget id\n`previousDay` / `daily` / `monthly`"
        },
        "value": {
          "type": "number",
          "format": "double",
          "title": "budget value"
        },
        "enabled": {
          "type": "boolean",
          "title": "budget setting enable/disable"
        }
      },
      "description": "Budget resource definition."
    },
    "apiwaveBudgetAlert": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "account id.",
          "readOnly": true
        },
        "notification": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiwaveNotification"
          },
          "description": "notification setting."
        },
        "budget": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiwaveBudget"
          },
          "description": "budget setting."
        }
      },
      "description": "Budget resource definition."
    },
    "apiwaveNotification": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "notification id\n`email` / `slack`"
        },
        "destination": {
          "type": "string",
          "title": "destination email address /slack webhook url"
        },
        "enabled": {
          "type": "boolean",
          "title": "notification enable/disable"
        }
      },
      "description": "Notification resource definition."
    },
    "awsAdjustmentsTypeList": {
      "type": "object",
      "properties": {
        "types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "awsAwsCostBreakeven": {
      "type": "object",
      "properties": {
        "arn": {
          "type": "string"
        },
        "startDate": {
          "type": "string"
        },
        "endDate": {
          "type": "string"
        },
        "breakEvenPoint": {
          "type": "string"
        },
        "upperRatio": {
          "type": "number",
          "format": "double"
        },
        "lowerRatio": {
          "type": "number",
          "format": "double"
        },
        "chartData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiawsChartData"
          }
        }
      }
    },
    "awsAwsCostReductions": {
      "type": "object",
      "properties": {
        "summary": {
          "$ref": "#/definitions/awsCostReductionSummary"
        },
        "riCostReductions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/awsRiCostReduction"
          }
        },
        "spCostReductions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/awsSpCostReduction"
          }
        }
      }
    },
    "awsAwsRecommendations": {
      "type": "object",
      "properties": {
        "summary": {
          "$ref": "#/definitions/awsReservationRecommendationSummary"
        },
        "riRecommendations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/awsRiRecommendation"
          }
        },
        "spRecommendations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/awsSpRecommendation"
          }
        },
        "estimatedCoverage": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/awsReservationEstimatedCoverage"
          }
        }
      }
    },
    "awsCalculatorConfig": {
      "type": "object",
      "properties": {
        "adjustmentsTypeList": {
          "$ref": "#/definitions/awsAdjustmentsTypeList",
          "description": "CUR lineitem types included in Ripple's 'Adjusting Entries'."
        },
        "excludedServicesFromUsage": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/awsExcludedServiceFromUsage"
          },
          "description": "List of services that are of type 'Usage' in CUR that are excluded,\noptionally converted to Adjustments."
        }
      },
      "description": "AWS's calculation engine configuration(s)."
    },
    "awsCostReductionSummary": {
      "type": "object",
      "properties": {
        "totalOnDemandCost": {
          "type": "number",
          "format": "double"
        },
        "totalEffectiveCost": {
          "type": "number",
          "format": "double"
        },
        "totalSavings": {
          "type": "number",
          "format": "double"
        },
        "totalRiOnDemandCost": {
          "type": "number",
          "format": "double"
        },
        "totalRiEffectiveCost": {
          "type": "number",
          "format": "double"
        },
        "totalRiSavings": {
          "type": "number",
          "format": "double"
        },
        "totalSpOnDemandCost": {
          "type": "number",
          "format": "double"
        },
        "totalSpEffectiveCost": {
          "type": "number",
          "format": "double"
        },
        "totalSpSavings": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "awsExcludedServiceFromUsage": {
      "type": "object",
      "properties": {
        "managementAccount": {
          "type": "string",
          "description": "The management account (formerly master account) the `productCode` belongs to."
        },
        "productCode": {
          "type": "string",
          "description": "The excluded product code."
        },
        "convertedToAdjustments": {
          "type": "boolean",
          "description": "If the product code is converted to Adjustments or not."
        }
      }
    },
    "awsReservationEstimatedCoverage": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        },
        "instanceFamily": {
          "type": "string"
        },
        "riUsageCoverage": {
          "type": "number",
          "format": "double"
        },
        "ec2SpUsageCoverage": {
          "type": "number",
          "format": "double"
        },
        "computeSpOnDemandCost": {
          "type": "number",
          "format": "double"
        },
        "computeSpDiscountedCost": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "awsReservationRecommendationSummary": {
      "type": "object",
      "properties": {
        "totalMonthlyOnDemandCost": {
          "type": "number",
          "format": "double"
        },
        "totalEstimatedMonthlySavings": {
          "type": "number",
          "format": "double"
        },
        "totalMonthlyDiscountedCost": {
          "type": "number",
          "format": "double"
        },
        "reductionRate": {
          "type": "number",
          "format": "double"
        },
        "totalUpfrontCost": {
          "type": "number",
          "format": "double"
        },
        "totalRecurringMonthlyCost": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "awsRiCostReduction": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "arn": {
          "type": "string"
        },
        "customerId": {
          "type": "string"
        },
        "customerName": {
          "type": "string"
        },
        "billingInternalId": {
          "type": "string"
        },
        "billingGroupId": {
          "type": "string"
        },
        "billingGroupName": {
          "type": "string"
        },
        "destCustomerId": {
          "type": "string"
        },
        "start": {
          "type": "string"
        },
        "end": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "instanceType": {
          "type": "string"
        },
        "modificationStatus": {
          "type": "string"
        },
        "number": {
          "type": "string",
          "format": "int64"
        },
        "offerClass": {
          "type": "string"
        },
        "deploymentOption": {
          "type": "string"
        },
        "paidBy": {
          "type": "string"
        },
        "paymentOption": {
          "type": "string"
        },
        "platform": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "remove": {
          "type": "boolean"
        },
        "scope": {
          "type": "string"
        },
        "tenancy": {
          "type": "string"
        },
        "termLength": {
          "type": "string"
        },
        "usageType": {
          "type": "string"
        },
        "vendor": {
          "type": "string"
        },
        "zone": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        },
        "normalizationFactor": {
          "type": "number",
          "format": "double"
        },
        "unblendedRate": {
          "type": "number",
          "format": "double"
        },
        "upfrontValue": {
          "type": "number",
          "format": "double"
        },
        "ondemandCost": {
          "type": "number",
          "format": "double"
        },
        "effectiveCost": {
          "type": "number",
          "format": "double"
        },
        "savings": {
          "type": "number",
          "format": "double"
        },
        "breakEven": {
          "type": "string",
          "title": "for break even point date"
        }
      }
    },
    "awsRiRecommendation": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "instanceType": {
          "type": "string"
        },
        "quantity": {
          "type": "string",
          "format": "int64"
        },
        "normalizedUnit": {
          "type": "number",
          "format": "double"
        },
        "operatingSystem": {
          "type": "string",
          "title": "for amazon ec2 only"
        },
        "preInstalledSW": {
          "type": "string"
        },
        "tenancy": {
          "type": "string"
        },
        "dbEngine": {
          "type": "string",
          "title": "for amazon rds only"
        },
        "deploymentOption": {
          "type": "string"
        },
        "ondemandCost": {
          "type": "number",
          "format": "double"
        },
        "ondemandrate": {
          "type": "number",
          "format": "double"
        },
        "riRate": {
          "type": "number",
          "format": "double"
        },
        "upfrontCost": {
          "type": "number",
          "format": "double"
        },
        "discountedCost": {
          "type": "number",
          "format": "double"
        },
        "monthlyAmortizedCost": {
          "type": "number",
          "format": "double"
        },
        "monthlyRecurringCost": {
          "type": "number",
          "format": "double"
        },
        "yearlyDiscountedCost": {
          "type": "number",
          "format": "double"
        },
        "reductionRate": {
          "type": "number",
          "format": "double"
        },
        "estimatedMonthlySavings": {
          "type": "number",
          "format": "double"
        },
        "daysBeforeBreakEven": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "awsSpCostReduction": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "arn": {
          "type": "string"
        },
        "customerId": {
          "type": "string"
        },
        "customerName": {
          "type": "string"
        },
        "billingGroupId": {
          "type": "string"
        },
        "billingGroupName": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "savingsPlan": {
          "type": "string"
        },
        "start": {
          "type": "string"
        },
        "end": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "instanceFamily": {
          "type": "string"
        },
        "termLength": {
          "type": "string"
        },
        "paymentOption": {
          "type": "string"
        },
        "commitment": {
          "type": "number",
          "format": "double"
        },
        "upfrontFee": {
          "type": "number",
          "format": "double"
        },
        "recurringFee": {
          "type": "number",
          "format": "double"
        },
        "ondemandCost": {
          "type": "number",
          "format": "double"
        },
        "effectiveCost": {
          "type": "number",
          "format": "double"
        },
        "savings": {
          "type": "number",
          "format": "double"
        },
        "breakEven": {
          "type": "string",
          "title": "for break even point date"
        }
      }
    },
    "awsSpRecommendation": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "spProductFamily": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "instanceFamily": {
          "type": "string"
        },
        "ondemandCost": {
          "type": "number",
          "format": "double"
        },
        "commitment": {
          "type": "number",
          "format": "double"
        },
        "normalizedUnit": {
          "type": "number",
          "format": "double"
        },
        "discountedCost": {
          "type": "number",
          "format": "double"
        },
        "monthlyDiscountedCost": {
          "type": "number",
          "format": "double"
        },
        "yearlyDiscountedCost": {
          "type": "number",
          "format": "double"
        },
        "estimatedMonthlySavings": {
          "type": "number",
          "format": "double"
        },
        "reductionRate": {
          "type": "number",
          "format": "double"
        },
        "daysBeforeBreakEven": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "billingv1AccessGroup": {
      "type": "object",
      "properties": {
        "accessGroupId": {
          "type": "string",
          "description": "The ID of the access group."
        },
        "accessGroupName": {
          "type": "string",
          "description": "The name of the access group."
        },
        "accessGroupDescription": {
          "type": "string",
          "description": "A description of the access group."
        },
        "billingGroups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BillingGroup"
          },
          "description": "A list of billing groups contained in the access group."
        }
      },
      "description": "Defines the fields associated with a Wave access group."
    },
    "billingv1AwsOptions": {
      "type": "object",
      "properties": {
        "useProFormaCur": {
          "type": "boolean"
        },
        "payerId": {
          "type": "string",
          "description": "Must not be empty if useProFormaCur is true."
        }
      }
    },
    "blueapiapiAccount": {
      "type": "object",
      "properties": {
        "vendor": {
          "type": "string",
          "title": "The vendor"
        },
        "id": {
          "type": "string",
          "description": "The account id."
        },
        "name": {
          "type": "string",
          "description": "The account name."
        },
        "orgId": {
          "type": "string",
          "description": "The parent organization id."
        },
        "billingInternalId": {
          "type": "string",
          "description": "The parent billing internal id."
        },
        "metadata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiKeyValue"
          },
          "description": "The attributes (key/value pair) of the account."
        }
      }
    },
    "blueapiapiBudget": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "fiscalYear": {
          "type": "string",
          "title": "Format: yyyy"
        },
        "monthlyBudget": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiMonthlyBudget"
          }
        }
      }
    },
    "blueapiapiChartData": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "cost": {
          "type": "number",
          "format": "double"
        },
        "profit": {
          "type": "number",
          "format": "double"
        },
        "utilization": {
          "type": "number",
          "format": "double"
        },
        "commitment": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "blueapiapiFeeDetails": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "amount": {
          "type": "number",
          "format": "double"
        }
      },
      "description": "FeeDetails resource definition."
    },
    "blueapiapiNotification": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "notificationType": {
          "type": "string"
        },
        "channels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "enabled": {
          "type": "boolean"
        },
        "account": {
          "$ref": "#/definitions/blueapiapiNotificationAccount"
        }
      }
    },
    "blueapiapiNotificationAccount": {
      "type": "object",
      "properties": {
        "vendor": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        }
      }
    },
    "blueapicostv1CostItem": {
      "type": "object",
      "properties": {
        "aws": {
          "$ref": "#/definitions/apiawsCost"
        },
        "gcp": {
          "$ref": "#/definitions/apigcpCost"
        },
        "azure": {
          "$ref": "#/definitions/apiazureCost"
        }
      },
      "description": "Response message wrapper for cloud costs."
    },
    "blueapicoverv1CostItem": {
      "type": "object",
      "properties": {
        "vendor": {
          "type": "string",
          "title": "`aws`, `azure`, `azureea` or `gcp`"
        },
        "date": {
          "type": "string"
        },
        "product": {
          "type": "string"
        },
        "account": {
          "type": "string",
          "title": "AWS linked account or Azure subscription or GCP project"
        },
        "cost": {
          "type": "number",
          "format": "double"
        },
        "details": {
          "type": "string",
          "title": "Could be AWS, Azure or GCP Cost"
        },
        "forecast": {
          "$ref": "#/definitions/coverAwsCostForecast",
          "title": "Only for AWS for now"
        }
      },
      "description": "Response message wrapper for cloud costs."
    },
    "costv1CostAttribute": {
      "type": "object",
      "properties": {
        "vendor": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "coverAWS": {
      "type": "object",
      "properties": {
        "EC2": {
          "$ref": "#/definitions/coverEC2"
        },
        "Lambda": {
          "$ref": "#/definitions/coverLambda"
        },
        "EBS": {
          "$ref": "#/definitions/coverEBS"
        }
      }
    },
    "coverAWSRecommendations": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "accountName": {
          "type": "string"
        },
        "instanceId": {
          "type": "string"
        },
        "instanceName": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "costGroup": {
          "type": "string"
        },
        "recommendation": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "purchaseRIRecommendationDetails": {
          "$ref": "#/definitions/coverPurchaseRIRecommendationDetails"
        },
        "savingsPlanRecommendationDetails": {
          "$ref": "#/definitions/coverSavingsPlanRecommendationDetails"
        },
        "rightSizingRecommendationDetails": {
          "$ref": "#/definitions/coverRightSizingRecommendationDetails"
        },
        "upgradeRecommendationDetails": {
          "$ref": "#/definitions/coverUpgradeRecommendationDetails"
        },
        "migrateRecommendationDetails": {
          "$ref": "#/definitions/coverMigrateRecommendationDetails"
        }
      }
    },
    "coverAlertChannel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "coverAlertChannels": {
      "type": "object",
      "properties": {
        "email": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverAlertChannel"
          }
        },
        "slack": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverAlertChannel"
          }
        },
        "msteams": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverAlertChannel"
          }
        }
      }
    },
    "coverAlertCostGroup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "coverAlertData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "granularity": {
          "type": "string"
        },
        "costGroups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverAlertCostGroup"
          }
        },
        "channels": {
          "$ref": "#/definitions/coverAlertChannels"
        },
        "createdBy": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        },
        "fixedAmount": {
          "type": "number",
          "format": "float"
        },
        "percentage": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "coverAnomalyOptions": {
      "type": "object",
      "properties": {
        "threshold": {
          "type": "number",
          "format": "float"
        },
        "isPercentage": {
          "type": "boolean"
        },
        "pastDataInMonths": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "coverAwsCostForecast": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "description": "For daily data, format is `yyyy-mm-dd`; for monthly, `yyyy-mm`."
        },
        "account": {
          "type": "string",
          "description": "The account being queried."
        },
        "productCode": {
          "type": "string",
          "title": "The product code for an AWS service"
        },
        "cost": {
          "type": "number",
          "format": "double",
          "title": "Forcasted cost based on true cost (calculated)"
        },
        "lowerBound": {
          "type": "number",
          "format": "double"
        },
        "upperBound": {
          "type": "number",
          "format": "double"
        },
        "unblendedCost": {
          "type": "number",
          "format": "double",
          "title": "Forcasted cost based on unblended cost"
        },
        "unblendedLowerBound": {
          "type": "number",
          "format": "double"
        },
        "unblendedUpperBound": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "coverAwsDiscountRecommendations": {
      "type": "object",
      "properties": {
        "riRecommendations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverRiRecommendationResults"
          }
        },
        "spRecommendations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverSpRecommendationResults"
          }
        }
      }
    },
    "coverAwsInputs": {
      "type": "object",
      "properties": {
        "offeringClass": {
          "type": "string",
          "title": "Supported values are the following: ('STANDARD', 'CONVERTIBLE') -\u003e for RI only"
        },
        "paymentOption": {
          "type": "string",
          "title": "Supported values are the following: ('ALL_UPFRONT', 'PARTIAL_UPFRONT', 'NO_UPFRONT')"
        },
        "termInYears": {
          "type": "string",
          "title": "Supported values are the following:('ONE_YEAR', 'THREE_YEARS')"
        },
        "basedOnThePast": {
          "type": "string",
          "title": "Supported values are the following:('SEVEN_DAYS', 'THIRTY_DAYS', 'SIXTY_DAYS')"
        }
      }
    },
    "coverAzureCSP": {
      "type": "object"
    },
    "coverAzureDiscountRecommendations": {
      "type": "object"
    },
    "coverAzureInputs": {
      "type": "object"
    },
    "coverAzureOptions": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string"
        },
        "azureCustomerId": {
          "type": "string"
        },
        "azurePlanId": {
          "type": "string"
        },
        "serviceAcct": {
          "type": "string"
        },
        "partnerAcct": {
          "type": "string"
        },
        "companyId": {
          "type": "string"
        },
        "payerId": {
          "type": "string"
        }
      }
    },
    "coverBudgetData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "not required for creating budget"
        },
        "startDate": {
          "type": "string",
          "title": "use yyyymmdd format"
        },
        "endDate": {
          "type": "string",
          "title": "use yyyymmdd format"
        },
        "totalBudget": {
          "type": "number",
          "format": "float"
        },
        "period": {
          "type": "string",
          "format": "int64",
          "title": "3, 6, 12 months"
        },
        "granularBudget": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverGranularBudgetData"
          },
          "title": "budget per month"
        },
        "costGroup": {
          "$ref": "#/definitions/coverAlertCostGroup"
        },
        "alerts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apicoverBudgetAlert"
          },
          "title": "threshold(s) and its respective channel(s) to alert"
        },
        "forecastedData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverGranularForecastData"
          },
          "title": "forecast for ongoing months of an active budget; if expired, archived forecast record"
        },
        "spendingData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverGranularSpendingData"
          },
          "title": "spending data"
        },
        "expired": {
          "type": "boolean",
          "title": "true if budget has expired"
        },
        "draft": {
          "type": "boolean",
          "title": "true if the current budget set is still a draft"
        },
        "createdBy": {
          "type": "string",
          "title": "not required for creating budget"
        },
        "createdAt": {
          "type": "string",
          "title": "not required for creating budget"
        },
        "updatedBy": {
          "type": "string",
          "title": "not required for creating budget"
        },
        "updatedAt": {
          "type": "string",
          "title": "not required for creating budget"
        },
        "totalSpend": {
          "type": "number",
          "format": "float",
          "title": "total accumulated spending within the budget period"
        }
      }
    },
    "coverCategory": {
      "type": "object",
      "properties": {
        "display": {
          "type": "string"
        },
        "query": {
          "type": "string"
        }
      }
    },
    "coverChannelData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "title": "actual email value of channel name in slack or ms teams"
        },
        "type": {
          "type": "string",
          "title": "email, slack, msteams"
        },
        "webhookUrl": {
          "type": "string"
        }
      }
    },
    "coverCombinations": {
      "type": "object",
      "properties": {
        "awsOptions": {
          "$ref": "#/definitions/coverCostGroupAwsOptions",
          "description": "Optional. Valid only for the `aws` vendor. AWS-specific options."
        },
        "azureOptions": {
          "$ref": "#/definitions/coverCostGroupAzureOptions",
          "description": "Optional. Valid only for the `azure` vendor. Azure-specific options."
        },
        "gcpOptions": {
          "$ref": "#/definitions/coverCostGroupGcpOptions",
          "description": "Optional. Valid only for the `gcp` vendor. GCP-specific options."
        },
        "azurecspOptions": {
          "$ref": "#/definitions/coverCostGroupAzureCspOptions",
          "description": "Optional. Valid only for the `azurecsp` vendor. AzureCSP-specific options."
        },
        "customOptions": {
          "$ref": "#/definitions/coverCostGroupCustomOptions",
          "description": "Optional. For custom selection when creating cost groups.\nThis field allows custom options for specifying criteria for cost group creation."
        }
      }
    },
    "coverCostGroupAwsOptions": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverCostGroupOptionsFilters"
          },
          "description": "Optional. A list of filtering options. Multiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc.\nA map of \"key:value\" column filters. The key indicates the column name while the value is the filter value prefixed by either \"eq:\" (equal), \"re:\" (regular expressions based on https://github.com/google/re2), or \"!re:\" (reverse \"re:\"). No prefix is the same as \"eq:\". Multiple map items will use the logical 'and' operator, e.g. mapfilter1 \u0026\u0026 mapfilter2 \u0026\u0026 mapfilter3, etc.\n\nFor example, if you like to filter `productCode` to return only `AmazonEC2`, set to `{\"productCode\":\"eq:AmazonEC2\"}` or `{\"productCode\":\"AmazonEC2\"}`. You can also use a regular expression like `{\"productCode\":\"re:AmazonEC2|AmazonRDS\"}`, which means return all AmazonEC2 or AmazonRDS lineitems. Or reverse regexp, such as `{\"productCode\":\"!re:^AmazonEC2$\"}`, which means return all items except `AmazonEC2`."
        },
        "tagFilters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverCostGroupOptionsFilters"
          },
          "description": "Optional. A list of filtering options. See [ReadCostsRequestAwsOptionsFilters] for more information on each filter item. Multiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc.\nA map of \"key:value\" tag filters. The key indicates the tag key while the value is the filter tag value which can be prefixed by either \"eq:\" (equal), \"re:\" (regular expressions based on https://github.com/google/re2), or \"!re:\" (reverse \"re:\"). No prefix is the same as \"eq:\". Multiple map items will use the logical 'and' operator, e.g. mapfilter1 \u0026\u0026 mapfilter2 \u0026\u0026 mapfilter3, etc.\n\nFor example, if you want to query lineitems with the tag `project:MY_PROJECT`, set to `{\"project\":\"MY_PROJECT\"}`. You can also use regular expressions for tag values, such as `{\"name\":\"re:[A-Za-z0-9]*\"}`."
        }
      },
      "description": "AWS-specific options for CreateCostGroupRequest."
    },
    "coverCostGroupAzureCspOptions": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverCostGroupOptionsFilters"
          },
          "description": "Optional. A list of filtering options. Multiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc.\nA map of \"key:value\" column filters. The key indicates the column name while the value is the filter value prefixed by either \"eq:\" (equal), \"re:\" (regular expressions based on https://github.com/google/re2), or \"!re:\" (reverse \"re:\"). No prefix is the same as \"eq:\". Multiple map items will use the logical 'and' operator, e.g. mapfilter1 \u0026\u0026 mapfilter2 \u0026\u0026 mapfilter3, etc.\n\nFor example, if you like to filter `productCode` to return only `AmazonEC2`, set to `{\"productCode\":\"eq:AmazonEC2\"}` or `{\"productCode\":\"AmazonEC2\"}`. You can also use a regular expression like `{\"productCode\":\"re:AmazonEC2|AmazonRDS\"}`, which means return all AmazonEC2 or AmazonRDS lineitems. Or reverse regexp, such as `{\"productCode\":\"!re:^AmazonEC2$\"}`, which means return all items except `AmazonEC2`."
        },
        "tagFilters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverCostGroupOptionsFilters"
          },
          "description": "Optional. A list of filtering options. See [ReadCostsRequestAwsOptionsFilters] for more information on each filter item. Multiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc.\nA map of \"key:value\" tag filters. The key indicates the tag key while the value is the filter tag value which can be prefixed by either \"eq:\" (equal), \"re:\" (regular expressions based on https://github.com/google/re2), or \"!re:\" (reverse \"re:\"). No prefix is the same as \"eq:\". Multiple map items will use the logical 'and' operator, e.g. mapfilter1 \u0026\u0026 mapfilter2 \u0026\u0026 mapfilter3, etc.\n\nFor example, if you want to query lineitems with the tag `project:MY_PROJECT`, set to `{\"project\":\"MY_PROJECT\"}`. You can also use regular expressions for tag values, such as `{\"name\":\"re:[A-Za-z0-9]*\"}`."
        }
      },
      "description": "AzureCsp-specific options for CreateCostGroupRequest."
    },
    "coverCostGroupAzureOptions": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverCostGroupOptionsFilters"
          },
          "description": "Optional. A list of filtering options. Multiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc.\nA map of \"key:value\" column filters. The key indicates the column name while the value is the filter value prefixed by either \"eq:\" (equal), \"re:\" (regular expressions based on https://github.com/google/re2), or \"!re:\" (reverse \"re:\"). No prefix is the same as \"eq:\". Multiple map items will use the logical 'and' operator, e.g. mapfilter1 \u0026\u0026 mapfilter2 \u0026\u0026 mapfilter3, etc.\n\nFor example, if you like to filter `productCode` to return only `AmazonEC2`, set to `{\"productCode\":\"eq:AmazonEC2\"}` or `{\"productCode\":\"AmazonEC2\"}`. You can also use a regular expression like `{\"productCode\":\"re:AmazonEC2|AmazonRDS\"}`, which means return all AmazonEC2 or AmazonRDS lineitems. Or reverse regexp, such as `{\"productCode\":\"!re:^AmazonEC2$\"}`, which means return all items except `AmazonEC2`."
        },
        "tagFilters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverCostGroupOptionsFilters"
          },
          "description": "Optional. A list of filtering options. See [ReadCostsRequestAwsOptionsFilters] for more information on each filter item. Multiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc.\nA map of \"key:value\" tag filters. The key indicates the tag key while the value is the filter tag value which can be prefixed by either \"eq:\" (equal), \"re:\" (regular expressions based on https://github.com/google/re2), or \"!re:\" (reverse \"re:\"). No prefix is the same as \"eq:\". Multiple map items will use the logical 'and' operator, e.g. mapfilter1 \u0026\u0026 mapfilter2 \u0026\u0026 mapfilter3, etc.\n\nFor example, if you want to query lineitems with the tag `project:MY_PROJECT`, set to `{\"project\":\"MY_PROJECT\"}`. You can also use regular expressions for tag values, such as `{\"name\":\"re:[A-Za-z0-9]*\"}`."
        }
      },
      "description": "Azure-specific options for CreateCostGroupRequest."
    },
    "coverCostGroupCustomOptions": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverCostGroupOptionsFilters"
          },
          "description": "Optional. A list of filtering options. Multiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc."
        }
      },
      "description": "Custom-specific options for CreateCostGroupRequest."
    },
    "coverCostGroupData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "colorTheme": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        },
        "members": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverMemberUserData"
          }
        },
        "combinations": {
          "$ref": "#/definitions/coverCombinations"
        },
        "createdBy": {
          "$ref": "#/definitions/coverMemberUserData"
        },
        "eventIndicator": {
          "$ref": "#/definitions/coverEventIndicator"
        },
        "anomalyOptions": {
          "$ref": "#/definitions/coverAnomalyOptions"
        }
      }
    },
    "coverCostGroupGcpOptions": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverCostGroupOptionsFilters"
          },
          "description": "Optional. A list of filtering options. Multiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc.\nA map of \"key:value\" column filters. The key indicates the column name while the value is the filter value prefixed by either \"eq:\" (equal), \"re:\" (regular expressions based on https://github.com/google/re2), or \"!re:\" (reverse \"re:\"). No prefix is the same as \"eq:\". Multiple map items will use the logical 'and' operator, e.g. mapfilter1 \u0026\u0026 mapfilter2 \u0026\u0026 mapfilter3, etc.\n\nFor example, if you like to filter `serviceDescriptinon` to return only `Cloud Spanner`, set to `{\"serviceDescription\":\"eq:Cloud Spanner\"}` or `{\"serviceDescription\":\"Cloud Spanner\"}`. You can also use a regular expression like `{\"serviceDescription\":\"re:Cloud Spanner|BigQuery\"}`, which means return all Cloud Spanner or BigQuery lineitems. Or reverse regexp, such as `{\"serviceDescription\":\"!re:^Cloud Spanner$\"}`, which means return all items except `Cloud Spanner`."
        },
        "tagFilters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverCostGroupOptionsFilters"
          },
          "description": "Tags on gcp used to conditionally allow or deny policies based on whether a supported resource has a specific tag.\nSuppose you have a set of virtual machines (VMs) running various applications, and you want to distinguish between them based on their roles. You could assign tags like \"app:webserver\" and \"app:database\" to identify which VMs serve as web servers and which ones are database servers.\nIf you want to query lineitems with the tag `app:database`, set to `{\"app\":\"database\"}`. You can also use regular expressions for tag values, such as `{\"name\":\"re:[A-Za-z0-9]*\"}`."
        },
        "labelFilters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverCostGroupOptionsFilters"
          },
          "description": "Labels on gcp help you organize resources and manage your costs at scale, with the granularity you need.\nFor example, on Compute Engine, you can use labels to group VMs in categories such as production, staging, or development so that you can search for resources that belong to each development stage.\nIf you want to query lineitems with the label `vm-prod: prod`, set to `{\"vm-prod\":\"prod\"}`. You can also use regular expressions for tag values, such as `{\"name\":\"re:[A-Za-z0-9]*\"}`."
        },
        "projectLabelFilters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverCostGroupOptionsFilters"
          },
          "description": "Project Labels refers to labels that have been assigned to GCP projects. \nFor example, projectId \"mobingi-main\" assigned as \"env:prod\"\nIf you want to query lineitems with the label `env: prod`, set to `{\"env\":\"prod\"}`. You can also use regular expressions for tag values, such as `{\"name\":\"re:[A-Za-z0-9]*\"}`."
        }
      },
      "description": "GCP-specific options for CreateCostGroupRequest."
    },
    "coverCostGroupOptionsFilters": {
      "type": "object",
      "properties": {
        "andFilters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "coverCostGroupSpendingData": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "value": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "coverCurrentEBSDetails": {
      "type": "object",
      "properties": {
        "attachmentState": {
          "type": "string"
        },
        "iops": {
          "type": "number",
          "format": "double"
        },
        "throughput": {
          "type": "number",
          "format": "double"
        },
        "sizeInGb": {
          "type": "number",
          "format": "double"
        },
        "storageType": {
          "type": "string"
        },
        "operation": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        },
        "unit": {
          "type": "string"
        },
        "usageAmount": {
          "type": "number",
          "format": "double"
        },
        "usageType": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "coverCurrentEC2Details": {
      "type": "object",
      "properties": {
        "instanceType": {
          "type": "string"
        },
        "os": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "cpuUtilization": {
          "type": "number",
          "format": "double"
        },
        "memoryUtilization": {
          "type": "number",
          "format": "double"
        },
        "diskUtilization": {
          "type": "number",
          "format": "double"
        },
        "networkCapacity": {
          "type": "string"
        },
        "monthlyCost": {
          "type": "number",
          "format": "double"
        },
        "eC2CpuUtilization": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverEC2CpuUtilization"
          }
        },
        "eC2DiskUtilization": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverEC2DiskUtilization"
          }
        },
        "eC2MemoryUtilization": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverEC2MemoryUtilization"
          }
        }
      }
    },
    "coverEBS": {
      "type": "object",
      "properties": {
        "volumeType": {
          "type": "string"
        },
        "iops": {
          "type": "string",
          "format": "int64"
        },
        "sizeInGb": {
          "type": "string",
          "format": "int64"
        },
        "throughput": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "coverEC2": {
      "type": "object",
      "properties": {
        "instanceType": {
          "type": "string"
        }
      }
    },
    "coverEC2CpuUtilization": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "value": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "coverEC2CurrentDetails": {
      "type": "object",
      "properties": {
        "instanceType": {
          "type": "string"
        },
        "operation": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        },
        "unit": {
          "type": "string"
        },
        "usageAmount": {
          "type": "number",
          "format": "double"
        },
        "usageType": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "coverEC2Details": {
      "type": "object",
      "properties": {
        "instanceType": {
          "type": "string"
        },
        "tenancy": {
          "type": "string"
        },
        "family": {
          "type": "string"
        },
        "platform": {
          "type": "string"
        }
      }
    },
    "coverEC2DiskUtilization": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "value": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "coverEC2MemoryUtilization": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "value": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "coverEC2ModifyRecommendationDetails": {
      "type": "object",
      "properties": {
        "instanceType": {
          "type": "string"
        },
        "os": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "estCpuUtilization": {
          "type": "number",
          "format": "double"
        },
        "estMemoryUtilization": {
          "type": "number",
          "format": "double"
        },
        "estDiskUtilization": {
          "type": "number",
          "format": "double"
        },
        "estNetworkCapacity": {
          "type": "string"
        }
      }
    },
    "coverEC2Options": {
      "type": "object",
      "properties": {
        "instanceType": {
          "type": "string"
        },
        "tenancy": {
          "type": "string"
        },
        "family": {
          "type": "string"
        },
        "platform": {
          "type": "string"
        }
      }
    },
    "coverEC2RecommendationDetails": {
      "type": "object",
      "properties": {
        "instanceType": {
          "type": "string"
        },
        "operation": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        },
        "unit": {
          "type": "string"
        },
        "usageAmount": {
          "type": "number",
          "format": "double"
        },
        "usageType": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "coverEC2rightSizingDetails": {
      "type": "object",
      "properties": {
        "currentEC2Details": {
          "$ref": "#/definitions/coverCurrentEC2Details"
        },
        "eC2ModifyRecommendationDetails": {
          "$ref": "#/definitions/coverEC2ModifyRecommendationDetails"
        }
      }
    },
    "coverESDetails": {
      "type": "object",
      "properties": {
        "instanceClass": {
          "type": "string"
        },
        "instanceSize": {
          "type": "string"
        }
      }
    },
    "coverESOptions": {
      "type": "object",
      "properties": {
        "instanceClass": {
          "type": "string"
        },
        "instanceSize": {
          "type": "string"
        }
      }
    },
    "coverElasticCacheDetails": {
      "type": "object",
      "properties": {
        "family": {
          "type": "string"
        },
        "nodeType": {
          "type": "string"
        },
        "productDescription": {
          "type": "string"
        }
      }
    },
    "coverElasticCacheOptions": {
      "type": "object",
      "properties": {
        "family": {
          "type": "string"
        },
        "nodeType": {
          "type": "string"
        },
        "productDescription": {
          "type": "string"
        }
      }
    },
    "coverEstOutcomeFromPurchaseRIRecommendation": {
      "type": "object",
      "properties": {
        "aveUtilization": {
          "type": "number",
          "format": "double"
        },
        "aveNormalizedUnitsUsedPerHour": {
          "type": "number",
          "format": "double"
        },
        "aveNumberofInstanceUsedPerHour": {
          "type": "number",
          "format": "double"
        },
        "breakEvenInMonths": {
          "type": "number",
          "format": "double"
        },
        "monthlyOnDemandCost": {
          "type": "number",
          "format": "double"
        },
        "monthlyRICost": {
          "type": "number",
          "format": "double"
        },
        "monthlySavings": {
          "type": "number",
          "format": "double"
        },
        "monthlySavingsPercentage": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "coverEstOutcomeFromSPRecommendation": {
      "type": "object",
      "properties": {
        "aveCoverage": {
          "type": "number",
          "format": "double"
        },
        "aveUtilization": {
          "type": "number",
          "format": "double"
        },
        "monthlySavingsAmount": {
          "type": "number",
          "format": "double"
        },
        "OnDemandCost": {
          "type": "number",
          "format": "double"
        },
        "roi": {
          "type": "number",
          "format": "double"
        },
        "savingsPlanCost": {
          "type": "number",
          "format": "double"
        },
        "savingsPercentage": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "coverEventIndicator": {
      "type": "object",
      "properties": {
        "anomaly": {
          "type": "boolean",
          "title": "Anomaly is supported for now"
        }
      }
    },
    "coverExecutedRecommendationDetails": {
      "type": "object",
      "properties": {
        "recommendationId": {
          "type": "string"
        },
        "recommendaton": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "completedDate": {
          "type": "string"
        },
        "estSavings": {
          "type": "number",
          "format": "double"
        },
        "estCost": {
          "type": "number",
          "format": "double"
        },
        "vendor": {
          "type": "string"
        },
        "costgroupId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "coverExecutiveSummary": {
      "type": "object",
      "properties": {
        "costUsage": {
          "type": "number",
          "format": "double",
          "title": "The total cost usage of the current period"
        },
        "previousPeriodCostUsage": {
          "type": "number",
          "format": "double",
          "title": "The total cost usage of the previous period"
        },
        "status": {
          "type": "string",
          "title": "The status of the cost usage compared to the previous period. \"increased\", \"decreased\""
        },
        "percentageChanged": {
          "type": "number",
          "format": "double",
          "title": "The percentage changed compared to the previous period"
        },
        "averageMonthlyChanged": {
          "type": "number",
          "format": "double",
          "title": "The average monthly changed"
        },
        "differenceFromPreviousPeriod": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "coverFavorites": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "isPrivate": {
          "type": "boolean"
        },
        "icon": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        },
        "colorTheme": {
          "type": "string"
        }
      }
    },
    "coverGCP": {
      "type": "object"
    },
    "coverGcpDiscountRecommendations": {
      "type": "object"
    },
    "coverGcpInputs": {
      "type": "object"
    },
    "coverGcpOptions": {
      "type": "object",
      "properties": {
        "projectName": {
          "type": "string"
        },
        "billingId": {
          "type": "string"
        },
        "datasetId": {
          "type": "string"
        },
        "datasetRegion": {
          "type": "string"
        }
      }
    },
    "coverGranularBudgetData": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "title": "use yyyymm format"
        },
        "budget": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "coverGranularForecastData": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "title": "use yyyymm format"
        },
        "mid": {
          "type": "number",
          "format": "float"
        },
        "upperBound": {
          "type": "number",
          "format": "float"
        },
        "lowerBound": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "coverGranularSpendingData": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "title": "use yyyymm format"
        },
        "value": {
          "type": "number",
          "format": "float",
          "title": "actual cost for the month"
        }
      }
    },
    "coverIncludeForecast": {
      "type": "object",
      "properties": {
        "include": {
          "type": "boolean",
          "title": "true if include the forecast"
        },
        "startDate": {
          "type": "string"
        },
        "endDate": {
          "type": "string"
        }
      }
    },
    "coverLambda": {
      "type": "object",
      "properties": {
        "memory": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "coverLambdaCurrentConfiguration": {
      "type": "object",
      "properties": {
        "architecture": {
          "type": "string"
        },
        "memorysizeInMB": {
          "type": "number",
          "format": "double"
        },
        "platform": {
          "type": "string"
        },
        "vCpu": {
          "type": "integer",
          "format": "int32"
        },
        "operation": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        },
        "unit": {
          "type": "string"
        },
        "usageAmount": {
          "type": "number",
          "format": "double"
        },
        "usageType": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "coverLambdaRecommendedConfiguration": {
      "type": "object",
      "properties": {
        "architecture": {
          "type": "string"
        },
        "memorysizeInMB": {
          "type": "number",
          "format": "double"
        },
        "platform": {
          "type": "string"
        },
        "vCpu": {
          "type": "integer",
          "format": "int32"
        },
        "operation": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        },
        "unit": {
          "type": "string"
        },
        "usageAmount": {
          "type": "number",
          "format": "double"
        },
        "usageType": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "coverLambdaRightSizingRecommendationDetails": {
      "type": "object",
      "properties": {
        "lambdaCurrentConfiguration": {
          "$ref": "#/definitions/coverLambdaCurrentConfiguration"
        },
        "lambdaRecommendedConfiguration": {
          "$ref": "#/definitions/coverLambdaRecommendedConfiguration"
        }
      }
    },
    "coverLayoutRequests": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "params": {
          "type": "object"
        },
        "hash": {
          "type": "string"
        }
      }
    },
    "coverMemberCostGroup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "colorTheme": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "coverMemberUserData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "avatar": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "colorTheme": {
          "type": "string"
        },
        "initial": {
          "type": "string"
        },
        "activated": {
          "type": "boolean"
        },
        "isAdmin": {
          "type": "boolean"
        },
        "attributes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locale": {
          "type": "string"
        },
        "timezone": {
          "type": "string"
        },
        "registered": {
          "type": "string"
        },
        "ssoEnabled": {
          "type": "boolean"
        },
        "mfaEnabled": {
          "type": "boolean"
        },
        "appTheme": {
          "type": "string"
        },
        "mainView": {
          "type": "string"
        },
        "costGroups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverMemberCostGroup"
          }
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "coverMigrateEC2Details": {
      "type": "object",
      "properties": {
        "eC2CurrentDetails": {
          "$ref": "#/definitions/coverEC2CurrentDetails"
        },
        "ugradeEC2RecommendationDetails": {
          "$ref": "#/definitions/coverEC2RecommendationDetails"
        }
      }
    },
    "coverMigrateRecommendationDetails": {
      "type": "object",
      "properties": {
        "migrateEC2Details": {
          "$ref": "#/definitions/coverMigrateEC2Details"
        },
        "estimatedMonthlyCost": {
          "type": "number",
          "format": "double"
        },
        "estimatedMonthlySavings": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "coverNoOfExecutedRecommendation": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "numberOfRecommendationExecuted": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "coverOptimizationRecommendationSummary": {
      "type": "object",
      "properties": {
        "potentialSavings": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          },
          "title": "Potential savings per month"
        },
        "action": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The recommended action to perform to achieve potential savings"
        }
      }
    },
    "coverPurchaseRIRecommendationDetails": {
      "type": "object",
      "properties": {
        "ec2Options": {
          "$ref": "#/definitions/coverEC2Details"
        },
        "elasticCacheOptions": {
          "$ref": "#/definitions/coverElasticCacheDetails"
        },
        "esOptions": {
          "$ref": "#/definitions/coverESDetails"
        },
        "rdsOptions": {
          "$ref": "#/definitions/coverRDSDetails"
        },
        "redshiftOptions": {
          "$ref": "#/definitions/coverRedshiftDetails"
        },
        "normalizedUnits": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfInstanceToPurchase": {
          "type": "integer",
          "format": "int32"
        },
        "paymentOption": {
          "type": "string"
        },
        "offeringClass": {
          "type": "string"
        },
        "term": {
          "type": "string"
        },
        "upfrontCost": {
          "type": "number",
          "format": "double"
        },
        "instanceType": {
          "type": "string"
        },
        "platform": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "sizeFlexEligible": {
          "type": "boolean"
        },
        "tenancy": {
          "type": "string"
        },
        "estOutcomeFromPurchaseRIRecommendation": {
          "$ref": "#/definitions/coverEstOutcomeFromPurchaseRIRecommendation"
        },
        "costGroupSpendingData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverCostGroupSpendingData"
          }
        }
      }
    },
    "coverRDSDetails": {
      "type": "object",
      "properties": {
        "dbEdition": {
          "type": "string"
        },
        "dbEngine": {
          "type": "string"
        },
        "deploymentOptions": {
          "type": "string"
        },
        "family": {
          "type": "string"
        },
        "instanceType": {
          "type": "string"
        },
        "licenseModel": {
          "type": "string"
        }
      }
    },
    "coverRDSOptions": {
      "type": "object",
      "properties": {
        "dbEdition": {
          "type": "string"
        },
        "dbEngine": {
          "type": "string"
        },
        "deploymentOptions": {
          "type": "string"
        },
        "family": {
          "type": "string"
        },
        "instanceType": {
          "type": "string"
        },
        "licenseModel": {
          "type": "string"
        }
      }
    },
    "coverRecommendationDetail": {
      "type": "object",
      "properties": {
        "recommendation": {
          "type": "string"
        },
        "recommendedResourceType": {
          "type": "string"
        },
        "estimatedCost": {
          "type": "number",
          "format": "double"
        },
        "estimatedSavings": {
          "type": "number",
          "format": "double"
        },
        "region": {
          "type": "string"
        }
      }
    },
    "coverRedshiftDetails": {
      "type": "object",
      "properties": {
        "family": {
          "type": "string"
        },
        "nodeType": {
          "type": "string"
        }
      }
    },
    "coverRedshiftOptions": {
      "type": "object",
      "properties": {
        "family": {
          "type": "string"
        },
        "nodeType": {
          "type": "string"
        }
      }
    },
    "coverRegistrationStatus": {
      "type": "object",
      "properties": {
        "apiAccess": {
          "type": "boolean"
        },
        "cloudwatchStreaming": {
          "type": "boolean"
        },
        "curExport": {
          "type": "boolean"
        },
        "payer": {
          "type": "boolean"
        }
      }
    },
    "coverResourceData": {
      "type": "object",
      "properties": {
        "vendor": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "recommendationDetail": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverRecommendationDetail"
          }
        },
        "currentCost": {
          "type": "number",
          "format": "double"
        },
        "resourceName": {
          "type": "string"
        },
        "consumedService": {
          "type": "string"
        },
        "maxCpuUtilization": {
          "type": "number",
          "format": "double"
        },
        "maxStorageUtilization": {
          "type": "number",
          "format": "double"
        },
        "maxMemoryUtilization": {
          "type": "number",
          "format": "double"
        },
        "networkCapacity": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "coverResult": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "coverRiRecommendationDetails": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "recommendedNumberOfInstanceToPurchase": {
          "type": "string"
        },
        "currencyCode": {
          "type": "string"
        },
        "ec2Options": {
          "$ref": "#/definitions/coverEC2Options"
        },
        "elasticCacheOptions": {
          "$ref": "#/definitions/coverElasticCacheOptions"
        },
        "esOptions": {
          "$ref": "#/definitions/coverESOptions"
        },
        "rdsOptions": {
          "$ref": "#/definitions/coverRDSOptions"
        },
        "redshiftOptions": {
          "$ref": "#/definitions/coverRedshiftOptions"
        },
        "region": {
          "type": "string"
        },
        "sizeFlexEligible": {
          "type": "boolean"
        },
        "currentGeneration": {
          "type": "boolean"
        },
        "upfrontCost": {
          "type": "number",
          "format": "double"
        },
        "estimatedMonthlySavings": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "coverRiRecommendationResults": {
      "type": "object",
      "properties": {
        "riSummary": {
          "$ref": "#/definitions/coverRiSummary"
        },
        "riRecommendationDetails": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverRiRecommendationDetails"
          }
        }
      }
    },
    "coverRiSummary": {
      "type": "object",
      "properties": {
        "totalPurchaseRecommendations": {
          "type": "string",
          "format": "int64"
        },
        "estimatedMonthlySavings": {
          "type": "number",
          "format": "double"
        },
        "estimatedSavingsVSOnDemandRates": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "coverRightSizingRecommendationDetails": {
      "type": "object",
      "properties": {
        "ec2RightSizingDetails": {
          "$ref": "#/definitions/coverEC2rightSizingDetails"
        },
        "lambdaRightSizingRecommendationDetails": {
          "$ref": "#/definitions/coverLambdaRightSizingRecommendationDetails"
        },
        "estimatedMonthlyCost": {
          "type": "number",
          "format": "double"
        },
        "estimatedMonthlySavings": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "coverSPCurrentUtilizationDetails": {
      "type": "object",
      "properties": {
        "aveCoverage": {
          "type": "number",
          "format": "double"
        },
        "aveHourOnDemandSpend": {
          "type": "number",
          "format": "double"
        },
        "maxHourlyOndemandSpend": {
          "type": "number",
          "format": "double"
        },
        "minHourlyOndemandSpend": {
          "type": "number",
          "format": "double"
        },
        "existingHourlyCommitment": {
          "type": "number",
          "format": "double"
        },
        "estOnDemandCostWithHourlyCommitment": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "coverSavingsPlanRecommendationDetails": {
      "type": "object",
      "properties": {
        "currencyCode": {
          "type": "string"
        },
        "hourlyCommitmentToPurchase": {
          "type": "number",
          "format": "double"
        },
        "offeringId": {
          "type": "string"
        },
        "paymentOption": {
          "type": "string"
        },
        "savingsPlanType": {
          "type": "string"
        },
        "term": {
          "type": "string"
        },
        "currentUtilizationDetails": {
          "$ref": "#/definitions/coverSPCurrentUtilizationDetails"
        },
        "estOutcomeFromSPRecommendation": {
          "$ref": "#/definitions/coverEstOutcomeFromSPRecommendation"
        },
        "costGroupSpendingData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverCostGroupSpendingData"
          }
        }
      }
    },
    "coverSavingsSummary": {
      "type": "object",
      "properties": {
        "totalRecommendations": {
          "type": "string",
          "format": "int64",
          "title": "Total number of detected recommendation for a given period"
        },
        "totalExecutedRecommendations": {
          "type": "string",
          "format": "int64",
          "title": "Total number of executed recommendations for a given period"
        },
        "totalEstimatedSavings": {
          "type": "number",
          "format": "double",
          "title": "Total of estimated savings for a given period, as a result of executed recommendations"
        },
        "totalEstimatedCost": {
          "type": "number",
          "format": "double",
          "title": "Total of estimated cost for a given period, as a result of executed recommendations"
        },
        "percentageSavings": {
          "type": "number",
          "format": "double",
          "title": "Total of estimated percentage savings for a given period, as a result of executed recommendations"
        },
        "mostEffectiveRecommendation": {
          "type": "string",
          "title": "The most effective recommendation"
        },
        "mostEffectiveRecommendationEstimatedSavings": {
          "type": "number",
          "format": "double",
          "title": "The most effective recommendation savings"
        },
        "mostEffectiveRecommendationEstimatedCost": {
          "type": "number",
          "format": "double",
          "title": "The most effective recommendation cost"
        },
        "mostEffectiveRecommendationPercentageSavings": {
          "type": "number",
          "format": "double",
          "title": "The most effective recommendation percentage savings"
        }
      }
    },
    "coverSideMenu": {
      "type": "object",
      "properties": {
        "favorite": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isOpenedAdmin": {
          "type": "boolean"
        },
        "isOpenedFeatures": {
          "type": "boolean"
        },
        "isOpenedCostGroups": {
          "type": "boolean"
        }
      }
    },
    "coverSideMenuState": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "boolean"
        }
      }
    },
    "coverSpRecommendationDetails": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "currencyCode": {
          "type": "string"
        },
        "hourlyCommitmentToPurchase": {
          "type": "number",
          "format": "double"
        },
        "estimatedMonthlySavingsAmount": {
          "type": "number",
          "format": "double"
        },
        "estimatedSavingsPercentage": {
          "type": "number",
          "format": "double"
        },
        "estimatedAverageCoverage": {
          "type": "number",
          "format": "double"
        },
        "estimatedAverageUtilization": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "coverSpRecommendationResults": {
      "type": "object",
      "properties": {
        "spSummary": {
          "$ref": "#/definitions/coverSpSummary"
        },
        "spRecommendationDetails": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverSpRecommendationDetails"
          }
        }
      }
    },
    "coverSpSummary": {
      "type": "object",
      "properties": {
        "currentOnDemandSpend": {
          "type": "number",
          "format": "double"
        },
        "estimatedMonthlySpend": {
          "type": "number",
          "format": "double"
        },
        "estimatedMonthlySavings": {
          "type": "number",
          "format": "double"
        },
        "totalRecommendationCount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "coverTagData": {
      "type": "object",
      "properties": {
        "tagKey": {
          "type": "string"
        },
        "tagValue": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "coverThreshold": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "title": "exact or percentage"
        },
        "value": {
          "type": "number",
          "format": "float",
          "title": "actual value of threshold"
        }
      }
    },
    "coverUpgradeEBSDetails": {
      "type": "object",
      "properties": {
        "currentEBSDetails": {
          "$ref": "#/definitions/coverCurrentEBSDetails"
        },
        "upgradeEBSDetails": {
          "$ref": "#/definitions/coverUpgradeEBSDetails"
        },
        "estimatedMonthlyCost": {
          "type": "number",
          "format": "double"
        },
        "estimatedMonthlySavings": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "coverUpgradeEC2Details": {
      "type": "object",
      "properties": {
        "eC2CurrentDetails": {
          "$ref": "#/definitions/coverEC2CurrentDetails"
        },
        "ugradeEC2RecommendationDetails": {
          "$ref": "#/definitions/coverEC2RecommendationDetails"
        },
        "estimatedMonthlyCost": {
          "type": "number",
          "format": "double"
        },
        "estimatedMonthlySavings": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "coverUpgradeRecommendationDetails": {
      "type": "object",
      "properties": {
        "upgradeEC2Details": {
          "$ref": "#/definitions/coverUpgradeEC2Details"
        },
        "upgradeEBSDetails": {
          "$ref": "#/definitions/coverUpgradeEBSDetails"
        }
      }
    },
    "coverUserData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "avatar": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "colorTheme": {
          "type": "string"
        },
        "initial": {
          "type": "string"
        },
        "activated": {
          "type": "boolean"
        },
        "isAdmin": {
          "type": "boolean"
        },
        "attributes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locale": {
          "type": "string"
        },
        "timezone": {
          "type": "string"
        },
        "registered": {
          "type": "string"
        },
        "ssoEnabled": {
          "type": "boolean"
        },
        "mfaEnabled": {
          "type": "boolean"
        },
        "appTheme": {
          "type": "string"
        },
        "mainView": {
          "type": "string"
        },
        "costGroups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverMemberCostGroup"
          }
        },
        "createdBy": {
          "$ref": "#/definitions/coverMemberUserData"
        },
        "updatedAt": {
          "type": "string"
        },
        "orgId": {
          "type": "string"
        },
        "isProfilingDone": {
          "type": "boolean"
        },
        "passwordLastRenewed": {
          "type": "string"
        },
        "isOwner": {
          "type": "boolean"
        },
        "isAuth0": {
          "type": "boolean"
        }
      }
    },
    "coverViewData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "isPrivate": {
          "type": "boolean"
        },
        "isEditable": {
          "type": "boolean"
        },
        "icon": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/coverMemberUserData"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedBy": {
          "$ref": "#/definitions/coverMemberUserData"
        },
        "updatedAt": {
          "type": "string"
        },
        "layout": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverWidgetData"
          }
        },
        "sideMenu": {
          "$ref": "#/definitions/coverSideMenu"
        },
        "reportType": {
          "type": "string"
        },
        "colorTheme": {
          "type": "string"
        }
      }
    },
    "coverViewLayout": {
      "type": "object",
      "properties": {
        "widgetId": {
          "type": "string"
        },
        "widgetData": {
          "$ref": "#/definitions/coverWidgetData"
        }
      }
    },
    "coverViewList": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "isPrivate": {
          "type": "boolean"
        },
        "isEditable": {
          "type": "boolean"
        },
        "icon": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        },
        "colorTheme": {
          "type": "string"
        }
      }
    },
    "coverWidgetData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "x": {
          "type": "number",
          "format": "double"
        },
        "y": {
          "type": "number",
          "format": "double"
        },
        "componentId": {
          "type": "string"
        },
        "options": {
          "type": "object"
        },
        "requests": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverLayoutRequests"
          }
        }
      }
    },
    "coverv1FeeDetails": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "orgId": {
          "type": "string"
        },
        "vendor": {
          "type": "string"
        },
        "account": {
          "type": "string"
        },
        "month": {
          "type": "string"
        },
        "lineType": {
          "type": "string"
        },
        "feeType": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "started": {
          "type": "string"
        },
        "timeInterval": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "splitStatus": {
          "type": "string"
        },
        "isAllocated": {
          "type": "boolean"
        },
        "isApplied": {
          "type": "boolean"
        },
        "unblendedCost": {
          "type": "number",
          "format": "double"
        },
        "sourceFee": {
          "type": "string"
        },
        "lastUpdate": {
          "type": "string"
        }
      },
      "description": "Response message for GetFeeDetails, CreateFeeReallocation rpc."
    },
    "coverv1Status": {
      "type": "string",
      "enum": [
        "PENDING",
        "IN_PROGRESS",
        "SUCCESS",
        "FAILED"
      ],
      "default": "PENDING",
      "title": "Status of upload file"
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          },
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use."
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "protosOperation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The server-assigned name."
        },
        "metadata": {
          "$ref": "#/definitions/protobufAny",
          "description": "Service-specific metadata associated with the operation. It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata. Any method that returns a\nlong-running operation should document the metadata type, if any."
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable."
        },
        "error": {
          "$ref": "#/definitions/googlerpcStatus",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "response": {
          "$ref": "#/definitions/protobufAny",
          "description": "The normal response of the operation in case of success. If the original method returns\nno data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the\noriginal method is standard `Get`/`Create`/`Update`, the response should be the\nresource. For other methods, the response should have the type `XxxResponse`, where\n`Xxx` is the original method name. For example, if the original method name is\n`TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        }
      },
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call."
    },
    "rippleAssigned": {
      "type": "object",
      "properties": {
        "percentage": {
          "type": "integer",
          "format": "int32",
          "description": "Required.  This value can be up to 100."
        },
        "fixed": {
          "type": "integer",
          "format": "int32",
          "description": "Required."
        }
      },
      "description": "Assigned resource definition.",
      "required": [
        "percentage",
        "fixed"
      ]
    },
    "rippleAssignedBillingGroup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique id of the billing group internal."
        },
        "groupId": {
          "type": "string",
          "description": "The unique id of the billing group."
        },
        "groupName": {
          "type": "string",
          "description": "The name of the billing group."
        },
        "accounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/blueapiapiAccount"
          },
          "description": "A list of accounts."
        },
        "assigned": {
          "$ref": "#/definitions/rippleAssigned",
          "title": "The assigned that rules set for untagged groups"
        }
      },
      "description": "AssignedBillingGroup resource definition."
    },
    "rippleBillingGroupExchangeRate": {
      "type": "object",
      "properties": {
        "billingInternalId": {
          "type": "string",
          "description": "The billing group's internal id."
        },
        "billingGroupId": {
          "type": "string",
          "description": "The billing group's id."
        },
        "billingGroupName": {
          "type": "string",
          "description": "The billing group's name."
        },
        "exchangeRate": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/rippleExchangeRate"
          },
          "description": "The exchange rate."
        }
      },
      "description": "BillingGroupExchangeRate resource definition."
    },
    "rippleBillingGroupInfo": {
      "type": "object",
      "properties": {
        "billingTitle": {
          "type": "string",
          "title": "Optional. The title of the billing"
        },
        "phoneNumber": {
          "type": "string",
          "title": "Optional. Company’s phone number"
        },
        "postalCode": {
          "type": "string",
          "title": "Optional. Company’s postal code"
        },
        "address": {
          "type": "string",
          "title": "Optional. Company’s address"
        },
        "personal": {
          "type": "string",
          "title": "Optional. Addressee"
        },
        "remarks": {
          "type": "string",
          "title": "Optional. Any remarks about the billing group"
        },
        "projectId": {
          "type": "string",
          "title": "Optional. Project code"
        },
        "language": {
          "type": "string",
          "title": "Optional. Invoice language"
        },
        "displayCost": {
          "type": "string",
          "title": "Optional. Calculation type, true unblended or unblended"
        },
        "exchangeRateType": {
          "type": "string",
          "title": "Optional. Exchange rate type, payer or billing group"
        },
        "qrCode": {
          "type": "boolean",
          "title": "Optional. qrCode"
        }
      },
      "description": "BillingGroupInfo resource definition. Only available in Ripple."
    },
    "rippleCommonExchangeRate": {
      "type": "object",
      "properties": {
        "aws": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/rippleExchangeRate"
          }
        },
        "gcp": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/rippleExchangeRate"
          }
        },
        "azure": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/rippleExchangeRate"
          }
        }
      },
      "description": "CommonExchangeRate resource definition."
    },
    "rippleDueDate": {
      "type": "object",
      "properties": {
        "dueDateDay": {
          "type": "string",
          "description": "Due date set on the invoice\nRefer to the following for available values\nbeginning_of_month: The beginning date of the month is automatically set.\nend_of_month: The end date of the month is automatically set.\ncustom: Date can be specified."
        },
        "dueDateMonth": {
          "type": "string",
          "description": "Due month set on the invoice\nRefer to the following for available values\nthis_month: This month is automatically set.\nnext_month: Next month is automatically set.\nmonth_after_next: Month after next is automatically set."
        },
        "dueDateCustomDay": {
          "type": "integer",
          "format": "int32",
          "title": "Customized due date set on the invoice\nRange 1 ~ 31"
        }
      },
      "description": "DueDate resource definition."
    },
    "rippleExchangeRate": {
      "type": "object",
      "properties": {
        "currency": {
          "type": "string",
          "description": "The currency code."
        },
        "rate": {
          "type": "number",
          "format": "double",
          "description": "The rate."
        }
      },
      "description": "ExchangeRate resource definition."
    },
    "rippleInvoiceLayout": {
      "type": "object",
      "properties": {
        "account": {
          "$ref": "#/definitions/rippleaccountInvoiceLayout",
          "title": "total layout"
        },
        "total": {
          "$ref": "#/definitions/rippletotalInvoiceLayout",
          "title": "total layout"
        },
        "body": {
          "$ref": "#/definitions/ripplebodyInvoiceLayout",
          "title": "body layout"
        },
        "footer": {
          "$ref": "#/definitions/ripplefooterInvoiceLayout",
          "title": "footer layout"
        },
        "header": {
          "$ref": "#/definitions/rippleheaderInvoiceLayout",
          "title": "header layout"
        },
        "report": {
          "$ref": "#/definitions/ripplereportInvoiceLayout",
          "title": "report layout"
        }
      },
      "description": "WORK-IN-PROGRESS: InvoiceLayout resource definition.\nDefinitions related to invoice display."
    },
    "rippleOrg": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The unique name (or id) of the organization."
        },
        "email": {
          "type": "string",
          "description": "The registered email of the organization."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The metadata (key/value pair) of the organization. If hierarchy is supported, it will be\nseparated by '/', such as 'metakey/subkey=value'. See https://alphauslabs.github.io/blueapi/\nfor the list of supported attributes."
        }
      },
      "description": "Org resource definition."
    },
    "ripplePayer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The payer account id."
        },
        "name": {
          "type": "string",
          "description": "The payer account name."
        },
        "metadata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiKeyValue"
          },
          "description": "The attributes (key/value pair) of the account."
        },
        "members": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/blueapiapiAccount"
          },
          "description": "List of all members under this payer."
        }
      },
      "description": "Payer resource definition."
    },
    "ripplePayerExchangeRate": {
      "type": "object",
      "properties": {
        "payerAccountId": {
          "type": "string",
          "description": "The payer account Id."
        },
        "payerAccountName": {
          "type": "string",
          "description": "The payer account Name."
        },
        "exchangeRate": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/rippleExchangeRate"
          },
          "description": "The exchange rate."
        }
      },
      "description": "PayerExchangeRate resource definition."
    },
    "rippleReseller": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "reseller id. Generated automatically."
        },
        "email": {
          "type": "string",
          "title": "email"
        },
        "groupId": {
          "type": "string",
          "title": "groupId includes `billingInternalId` or `accessGroupId`"
        },
        "groupName": {
          "type": "string",
          "title": "groupName includes `billingInternalName` or `accessGroupName`"
        },
        "groupType": {
          "type": "string",
          "description": "group type\nRefer to the following for available values\nbilling_group: Billing Group.\naccess_group: Access Group."
        },
        "waveStatus": {
          "type": "string",
          "title": "wave status"
        },
        "waveConfig": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/rippleResellerConfig"
          },
          "title": "wave feature config"
        },
        "aquaConfig": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/rippleResellerConfig"
          },
          "title": "aqua feature config"
        }
      }
    },
    "rippleResellerConfig": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "For Wave\nThe available values are shown below.\n- Dashboard\n`dashboardGraph`: Display graph | Default: true\n`reportFilters`: Display report filters | Default: false\n\n- Usage Reports\n`usageAccount`: Account | Default: true\n`usageAccountGraph`: Display graph | Default: true\n`usageAccountMenuAccountEdit`: Edit account name | Default: false\n`usageAccountMenuBudget`: Display Budget | Default: false\n`usageAccountMenuBudgetEdit`: Edit Budget | Default: false\n`usageAccountMenuFeesFee`: Display fee  | Default: false\n`usageAccountMenuFeesCredit`: Display credit | Default: false\n`usageAccountMenuFeesRefund`: Display refund | Default: false\n`usageAccountMenuFeesOtherFees`: Display other fees | Default: false\n`usageReportDownload`: Download report data | Default: true\n`cost_forecast_tab`: Cost Forecast | Default: true\n\n- Cross Tag\n`usageCrosstag`: Cross Tag | Default: true\n`usageCrosstagGraph`: Display graph | Default: true\n\n- Group\n`usageGroup`: Group\n`usageGroupGraph`: Display graph | Default: true\n\n- Cost management\n`riPurchased`: Display purchased RI | Default: true\n`riUtilization`: Display RI Utilization | Default: false\n`riRecommendation`: Display RI Recommendations | Default: false\n`spPurchased`: Display purchased Savings Plans | Default: false\n\n- Other\n`invoice`: Invoice link | Default: false\n`openApi`: API Access Tokens | Default: false\n`usersManagement`: Sub-user management | Default: true\n`invoiceDownloadCsvDiscount`: Enable discount CSV download | Default: false\n`invoiceDownloadCsvMerged`: Enable merged CSV download | Default: false\n`aquaLink`: Aqua link | Default: false\n`waveproReportFilters`: WavePro Report Filters | Default: false\n`budgetalerts`: WavePro Budget Alerts | Default: false\n\nFor Aqua\nThe available values are shown below.\n- Instance Usage Status\n`aqCoverageRatio`: Coverage Ratio | Default: false\n\n- Reservations Management\n`aqRiManagement`: RI Management | Default: false\n`aqSpManagement`: SP Management | Default: false\n\n- Recommendation\n`aqRiSpInstances`: RI/SP Instances | Default: false\n`aqRightSizing`: Right Sizing | Default: false\n`aqScheduling`: Scheduling | Default: false",
          "title": "key"
        },
        "value": {
          "type": "boolean",
          "title": "value"
        }
      }
    },
    "rippleRounding": {
      "type": "object",
      "properties": {
        "rounding": {
          "$ref": "#/definitions/RoundingRoundingMethod",
          "description": "The rounding method."
        }
      },
      "description": "Rounding resource definition."
    },
    "rippleUntaggedGroup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique id of the untagged group.\nAutomatically generated."
        },
        "name": {
          "type": "string",
          "title": "Required. The unique name of the untagged group. This value can be up to 60"
        },
        "assigned": {
          "$ref": "#/definitions/rippleAssigned",
          "title": "Optional. The assigned that rules set for untagged groups"
        },
        "billingGroups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/rippleAssignedBillingGroup"
          },
          "description": "Optional."
        },
        "created": {
          "type": "string",
          "description": "Output only. The time when the `UntaggedGroup` was created.",
          "readOnly": true
        },
        "updated": {
          "type": "string",
          "description": "Output only. The time when the `UntaggedGroup` was last updated.",
          "readOnly": true
        }
      },
      "description": "UntaggedGroup resource definition.",
      "required": [
        "name"
      ]
    },
    "rippleVendorPayerExchangeRate": {
      "type": "object",
      "properties": {
        "aws": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ripplePayerExchangeRate"
          }
        },
        "gcp": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ripplePayerExchangeRate"
          }
        },
        "azure": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ripplePayerExchangeRate"
          }
        }
      },
      "description": "VendorPayerExchangeRate resource definition."
    },
    "rippleYearMonth": {
      "type": "object",
      "properties": {
        "yearMonth": {
          "type": "string",
          "description": "List of the yearmonth."
        }
      },
      "description": "YearMonth resource definition."
    },
    "rippleaccountInvoiceLayout": {
      "type": "object",
      "properties": {
        "marketplace": {
          "type": "string",
          "title": "The marketplace is name of marketplace usage.\nex)ACCT_AWS_MARKETPLACE: \"Marketplace利用料金\""
        },
        "marketplaceFee": {
          "type": "string",
          "title": "The marketplace is name of marketplace fee usage.\nex)ACCT_AWS_MARKETPLACE_FEES: \"Marketplace 一時金 ご利用金額\""
        },
        "supportFee": {
          "type": "string",
          "title": "The supportFee is name of support fee usage.\nex)ACCT_AWS_SUPPORT_BUSINESS: \"AWS保守サービス利用料金\""
        },
        "accountUsage": {
          "type": "string",
          "title": "The accountUsage is name of account total usage.\nex)ACCT_AWS_USAGE: \"利用料合計\""
        },
        "accountUsageOnly": {
          "type": "string",
          "title": "The accountUsageOnly is name of account usage(Only related to vendor).\nex)ACCT_AWS_USAGEONLY: \"AWS利用料(MarketPlace利用料除く)\""
        }
      },
      "description": "WORK-IN-PROGRESS: accountInvoiceLayout resource definition."
    },
    "ripplebodyInvoiceLayout": {
      "type": "object",
      "properties": {
        "hideSpecificTotalLines": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The hideSpecificTotalLines is name of hide specific total lines.\nex)BODY_HIDE_SPECIFIC_TOTAL_LINES: [\"removeThisTextToApply _AWS_SUPPORT_BUSINESS\"]"
        },
        "serviceDiscountDetail": {
          "type": "boolean",
          "title": "The serviceDiscountDetail is setting for service discount detail.\nex)BODY_SERVICE_DISCOUNT_DETAIL: true"
        },
        "usageDiscount": {
          "type": "boolean",
          "title": "The usageDiscount is setting for usage discount.\nex)BODY_USAGE_DISCOUNT: true"
        },
        "hideMarketplace": {
          "type": "boolean",
          "title": "The hideMarketplace is setting for hide marketplace.\nex)BODY_HIDE_MARKETPLACE: true"
        }
      },
      "description": "WORK-IN-PROGRESS: bodyInvoiceLayout resource definition."
    },
    "ripplefooterInvoiceLayout": {
      "type": "object",
      "properties": {
        "attention": {
          "type": "string",
          "title": "The attention is name of attention.\nex)FT_ATTENTION: null"
        },
        "invoiceBank": {
          "type": "boolean",
          "title": "The invoiceBank is setting for invoice bank.\nex)FT_INVOICE_BANK: true"
        },
        "invoiceBankContent": {
          "type": "string",
          "title": "The invoiceBankContent is information of invoice bank content.\nex)FT_INVOICE_BANK_CONTENT: \"振込手数料はご負担ください。\""
        },
        "invoiceMemo": {
          "type": "boolean",
          "title": "The invoiceMemo is setting for invoice memo.\nex)FT_INVOICE_MEMO: true"
        },
        "invoiceRemarks": {
          "type": "boolean",
          "title": "The invoiceRemarks is setting for invoice remarks.\nex)FT_INVOICE_REMARKS: true"
        },
        "invoiceDiscountZero": {
          "type": "boolean",
          "title": "The invoiceDiscountZero is setting for invoice discount.\nex)FT_INVOICE_DISCOUNT_ZERO: true"
        }
      },
      "description": "WORK-IN-PROGRESS: footerInvoiceLayout resource definition."
    },
    "rippleheaderInvoiceLayout": {
      "type": "object",
      "properties": {
        "billingAddress": {
          "type": "string",
          "title": "The billingAddress is information of billing address.\nex)HEAD_BILLINGADDRESS: billing\""
        },
        "billingGroupName": {
          "type": "boolean",
          "title": "The billingGroupName is setting for billing group name.\nex)HEAD_BILLINGGROUPNAME: true"
        },
        "billingGroupStaff": {
          "type": "boolean",
          "title": "The billingGroupStaff is setting for billing froup staff.\nex)HEAD_BILLINGGROUPSTAFF: true"
        },
        "companyAddress": {
          "type": "boolean",
          "title": "The companyAddress is setting for company address.\nex)HEAD_COMPANY_ADDRESS: true"
        },
        "companyName": {
          "type": "boolean",
          "title": "The companyName is setting for company name.\nex)HEAD_COMPANY_NAME: true"
        },
        "invoiceDate": {
          "type": "boolean",
          "title": "The invoiceDate is setting for invoice date.\nex)HEAD_INVOICE_DATE: true"
        },
        "invoiceDue": {
          "type": "boolean",
          "title": "The invoiceDue is setting for invoice due.\nex)HEAD_INVOICE_DUE: true"
        },
        "invoiceNo": {
          "type": "boolean",
          "title": "The invoiceNo is setting for invoice No.\nex)HEAD_INVOICE_NO: true"
        },
        "invoiceQuantity": {
          "type": "string",
          "title": "The invoiceQuantity is information of invoice quantity.\nex)HEAD_INVOICE_QUANTITY: \"１ヶ月分\""
        },
        "invoiceSummary": {
          "type": "boolean",
          "title": "The invoiceSummary is setting for invoice summary.\nex)HEAD_INVOICE_SUMMARY: true"
        },
        "invoiceTitle": {
          "type": "string",
          "title": "The invoiceTitle is information of invoice title.\nex)HEAD_INVOICE_TITLE: \"AWSご利用金額\""
        },
        "issueDateText": {
          "type": "string",
          "title": "The issueDateText is information of issue date text.\nex)HEAD_ISSUE_DATE_TEXT: \"tested message\""
        },
        "mspInfo": {
          "type": "boolean",
          "title": "The mspInfo is setting for msp information.\nex)HEAD_MSPINFO: true"
        },
        "mspLogo": {
          "type": "boolean",
          "title": "The mspLogo is setting for msp logo.\nex)HEAD_MSPLOGO: true"
        },
        "mspStamp": {
          "type": "boolean",
          "title": "The mspStamp is setting for msp stamp.\nex)HEAD_MSPSTAMP: true"
        },
        "paidText": {
          "type": "string",
          "title": "The paidText is information of paid text.\nex)HEAD_PAID_TEXT: \"paid message\""
        }
      },
      "description": "WORK-IN-PROGRESS: headerInvoiceLayout resource definition."
    },
    "ripplereportInvoiceLayout": {
      "type": "object",
      "properties": {
        "sectionEnable": {
          "type": "string",
          "title": "The sectionEnable is setting for section.\nex)REPORT_SECTION_ENABLE: \"{ \\\"ja\\\": true, \\\"en\\\": true }\""
        }
      },
      "description": "WORK-IN-PROGRESS: headerInvoiceLayout resource definition."
    },
    "rippletotalInvoiceLayout": {
      "type": "object",
      "properties": {
        "marketplace": {
          "type": "string",
          "title": "The totalMarketplace is name of marketplace total usage.\nex)ALL_AWS_MARKETPLACE: \"\""
        },
        "marketplaceFee": {
          "type": "string",
          "title": "The totalMarketplaceFee is name of marketplace total fee usage.\nex)ALL_AWS_MARKETPLACE_FEES: \"\""
        },
        "vendorTotal": {
          "type": "string",
          "title": "The vendorTotal is name of vendor total usage.\nex)ALL_AWS_TOTAL: \"\""
        },
        "vendorUsageOnly": {
          "type": "string",
          "title": "The vendorUsageOnly is name of vendor usage only.\nex)ALL_AWS_USAGEONLY: \"\""
        },
        "vendorlUsage": {
          "type": "string",
          "title": "The vendorTotalUsage is name of vendor total usage.\nex)ALL_AWS_USAGE: \"AWS利用料\""
        },
        "customUsage": {
          "type": "string",
          "title": "The customTotalUsage is name of custom total usage.\nex)ALL_CUSTOM_USAGE: \"追加費用合計\""
        },
        "discount": {
          "type": "string",
          "title": "The discount is name of discount.\nex)ALL_DISCOUNT: \"\""
        },
        "discountDiff": {
          "type": "string",
          "title": "The discountTotalDiff is name of discount total diff.\nex)ALL_DISCOUNT_DIFF: \"値引後\""
        },
        "subTotal": {
          "type": "string",
          "title": "The subTotal is name of sub total.\nex)ALL_SUB_TOTAL: \"\""
        },
        "substitutionFee": {
          "type": "string",
          "title": "The substitutionTotalFee is name of substitution total fee.\nex)ALL_SUBSTITUTION: \"請求代行手数料\""
        },
        "supportFee": {
          "type": "string",
          "title": "The supportTotalFee is name of support total fee.\nex)ALL_SUPPORT_BUSINESS: \"サポートビジネス費用\""
        },
        "tax": {
          "type": "string",
          "title": "The tax is name of tax.\nex)ALL_TAX: \"消費税\""
        },
        "taxDiff": {
          "type": "string",
          "title": "The taxDiff is name of tax diff.\nex)ALL_TAX_DIFF: null"
        },
        "taxFree": {
          "type": "string",
          "title": "The taxFree is name of tax free.\nex)ALL_TAX_FREE: \"\""
        },
        "totalExchangeRate": {
          "type": "string",
          "title": "The totalExchangeRate is name of total exchange rate.\nex)ALL_TOTAL_EXCHANGE: \"日本円換算後（$1=JPY）\""
        },
        "totalUsage": {
          "type": "string",
          "title": "The totalUsage is name of total usage.\nex)ALL_USAGE_TOTAL: \"小計\""
        },
        "total": {
          "type": "string",
          "title": "The total is name of total.\nex)ALL_TOTAL: \"\""
        }
      },
      "description": "WORK-IN-PROGRESS: totalInvoiceLayout resource definition."
    },
    "v1AbcAccount": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "accountName": {
          "type": "string"
        }
      }
    },
    "v1AbcBillingGroup": {
      "type": "object",
      "properties": {
        "arn": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "creationTime": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "primaryAccountId": {
          "type": "string"
        },
        "size": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "v1AccountAccess": {
      "type": "object",
      "properties": {
        "target": {
          "type": "string",
          "description": "The queried target account."
        },
        "accountName": {
          "type": "string",
          "title": "The account name"
        },
        "accountType": {
          "type": "string",
          "description": "The account type. Payer or linked account."
        },
        "payerId": {
          "type": "string",
          "description": "The payer account of the account."
        },
        "roleArn": {
          "type": "string",
          "description": "The role ARN that provides the cross-account access permissions."
        },
        "externalId": {
          "type": "string",
          "description": "The external id for this role."
        },
        "stackId": {
          "type": "string",
          "description": "The id of the CloudFormation stack deployed in the target account."
        },
        "stackRegion": {
          "type": "string",
          "description": "The region where the stack is deployed."
        },
        "templateUrl": {
          "type": "string",
          "description": "The latest template used to deploy the stack."
        },
        "bucketName": {
          "type": "string",
          "title": "The s3 bucket name"
        },
        "prefix": {
          "type": "string",
          "title": "Report path prefix"
        },
        "reportName": {
          "type": "string",
          "title": "The report name"
        },
        "registrationStatus": {
          "$ref": "#/definitions/coverRegistrationStatus",
          "title": "The status of registration for CUR export, API access and Cloudwatch streaming"
        },
        "status": {
          "type": "string",
          "description": "This can be `latest`, `outdated`, or some error information."
        },
        "lastUpdated": {
          "type": "string",
          "description": "The last updated timestamp, RFC3339 UTC."
        }
      },
      "description": "Response message for GetAccountAccess, CreateAccountAccess rpc."
    },
    "v1AccountInvoiceServiceDiscounts": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Service discount id."
        },
        "account": {
          "type": "string",
          "description": "Account id."
        }
      },
      "description": "Streaming response message for the AccountInvoiceServiceDiscounts rpc."
    },
    "v1AccountOptions": {
      "type": "object",
      "properties": {
        "aws": {
          "$ref": "#/definitions/v1RegisterAccounts",
          "title": "AWS register accounts"
        },
        "gcp": {
          "$ref": "#/definitions/v1RegisterAccounts",
          "title": "GCP register accounts"
        },
        "azure": {
          "$ref": "#/definitions/v1RegisterAccounts",
          "title": "Azure register accounts"
        }
      },
      "description": "Account options definition."
    },
    "v1AccountServiceDiscounts": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Service discount id."
        },
        "accountId": {
          "type": "string",
          "description": "Account id."
        }
      }
    },
    "v1AccountUsageDetails": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "orgId": {
          "type": "string"
        },
        "vendor": {
          "type": "string"
        },
        "account": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        },
        "serviceCode": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "zone": {
          "type": "string"
        },
        "usageType": {
          "type": "string"
        },
        "instanceType": {
          "type": "string"
        },
        "operation": {
          "type": "string"
        },
        "invoiceId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "tags": {
          "type": "string"
        },
        "costCategories": {
          "type": "string"
        },
        "usageAmount": {
          "type": "number",
          "format": "double"
        },
        "trueUnblendedCost": {
          "type": "number",
          "format": "double"
        },
        "unblendedCost": {
          "type": "number",
          "format": "double"
        },
        "effectiveCost": {
          "type": "number",
          "format": "double"
        },
        "amortizedCost": {
          "type": "number",
          "format": "double"
        },
        "publicOnDemandCost": {
          "type": "number",
          "format": "double"
        },
        "unusedAmortizedCost": {
          "type": "number",
          "format": "double"
        },
        "lastUpdate": {
          "type": "string"
        },
        "splitStatus": {
          "type": "string"
        },
        "isAllocated": {
          "type": "boolean"
        },
        "isApplied": {
          "type": "boolean"
        },
        "source": {
          "type": "string"
        }
      },
      "description": "Response message for SimulateAccountCostAllocator rpc."
    },
    "v1ActivateUserRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "previousPassword": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "description": "Email. For auth0 email validation."
        },
        "isAuth0": {
          "type": "boolean"
        },
        "auth0UserId": {
          "type": "string",
          "description": "Auth0 user Id. For updating of user metadata."
        }
      },
      "title": "Request message for ActivateUser"
    },
    "v1ActivateUserResponse": {
      "type": "object",
      "properties": {
        "userData": {
          "$ref": "#/definitions/coverUserData"
        }
      },
      "title": "Response message for ActivateUser"
    },
    "v1AddFavoriteRequest": {
      "type": "object",
      "properties": {
        "viewId": {
          "type": "string",
          "description": "Required. View Id."
        }
      },
      "title": "Request message for AddFavorite"
    },
    "v1AddFavoriteResponse": {
      "type": "object",
      "properties": {
        "viewId": {
          "type": "string"
        }
      },
      "title": "Response message for AddFavorite"
    },
    "v1AddInfotoMarketplaceRequest": {
      "type": "object",
      "properties": {
        "customerIdentifier": {
          "type": "string"
        }
      }
    },
    "v1AddInfotoMarketplaceResponse": {
      "type": "object"
    },
    "v1AddMpnSettingRequest": {
      "type": "object",
      "properties": {
        "mpnId": {
          "type": "string",
          "title": "Partner Id / MPN Id"
        }
      },
      "title": "Request message for AddMpnSetting"
    },
    "v1AddPartnerCenterCredentialsRequest": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string",
          "title": "The account Id"
        },
        "applicationId": {
          "type": "string",
          "title": "Application Id"
        },
        "secretKey": {
          "type": "string",
          "title": "Secret Key"
        }
      },
      "title": "Request message for AddPartnerCenterCredentials"
    },
    "v1AddSideMenuFavoriteResponse": {
      "type": "object",
      "properties": {
        "viewId": {
          "type": "string"
        }
      },
      "title": "Response message for AddSideMenuFavorite"
    },
    "v1AllocationItem": {
      "type": "object",
      "properties": {
        "vendor": {
          "type": "string"
        },
        "month": {
          "type": "string"
        },
        "product": {
          "type": "string"
        },
        "account": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "cost": {
          "type": "number",
          "format": "double"
        }
      },
      "description": "Response message wrapper for cost group allocations."
    },
    "v1Allocator": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Required. The type where the adjustments are to be applied. This can support `account`, `costGroup` and `payer`."
        },
        "value": {
          "type": "string",
          "description": "Required. The value for the specified attribute. `accountId` for account, `costGroupId` for cost group, `payerId` for payer and account name regex for account name."
        },
        "formula": {
          "type": "string",
          "description": "Required. The formula to use to compute the value of the allocation on an attribute. If left blank, allocation is based on usage."
        },
        "months": {
          "type": "string",
          "format": "int64",
          "description": "Optional. The number of months the adjustment is to be applied. If set, it will divide the cost equally to the number of months."
        }
      }
    },
    "v1AnomalyAlertData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "orgId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "alertEnabled": {
          "type": "boolean"
        },
        "frequency": {
          "type": "string"
        },
        "costGroupId": {
          "$ref": "#/definitions/coverAlertCostGroup"
        },
        "channels": {
          "$ref": "#/definitions/coverAlertChannels"
        }
      }
    },
    "v1AnomalyData": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string"
        },
        "costGroupId": {
          "type": "string"
        },
        "vendor": {
          "type": "string"
        },
        "product": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "totalCost": {
          "type": "number",
          "format": "float"
        },
        "isAnomaly": {
          "type": "boolean",
          "title": "The value will be true if there is an anomaly for a specific account and product"
        },
        "lowerLimit": {
          "type": "number",
          "format": "float",
          "title": "Lower bound. If the total cost is lesser than the lowerlimit it is considered as anomaly"
        },
        "upperLimit": {
          "type": "number",
          "format": "float",
          "title": "Upper bound. If the total cost is greater than the upperlimit it is considered as anomaly"
        },
        "anomalyCost": {
          "type": "number",
          "format": "float",
          "title": "The difference of the total cost and the upperlimit or lowerlimit if it is anomamly, if not anomaly then anomaly cost is 0"
        },
        "anomalyProbability": {
          "type": "number",
          "format": "float",
          "title": "How many percentage does the data is considered anomaly"
        }
      },
      "title": "Message response for anomaly detection"
    },
    "v1AssetsSummary": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "title": "Format is `yyyy-mm`"
        },
        "vendor": {
          "type": "string",
          "description": "Only `aws` is supported for now."
        },
        "totalResources": {
          "type": "string",
          "format": "int64",
          "title": "Total number of resources"
        },
        "totalCost": {
          "type": "number",
          "format": "double",
          "description": "Total Cost incurred for the resources on specified month."
        }
      }
    },
    "v1AssignCostGroupMemberResponse": {
      "type": "object",
      "properties": {
        "costGroupId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      },
      "title": "Response message for AssignCostGroupMember"
    },
    "v1AssignPayerResponse": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "payerId": {
          "type": "string"
        }
      },
      "title": "Response message for AssignPayer"
    },
    "v1AwsDailyRunHistory": {
      "type": "object",
      "properties": {
        "billingInternalId": {
          "type": "string"
        },
        "billingGroupId": {
          "type": "string"
        },
        "month": {
          "type": "string"
        },
        "accounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AwsDailyRunHistoryAccount"
          }
        }
      },
      "description": "Streaming response message for the Billing.ListAwsDailyRunHistory rpc."
    },
    "v1AwsDailyRunHistoryAccount": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "history": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/AccountHistory"
          }
        }
      }
    },
    "v1BillingAccountRequest": {
      "type": "object",
      "properties": {
        "billingId": {
          "type": "string",
          "description": "Required. The billing account id."
        },
        "datasetId": {
          "type": "string",
          "description": "Name of dataset you created."
        },
        "datasetRegion": {
          "type": "string",
          "description": "In creating dataset, It requires you to select a region."
        },
        "projectId": {
          "type": "string",
          "description": "Project Id where the datasetId of BQ can be found."
        }
      },
      "title": "Request message for AddBillingAccount"
    },
    "v1BillingGroup": {
      "type": "object",
      "properties": {
        "billingInternalId": {
          "type": "string",
          "description": "The billing group's internal id."
        },
        "billingGroupId": {
          "type": "string",
          "description": "The billing group id."
        },
        "billingGroupName": {
          "type": "string",
          "description": "The billing group name."
        },
        "companyName": {
          "type": "string",
          "description": "The company’s name."
        },
        "billingGroupInfo": {
          "$ref": "#/definitions/rippleBillingGroupInfo",
          "title": "The billing group info"
        },
        "accountOptions": {
          "$ref": "#/definitions/v1AccountOptions",
          "description": "The account options."
        },
        "accounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/blueapiapiAccount"
          },
          "title": "List of all accounts"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiCostTag"
          },
          "title": "List of all tags"
        },
        "invoiceSettings": {
          "$ref": "#/definitions/v1BillingGroupInvoiceSettings",
          "description": "The invoice settings for this billing group."
        },
        "additionalItems": {
          "$ref": "#/definitions/v1BillingGroupAdditionalItems",
          "title": "List of all additionalItems"
        },
        "awsOptions": {
          "$ref": "#/definitions/billingv1AwsOptions",
          "title": "AWS-specific options"
        }
      }
    },
    "v1BillingGroupAdditionalItems": {
      "type": "object",
      "properties": {
        "aws": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiAdditionalItems"
          },
          "title": "AWS additional items"
        },
        "azure": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiAdditionalItems"
          },
          "title": "Azure additional items"
        },
        "gcp": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiAdditionalItems"
          },
          "title": "GCP additional items"
        }
      },
      "description": "Additional items for a billing group."
    },
    "v1BillingGroupInvoiceSettings": {
      "type": "object",
      "properties": {
        "aws": {
          "$ref": "#/definitions/v1BillingGroupVendoredInvoiceSetting",
          "title": "AWS invoice settings"
        },
        "azure": {
          "$ref": "#/definitions/v1BillingGroupVendoredInvoiceSetting",
          "title": "Azure invoice settings"
        },
        "gcp": {
          "$ref": "#/definitions/v1BillingGroupVendoredInvoiceSetting",
          "title": "GCP invoice settings"
        }
      },
      "description": "Invoice settings for a billing group."
    },
    "v1BillingGroupVendoredInvoiceSetting": {
      "type": "object",
      "properties": {
        "calcType": {
          "type": "string"
        },
        "discountRate": {
          "type": "number",
          "format": "double"
        },
        "substitutionFee": {
          "type": "string"
        },
        "substitutionFix": {
          "type": "number",
          "format": "double"
        },
        "substitutionRate": {
          "type": "number",
          "format": "double"
        },
        "supportFee": {
          "type": "string"
        },
        "supportRate": {
          "type": "number",
          "format": "double"
        },
        "supportFix": {
          "type": "number",
          "format": "double"
        },
        "taxRate": {
          "type": "number",
          "format": "double"
        },
        "currency": {
          "type": "string"
        },
        "discountTargetUsage": {
          "type": "string"
        },
        "substitutionFeeTargetUsage": {
          "type": "string"
        },
        "discountCalcLogic": {
          "type": "string"
        },
        "substitutionFeeCalcTarget": {
          "type": "string"
        },
        "substitutionFeeCalcType": {
          "type": "string"
        },
        "supportAmountTarget": {
          "type": "string"
        },
        "supportFeeCalcTarget": {
          "type": "string"
        }
      },
      "description": "Invoice settings that are vendor-specific for each billing group."
    },
    "v1BudgetAlerts": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Budget alert Id."
        },
        "vendor": {
          "type": "string",
          "description": "Vnedor. At the moment, only `aws` is supported."
        },
        "accounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/blueapiapiAccount"
          },
          "description": "Lsit of accountId."
        },
        "notification": {
          "$ref": "#/definitions/apiBudgetAlertNotificationDetail",
          "description": "Notification setting for budget alert."
        },
        "daily": {
          "$ref": "#/definitions/apiDailyBudgetAlert",
          "description": "Daily setting for budget alert."
        },
        "dailyRate": {
          "$ref": "#/definitions/apiDailyRateIncreaseBudgetAlert",
          "description": "Daily rate increase setting for budget alert."
        },
        "monthly": {
          "$ref": "#/definitions/apiMonthlyBudgetAlert",
          "description": "Monthly setting for budget alert."
        }
      },
      "description": "Request message for the BudgetAlerts rpc."
    },
    "v1CalculateCostsRequestAwsOptions": {
      "type": "object",
      "properties": {
        "force": {
          "type": "boolean",
          "description": "Optional. If set to true, discard existing calculation operation(s), if any, and make this as the active/latest one. By default, if there is an ongoing operation during the call, the request will fail."
        },
        "accountsOnly": {
          "type": "boolean",
          "description": "Optional. If set to true, only calculate for account-type billing groups. If both `accountsOnly` and `tagsOnly` are set to true, `accountsOnly` will prevail."
        },
        "tagsOnly": {
          "type": "boolean",
          "description": "Optional. If set to true, only calculate for tags-type billing groups. Discarded when the organization doesn't have any tag-based billing groups configured. If both `accountsOnly` and `tagsOnly` are set to true, `accountsOnly` will prevail."
        }
      }
    },
    "v1CalculationsSchedule": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The schedule id."
        },
        "schedule": {
          "type": "string",
          "description": "The desired schedule in UTC, using the [cron](https://man7.org/linux/man-pages/man5/crontab.5.html) format."
        },
        "scheduleMacro": {
          "type": "string",
          "description": "The macro that augments `schedule`."
        },
        "targetMonth": {
          "type": "string",
          "description": "The target month for the calculation. Empty means previous month (default)."
        },
        "nextRun": {
          "type": "string",
          "description": "The schedule for the next run in UTC."
        },
        "notificationChannel": {
          "type": "string",
          "description": "The channel id to use for notifications."
        },
        "force": {
          "type": "boolean",
          "description": "If set to true, force calculations to proceed regardless of run status."
        },
        "dryRun": {
          "type": "boolean",
          "description": "If set to true, skips the actual calculations."
        },
        "status": {
          "type": "string",
          "description": "The current state of this schedule. Normally set to \"OK\", or empty if no issues. Otherwise, will contain an error string."
        }
      }
    },
    "v1CalculatorCostModifier": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string"
        },
        "updateTime": {
          "type": "string"
        },
        "awsOptions": {
          "$ref": "#/definitions/v1CalculatorCostModifierAwsOptions"
        }
      }
    },
    "v1CalculatorCostModifierAwsOptions": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string",
          "description": "Optional. The account to which the modifier is applied. A comma-separated list of accounts is also valid."
        },
        "groupId": {
          "type": "string",
          "description": "Optional. The group to which the modifier is applied. Accepts billing internal ids. A comma-separated list of billing internal ids is also valid."
        },
        "payerId": {
          "type": "string",
          "description": "Optional. The payer id to which the modifier is applied. A comma-separated list of payer ids is also valid."
        },
        "qualifiers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/CalculatorCostModifierAwsOptionsQualifier"
          },
          "description": "Optional. Conditional qualifiers to further filter the modifier targets. Multiple qualifiers use the logical `or` operator; `qualifiers[0] || qualifiers[1] || qualifiers[n]`."
        },
        "modifier": {
          "$ref": "#/definitions/CalculatorCostModifierAwsOptionsModifier"
        },
        "after": {
          "type": "string",
          "description": "Optional. Specifies the modifier id in which this modifier will be applied after. For example, if you have another modifier `mod1` and you create a new modifier with `after` set to `mod1`, the calculator will apply `mod1` first, then this modifier. If `after` is not set, the application sequence for multiple overlapping modifiers will be by update timestamp, newest to oldest."
        }
      },
      "description": "AWS-specific options definition."
    },
    "v1CheckAccountsResponse": {
      "type": "object",
      "properties": {
        "exists": {
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          },
          "description": "Map of accountIds to boolean values indicating if the account exists."
        }
      }
    },
    "v1CloudWatchMetricsStream": {
      "type": "object",
      "properties": {
        "target": {
          "type": "string",
          "description": "The queried target account."
        },
        "externalId": {
          "type": "string",
          "description": "The external id for this role."
        },
        "stackId": {
          "type": "string",
          "description": "The id of the CloudFormation stack deployed in the target account."
        },
        "stackRegion": {
          "type": "string",
          "description": "The region where the stack is deployed."
        },
        "templateUrl": {
          "type": "string",
          "description": "The latest template used to deploy the stack."
        },
        "status": {
          "type": "string",
          "description": "This can be `latest`, `outdated`, or some error information."
        },
        "lastUpdated": {
          "type": "string",
          "description": "The last updated timestamp, RFC3339 UTC."
        }
      },
      "description": "Response message for the Admin.CreateCloudWatchMetricsStream rpc."
    },
    "v1CostAllocatorDetails": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "expiration": {
          "type": "string",
          "format": "int64"
        },
        "startMonth": {
          "type": "string",
          "description": "Optional. The starting month of the allocator to be effective."
        },
        "defaultAccount": {
          "type": "string",
          "description": "Optional. The default account for remaining costs. If not set, will allocate the cost to the original account."
        },
        "criteria": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Criteria"
          },
          "description": "Required. Criteria for the adjustment to be applied."
        },
        "allocator": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Allocator"
          }
        },
        "createTime": {
          "type": "string"
        },
        "updateTime": {
          "type": "string"
        }
      }
    },
    "v1CostAttributeItem": {
      "type": "object",
      "properties": {
        "aws": {
          "$ref": "#/definitions/apiawsCostAttribute"
        }
      },
      "description": "Response message for the Cost.ReadCostAttributes rpc."
    },
    "v1CreateAccessGroupRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. access group name.\n\nWe recommend the name length of 1~60 characters."
        },
        "description": {
          "type": "string",
          "description": "Required. access group description.\n\nWe recommend the description length of 0~150 characters."
        },
        "billingGroups": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required. Billing group to be included in the access group.\n\nYou can only include billing groups with the same calculation type and currency type.\nSpecify the billingInternalIds. For example: [`billingInternalId1`,`billingInternalId2`,`billingInternalId3`]"
        }
      },
      "description": "Request message for the CreateAccessGroup rpc."
    },
    "v1CreateAccountAccessRequest": {
      "type": "object",
      "properties": {
        "target": {
          "type": "string",
          "description": "Required. The target AWS account to validate."
        }
      },
      "description": "Request message for the CreateAccountAccess rpc."
    },
    "v1CreateAccountBudgetResponse": {
      "type": "object",
      "properties": {
        "budgetId": {
          "type": "string",
          "title": "Budget Id"
        }
      },
      "title": "Response message for CreateAccountBudget"
    },
    "v1CreateAccountInvoiceServiceDiscountsResponse": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AccountServiceDiscounts"
          }
        }
      },
      "description": "Response message for the CreateAccountInvoiceServiceDiscounts rpc."
    },
    "v1CreateAccountRequestAwsOptions": {
      "type": "object",
      "properties": {
        "managementAccountId": {
          "type": "string",
          "description": "Optional. The management account id (formerly known as master, or payer) to which an account belongs to, initially. If the account is moved to another management account, the system is able to detect it and set this value accordingly."
        }
      },
      "description": "AWS-specific options for registering an account."
    },
    "v1CreateAccountRequestGcpOptions": {
      "type": "object",
      "properties": {
        "managementAccountId": {
          "type": "string",
          "description": "Optional."
        },
        "managementBillingId": {
          "type": "string",
          "description": "Optional."
        }
      },
      "description": "GCP-specific options for registering an account."
    },
    "v1CreateAlertRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required."
        },
        "fixedAmount": {
          "type": "number",
          "format": "float",
          "description": "At least one in either fixedAmount or percentage."
        },
        "percentage": {
          "type": "number",
          "format": "float"
        },
        "granularity": {
          "type": "string",
          "description": "Optional. daily or monthly. Only 'daily' is supported for now."
        },
        "costGroups": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required. Cost group IDs."
        },
        "channels": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required. Channel IDs."
        }
      },
      "title": "Request message for CreateAlert"
    },
    "v1CreateAlertResponse": {
      "type": "object",
      "properties": {
        "alertData": {
          "$ref": "#/definitions/coverAlertData"
        }
      },
      "title": "Response message for CreateAlert"
    },
    "v1CreateAllocatorRequest": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string",
          "description": "Optional. The category where the allocator is to be applied. Applicable values are `fee`, `account`, or `savings`. Default value is `fee`."
        },
        "expiration": {
          "type": "string",
          "format": "int64"
        },
        "startMonth": {
          "type": "string",
          "description": "Optional. The starting month of the allocator to be effective."
        },
        "defaultAccount": {
          "type": "string",
          "description": "Optional. The default account for remaining costs. If not set, will allocate the cost to the original account."
        },
        "criteria": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Criteria"
          },
          "description": "Required. Criteria for the adjustment to be applied."
        },
        "allocator": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Allocator"
          }
        }
      },
      "description": "Request message for the CreateAllocator rpc."
    },
    "v1CreateAnomalyAlertRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Required. Name of the Anomaly Alert"
        },
        "alertEnabled": {
          "type": "boolean",
          "title": "Required. Toggle disable and enable status of the alert"
        },
        "frequency": {
          "type": "string",
          "title": "Required. How often the user wants to receive alerts. Daily or Weekly"
        },
        "costGroupId": {
          "type": "string",
          "title": "Requried. The Id of the cost group you want to monitor if there is an anomaly"
        },
        "notificationChannels": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required. The Channels where you want to send the alerts."
        }
      },
      "title": "Rquest message for CreateAnomalyAlert"
    },
    "v1CreateApiClientRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The descriptive name of the API client to create."
        }
      },
      "description": "Request message for the Iam.CreateApiClient rpc."
    },
    "v1CreateBillingGroupRequest": {
      "type": "object",
      "properties": {
        "billingGroupId": {
          "type": "string",
          "description": "Required. The billing group's id."
        },
        "billingGroupName": {
          "type": "string",
          "description": "Required. The billing group's name."
        },
        "companyName": {
          "type": "string",
          "title": "Required. Company’s name"
        },
        "billingTitle": {
          "type": "string",
          "title": "Optional. The title of the billing"
        },
        "phoneNumber": {
          "type": "string",
          "title": "Optional. Company’s phone number"
        },
        "postalCode": {
          "type": "string",
          "title": "Optional. Company’s postal code"
        },
        "address": {
          "type": "string",
          "title": "Optional. Company’s address"
        },
        "personal": {
          "type": "string",
          "title": "Optional. Addressee"
        },
        "remarks": {
          "type": "string",
          "title": "Optional. Any remarks about the billing group"
        },
        "projectId": {
          "type": "string",
          "title": "Optional. Project code"
        },
        "language": {
          "type": "string",
          "title": "Optional. Invoice language"
        },
        "displayCost": {
          "type": "string",
          "title": "Optional. Calculation type, true unblended or unblended"
        },
        "exchangeRateType": {
          "type": "string",
          "title": "Optional. Exchange rate type, payer or billing group"
        },
        "accountOptions": {
          "$ref": "#/definitions/v1AccountOptions",
          "description": "Optional. Account options."
        },
        "invoices": {
          "$ref": "#/definitions/v1CreateBillingGroupRequestInvoice",
          "title": "Invoice settings"
        },
        "awsOptions": {
          "$ref": "#/definitions/billingv1AwsOptions",
          "title": "Optional. AWS-specific options"
        }
      },
      "description": "Request message for the Billing.CreateBillingGroup rpc."
    },
    "v1CreateBillingGroupRequestInvoice": {
      "type": "object",
      "properties": {
        "aws": {
          "$ref": "#/definitions/v1CreateBillingGroupRequestInvoiceVendor",
          "title": "AWS invoice settings"
        },
        "azure": {
          "$ref": "#/definitions/v1CreateBillingGroupRequestInvoiceVendor",
          "title": "Azure invoice settings"
        },
        "gcp": {
          "$ref": "#/definitions/v1CreateBillingGroupRequestInvoiceVendor",
          "title": "GCP invoice settings"
        }
      },
      "title": "Vendor invoice setttings"
    },
    "v1CreateBillingGroupRequestInvoiceVendor": {
      "type": "object",
      "properties": {
        "calcType": {
          "type": "string"
        },
        "discountRate": {
          "type": "number",
          "format": "double"
        },
        "substitutionFee": {
          "type": "string"
        },
        "substitutionFix": {
          "type": "number",
          "format": "double"
        },
        "substitutionRate": {
          "type": "number",
          "format": "double"
        },
        "supportFee": {
          "type": "string"
        },
        "supportRate": {
          "type": "number",
          "format": "double"
        },
        "supportFix": {
          "type": "number",
          "format": "double"
        },
        "taxRate": {
          "type": "number",
          "format": "double"
        },
        "currency": {
          "type": "string"
        },
        "discountTargetUsage": {
          "type": "string"
        },
        "substitutionFeeTargetUsage": {
          "type": "string"
        },
        "discountCalcLogic": {
          "type": "string"
        },
        "substitutionFeeCalcTarget": {
          "type": "string"
        },
        "substitutionFeeCalcType": {
          "type": "string"
        },
        "supportAmountTarget": {
          "type": "string"
        },
        "supportFeeCalcTarget": {
          "type": "string"
        }
      },
      "title": "Specific settings per vendor"
    },
    "v1CreateBudgetAlertsRequest": {
      "type": "object",
      "properties": {
        "vendor": {
          "type": "string",
          "description": "Required. At the moment, only `aws` is supported."
        },
        "accounts": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required. Lsit of accountId. For example, you set to [\"accountId1\",\"accountId2\",\"accountId3\"]."
        },
        "notification": {
          "$ref": "#/definitions/apiBudgetAlertNotification",
          "description": "Required."
        },
        "daily": {
          "$ref": "#/definitions/apiDailyBudgetAlert",
          "description": "Optional."
        },
        "dailyRate": {
          "$ref": "#/definitions/apiDailyRateIncreaseBudgetAlert",
          "description": "Optional."
        },
        "monthly": {
          "$ref": "#/definitions/apiMonthlyBudgetAlert",
          "description": "Optional."
        }
      },
      "description": "Request message for the CreateBudgetAlerts rpc."
    },
    "v1CreateBudgetRequest": {
      "type": "object",
      "properties": {
        "budgetData": {
          "$ref": "#/definitions/coverBudgetData"
        }
      }
    },
    "v1CreateBudgetResponse": {
      "type": "object",
      "properties": {
        "budgetData": {
          "$ref": "#/definitions/coverBudgetData"
        }
      }
    },
    "v1CreateCalculatorCostModifierResponse": {
      "type": "object",
      "properties": {
        "aws": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CalculatorCostModifier"
          }
        }
      },
      "description": "Response message for the Cost.CreateCalculatorCostModifier rpc."
    },
    "v1CreateChannelRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Required. Either actual email address or slack/msteams channel name"
        },
        "type": {
          "type": "string",
          "description": "Required. email, slack, or msteams."
        },
        "webhookUrl": {
          "type": "string",
          "description": "Optional. Only needed for slack and msteams type."
        }
      },
      "title": "Request message for CreateChannel"
    },
    "v1CreateChannelResponse": {
      "type": "object",
      "properties": {
        "channelData": {
          "$ref": "#/definitions/coverChannelData"
        }
      },
      "title": "Response message for CreateChannel"
    },
    "v1CreateCloudWatchMetricsStreamRequest": {
      "type": "object",
      "properties": {
        "target": {
          "type": "string",
          "description": "Required. The target AWS account to validate."
        }
      },
      "description": "Request message for the Admin.CreateCloudWatchMetricsStream rpc."
    },
    "v1CreateCostFiltersResponse": {
      "type": "object",
      "properties": {
        "filterId": {
          "type": "string",
          "description": "Required. Filter Id."
        }
      },
      "description": "Response message for the CreateCostFilters rpc."
    },
    "v1CreateCostGroupRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "colorTheme": {
          "type": "string"
        },
        "combinations": {
          "$ref": "#/definitions/coverCombinations"
        }
      },
      "title": "Request message for CreateCostGroup"
    },
    "v1CreateCostGroupResponse": {
      "type": "object",
      "properties": {
        "costGroupData": {
          "$ref": "#/definitions/coverCostGroupData"
        }
      },
      "title": "Response message for CreateCostGroup"
    },
    "v1CreateDefaultCostAccessRequest": {
      "type": "object",
      "properties": {
        "target": {
          "type": "string",
          "description": "Required. The target AWS account to validate."
        }
      },
      "description": "Request message for the Admin.CreateDefaultCostAccess rpc."
    },
    "v1CreateDefaultNotificationChannelRequest": {
      "type": "object",
      "description": "Request message for the Admin.CreateDefaultNotificationChannel rpc."
    },
    "v1CreateDiscountExpirationAlertRequest": {
      "type": "object",
      "properties": {
        "frequencies": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "title": "Required if the alertEnabled is set to true\nSupported values are the following:\n[0, 7, 30, 60, 90]"
        },
        "costGroups": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Required. Cost Group Id"
        },
        "alertEnabled": {
          "type": "boolean",
          "description": "required. Switch in enabling alert."
        },
        "channels": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "required. Array of notificationChannel Ids from DynamoDB. Existing in ripple."
        },
        "name": {
          "type": "string",
          "title": "required. Name of alert"
        }
      },
      "title": "Request message for CreateDiscountExpirationAlert"
    },
    "v1CreateGroupRootUserRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "The email address of the user being created."
        },
        "password": {
          "type": "string",
          "title": "The password of the user being created. A value will be generated if not is provided for this field"
        },
        "groupId": {
          "type": "string",
          "description": "The ID of the group to which the user will be added. This must either be a billing group ID or an access group ID."
        },
        "groupType": {
          "type": "string",
          "description": "The type of group which is represented by the group ID. Valid values include \"billing_group\" or \"access_group\"."
        },
        "inputType": {
          "type": "string",
          "description": "This value determines whether the password should be auto-generated or if the plaintext value received with the request should be used. A value of \"Auto\" will result in an auto-generated password whereas a value of \"Custom\" will result in the password included with the request being used."
        },
        "plan": {
          "type": "string",
          "description": "The plan associated with the root-user account. Valid values include \"trial\", \"limited3\" and \"limited4\"."
        },
        "emailNotification": {
          "type": "boolean",
          "description": "Whether or not a notification should be sent to the provided email after the user has been created."
        },
        "meta": {
          "$ref": "#/definitions/apiFeatureFlags",
          "description": "A collection of feature flags and whether or not they should be enabled. For a full list of such flags, see https://labs.alphaus.cloud/docs/blueapi/apis/iam/."
        }
      },
      "title": "Request message for the Iam.CreateGroupRootUser rpc"
    },
    "v1CreateIdentityProviderRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The IdP name."
        },
        "type": {
          "type": "string",
          "description": "Required. Value is `saml`."
        },
        "metadata": {
          "type": "string",
          "description": "Required. The contents of the metadata file from your IdP."
        }
      },
      "description": "Request message for the Iam.CreateIdentityProvider rpc."
    },
    "v1CreateIpFilterRequest": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "Required. The IP input to filter, either blacklist or whitelist. Should be in CIDR format (i.e. `1.2.3.4/32`)."
        },
        "type": {
          "type": "string",
          "description": "Optional. Can be `whitelist` or `blacklist`. Defaults to `blacklist` if empty."
        },
        "rootUser": {
          "type": "string",
          "description": "Optional. If `rootUser` is valid and `subUser` is empty, filter is for this rootuser. If both `rootUser` and `subUser` inputs are empty, filter is at global scope."
        },
        "subUser": {
          "type": "string",
          "description": "Optional. If `subuser` is valid, filter is for this subuser; `rootUser` value is discarded. If both `rootUser` and `subUser` inputs are empty, filter is at global scope."
        }
      },
      "description": "Request message for the Iam.CreateIpFilter rpc."
    },
    "v1CreateMemberRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "costgroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Request message for CreateMember"
    },
    "v1CreateMemberResponse": {
      "type": "object",
      "properties": {
        "userData": {
          "$ref": "#/definitions/coverUserData"
        }
      },
      "title": "Response message for CreateMember"
    },
    "v1CreateNotificationChannelRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. Name of the notification channel."
        },
        "type": {
          "type": "string",
          "description": "Required. Valid values: `email`, `slack`, `msteams`."
        },
        "email": {
          "$ref": "#/definitions/apiEmailChannel",
          "description": "Required if type = `email`."
        },
        "slack": {
          "$ref": "#/definitions/apiSlackChannel",
          "description": "Required if type = `slack`."
        },
        "msteams": {
          "$ref": "#/definitions/apiMSTeamsChannel",
          "description": "Required if type = `msteams`."
        },
        "product": {
          "type": "string",
          "description": "Optional. For Octo use only: `octo`."
        }
      },
      "description": "Request message for the Admin.CreateNotificationChannel rpc."
    },
    "v1CreateNotificationRequest": {
      "type": "object",
      "properties": {
        "notificationType": {
          "type": "string",
          "description": "Required\nValid values: \n`InvoiceCalculationStarted`, \n`InvoiceCalculationFinished`, \n`CurUpdatedAfterInvoice`.\n`AccountBudgetAlert`."
        },
        "channels": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Required"
        },
        "enabled": {
          "type": "boolean",
          "title": "Required"
        },
        "account": {
          "$ref": "#/definitions/adminv1NotificationAccount",
          "description": "Optional. only available Wave(Pro)."
        }
      },
      "description": "Request message for the Admin.CreateNotificationTypeChannels rpc."
    },
    "v1CreateOrgRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "title": "Required. Organization's email"
        },
        "description": {
          "type": "string",
          "title": "Required. Organization's description or company name"
        },
        "password": {
          "type": "string",
          "description": "Optional. User can decide to let the system generates the password."
        },
        "name": {
          "type": "string",
          "title": "To be used for onboarding profile"
        },
        "role": {
          "type": "string"
        },
        "usage": {
          "type": "string"
        },
        "intention": {
          "type": "string"
        },
        "isAuth0Signup": {
          "type": "boolean"
        },
        "customerId": {
          "type": "string",
          "title": "Optional. Customer Id from AWS marketplace"
        },
        "locale": {
          "type": "string",
          "description": "Optional. User locale. Default value is en if not supplied."
        },
        "auth0UserId": {
          "type": "string",
          "description": "Optional. Auth0 user id for users registering using social login."
        }
      },
      "description": "Request message for the Organization.CreateOrg rpc."
    },
    "v1CreateOrgResponse": {
      "type": "object",
      "properties": {
        "org": {
          "$ref": "#/definitions/rippleOrg"
        },
        "password": {
          "type": "string"
        }
      },
      "description": "Response message for the Organization.CreateOrg rpc."
    },
    "v1CreatePayerAccountRequestAwsOptions": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Required. The id of the management account."
        },
        "name": {
          "type": "string",
          "description": "Optional. The name, or description of the management account. This is set to `id` when not specified."
        },
        "bucketName": {
          "type": "string",
          "description": "Required. S3 Bucket name."
        },
        "prefix": {
          "type": "string",
          "description": "Optional. Prefix."
        },
        "reportName": {
          "type": "string",
          "description": "Required. Report name."
        },
        "roleArn": {
          "type": "string",
          "description": "Required. Role ARN for Alphaus to assume for access."
        }
      },
      "description": "See [https://help.alphaus.cloud/en/articles/3612555-ripple-aws-things-you-need-to-prepare-before-starting] for more information.\n\nSee [https://docs.aws.amazon.com/cur/latest/userguide/cur-create.html] for more information. Requirements include: Additional report details = 'Include Resource IDS' enabled, Prefix = non-empty (recommendation only), Time granularity = 'Hourly', File format = 'text/csv'."
    },
    "v1CreateProfilingRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "usage": {
          "type": "string"
        },
        "intention": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        }
      }
    },
    "v1CreateProfilingResponse": {
      "type": "object"
    },
    "v1CreateProformaCurRequest": {
      "type": "object",
      "properties": {
        "payerId": {
          "type": "string",
          "description": "Required."
        },
        "billingInternalId": {
          "type": "string",
          "description": "Required."
        },
        "reportName": {
          "type": "string",
          "description": "Required."
        },
        "s3BucketName": {
          "type": "string",
          "title": "Optional. Default value: `alphaus-proforma-cur-export`"
        },
        "s3Prefix": {
          "type": "string",
          "title": "Optional. Default value: `pre`"
        },
        "s3Region": {
          "type": "string",
          "title": "Optional. Default value: `us-east-1`"
        }
      },
      "title": "Request message for Admin.CreateProformaCur rpc"
    },
    "v1CreateResellerRequest": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "Required. You can set billing internal id or access group id."
        },
        "email": {
          "type": "string",
          "description": "Required."
        },
        "password": {
          "type": "string",
          "description": "Required.\n\nWe recommend a password length of 8~32 characters. If you send 0 characters, a password will be generated automatically."
        },
        "notification": {
          "type": "boolean",
          "description": "Required. If valid, you will be notified via email address."
        },
        "waveConfig": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/rippleResellerConfig"
          },
          "title": "Optional. Feature Config. If not set config value, use default config"
        },
        "aquaConfig": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/rippleResellerConfig"
          },
          "title": "Optional. Feature Config. If not set config value, use default config"
        }
      },
      "description": "Request message for the CreateReseller rpc."
    },
    "v1CreateRoleRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The name of the role to create. Role names should have at least 6 characters in length and 32 characters maximum. It should also be alphanumeric. Hyphens and underscores are allowed in between. The regular expression used for validation is `^[A-Za-z0-9][A-Za-z0-9_-]*[A-Za-z0-9]$`."
        },
        "namespace": {
          "type": "string",
          "description": "Required. The namespace where this role will belong."
        },
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required. The list of permissions to attach to this role."
        }
      },
      "description": "Request message for the Iam.CreateRole rpc."
    },
    "v1CreateUserRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. Min: 4, max: 18, allowed characters: letters, numbers, `_` (underscore), `.` (period) and `-` (hyphen) characters."
        },
        "password": {
          "type": "string",
          "description": "Required. Minimum of 8 characters."
        },
        "email": {
          "type": "string",
          "description": "Optional. Email address of the subuser."
        },
        "nickName": {
          "type": "string",
          "description": "Optional. Nickname or description. It is set to 'name' if empty."
        }
      },
      "description": "Request message for the Iam.CreateUser rpc."
    },
    "v1CreateUserRoleMappingRequest": {
      "type": "object",
      "properties": {
        "subUser": {
          "type": "string",
          "description": "Optional. The subuser to map the roles. Defaults to caller if not set."
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MapRole"
          },
          "description": "Required. The roles to map to the user. Limited to 5 items."
        }
      },
      "description": "Request message for the Iam.CreateUserRoleMapping rpc."
    },
    "v1CreateUserRoleMappingResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "failed": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Response message for the Iam.CreateUserRoleMapping rpc."
    },
    "v1CreateViewRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "isPrivate": {
          "type": "boolean"
        },
        "isEditable": {
          "type": "boolean"
        },
        "icon": {
          "type": "string"
        },
        "reportType": {
          "type": "string"
        },
        "colorTheme": {
          "type": "string"
        }
      },
      "title": "Request message for CreateView"
    },
    "v1CreateViewResponse": {
      "type": "object",
      "properties": {
        "viewData": {
          "$ref": "#/definitions/coverViewData"
        }
      },
      "title": "Response message for CreateView"
    },
    "v1Criteria": {
      "type": "object",
      "properties": {
        "and": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "A map of \"key:value\" attribute filters. The key indicates the column name while the value is the filter value prefixed by either \"eq:\" (equal), \"re:\" (regular expressions based on https://github.com/google/re2), or \"!re:\" (reverse \"re:\"). No prefix is the same as \"eq:\". Multiple map items will use the logical 'and' operator, e.g. mapfilter1 \u0026\u0026 mapfilter2 \u0026\u0026 mapfilter3, etc."
    },
    "v1DataAccess": {
      "type": "object",
      "properties": {
        "target": {
          "type": "string",
          "title": "Project Id for GCP, Account Id for Azure"
        },
        "orgId": {
          "type": "string",
          "title": "Org Id"
        },
        "gcpOptions": {
          "$ref": "#/definitions/coverGcpOptions",
          "title": "GCP Options"
        },
        "azureOptions": {
          "$ref": "#/definitions/coverAzureOptions",
          "title": "Azure Options"
        },
        "awsOptions": {
          "$ref": "#/definitions/apicoverAwsOptions"
        },
        "accountType": {
          "type": "string",
          "title": "Account type, linked or payer"
        },
        "lastUpdate": {
          "type": "string",
          "title": "Last Update"
        },
        "createTime": {
          "type": "string",
          "title": "Time Created"
        },
        "vendor": {
          "type": "string"
        }
      },
      "title": "Message Response for GetDataAccess. For Azure and GCP"
    },
    "v1DefaultCostAccess": {
      "type": "object",
      "properties": {
        "target": {
          "type": "string",
          "description": "The queried target account."
        },
        "roleArn": {
          "type": "string",
          "description": "The role ARN that provides the cross-account access permissions."
        },
        "externalId": {
          "type": "string",
          "description": "The external id for this role."
        },
        "stackId": {
          "type": "string",
          "description": "The id of the CloudFormation stack deployed in the target account."
        },
        "stackRegion": {
          "type": "string",
          "description": "The region where the stack is deployed."
        },
        "templateUrl": {
          "type": "string",
          "description": "The latest template used to deploy the stack."
        },
        "status": {
          "type": "string",
          "description": "This can be `latest`, `outdated`, or some error information."
        },
        "lastUpdated": {
          "type": "string",
          "description": "The last updated timestamp, RFC3339 UTC."
        }
      },
      "description": "Response message for the Admin.GetDefaultCostAccess, Admin.CreateDefaultCostAccess rpc."
    },
    "v1DeleteAccountAccessResponse": {
      "type": "object",
      "properties": {
        "targetId": {
          "type": "string"
        }
      },
      "description": "Response message for the DeleteAccountAccess rpc."
    },
    "v1DeleteAlertResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "title": "Response message for DeleteAlert"
    },
    "v1DeleteBudgetResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1DeleteChannelResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "title": "Response message for DeleteChannel"
    },
    "v1DeleteCostGroupResponse": {
      "type": "object",
      "properties": {
        "costGroupId": {
          "type": "string"
        }
      },
      "title": "Response message for DeleteCostGroup"
    },
    "v1DeleteMemberResponse": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        }
      },
      "title": "Response message for DeleteMember"
    },
    "v1DeleteViewResponse": {
      "type": "object",
      "properties": {
        "viewId": {
          "type": "string"
        }
      },
      "title": "Response message for DeleteView"
    },
    "v1DiscountExpiryAlertData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "orgId": {
          "type": "string"
        },
        "alertEnabled": {
          "type": "boolean"
        },
        "frequencies": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "costGroups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverAlertCostGroup"
          }
        },
        "details": {
          "type": "string"
        },
        "channels": {
          "$ref": "#/definitions/coverAlertChannels"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1ExecuteOptimizationResponse": {
      "type": "object"
    },
    "v1ExportAuditLogsRequest": {
      "type": "object",
      "properties": {
        "format": {
          "type": "string",
          "description": "Required. At the moment, `CSV`,`JSON` is supported."
        },
        "startTime": {
          "type": "string",
          "description": "Required. The UTC date to start data from. If not set, the first day of the current year will be used. Format: `yyyymmdd`."
        },
        "endTime": {
          "type": "string",
          "description": "Required. The UTC date to end data from. If not set, the first day of the current year will be used. Format: `yyyymmdd`."
        }
      },
      "description": "Request message for the ExportAuditLogs rpc."
    },
    "v1ExportCostFiltersFileResponse": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "Required. URL of exported file."
        }
      },
      "description": "Response message for the ExportCostFiltersFile rpc."
    },
    "v1ExportInvoiceFileResponse": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "Required. URL of exported file.\n\ncsv columns set `group vendor resourceId resourceName type serviceName currency cost`"
        }
      },
      "description": "Response message for the ExportInvoiceFile rpc."
    },
    "v1FeeItem": {
      "type": "object",
      "properties": {
        "vendor": {
          "type": "string"
        },
        "month": {
          "type": "string"
        },
        "product": {
          "type": "string"
        },
        "account": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "cost": {
          "type": "number",
          "format": "double"
        }
      },
      "description": "Response message wrapper for cost group fees."
    },
    "v1GetAccessGroupResponse": {
      "type": "object",
      "properties": {
        "accessGroup": {
          "$ref": "#/definitions/billingv1AccessGroup"
        }
      },
      "description": "Response message for the Billing.GetAccessGroup rpc."
    },
    "v1GetAccountAccessTemplateUrlResponse": {
      "type": "object",
      "properties": {
        "launchUrl": {
          "type": "string",
          "description": "The CloudFormation launch url. Open it in your browser."
        },
        "templateUrl": {
          "type": "string",
          "description": "The latest CloudFormation template. The version is included in the filename."
        },
        "stackName": {
          "type": "string",
          "description": "The default stack name used. Can be modified."
        },
        "principal": {
          "type": "string",
          "description": "The AWS account that will receive the access. Do not change."
        },
        "externalId": {
          "type": "string",
          "description": "The external id for this role. Do not change."
        }
      },
      "description": "Response message for the GetAccountAccessTemplateUrlResponse rpc."
    },
    "v1GetAccountBudgetResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/blueapiapiBudget"
        }
      },
      "title": "Response message for GetAccountBudget"
    },
    "v1GetAccountGroupResponse": {
      "type": "object",
      "properties": {
        "acctGroup": {
          "$ref": "#/definitions/apiAccountGroup"
        }
      },
      "description": "Response message for the Admin.GetAccountGroup rpc."
    },
    "v1GetAccountsResponse": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Response message for GetAccounts"
    },
    "v1GetAlertDetailsResponse": {
      "type": "object",
      "properties": {
        "alertData": {
          "$ref": "#/definitions/coverAlertData"
        }
      },
      "title": "Response message for GetAlertDetails"
    },
    "v1GetAlertsResponse": {
      "type": "object",
      "properties": {
        "alertData": {
          "$ref": "#/definitions/coverAlertData"
        }
      },
      "title": "Response message for GetAlerts"
    },
    "v1GetAnomalyinCostGroupRequest": {
      "type": "object",
      "properties": {
        "costGroupId": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "title": "Start date for detecting anomalies"
        },
        "endDate": {
          "type": "string",
          "title": "End date for detection anomalies"
        }
      },
      "title": "Request message for getting anomaly"
    },
    "v1GetAssetsSummaryResponse": {
      "type": "object",
      "properties": {
        "summary": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AssetsSummary"
          }
        },
        "recommendationSummary": {
          "type": "string",
          "title": "Format: JSON String"
        }
      }
    },
    "v1GetBillingGroupResponse": {
      "type": "object",
      "properties": {
        "billingGroup": {
          "$ref": "#/definitions/v1BillingGroup"
        }
      },
      "description": "Response message for the Billing.GetBillingGroup rpc."
    },
    "v1GetBillingSettingResponse": {
      "type": "object",
      "properties": {
        "yearMonth": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/rippleYearMonth"
          },
          "description": "List of available yearmonth."
        },
        "roundingMethod": {
          "$ref": "#/definitions/rippleRounding",
          "description": "Rounding method."
        },
        "exportRoundingMethod": {
          "$ref": "#/definitions/rippleRounding",
          "description": "Rounding method for Export CSV."
        },
        "invoiceLayout": {
          "$ref": "#/definitions/rippleInvoiceLayout",
          "description": "Invoice layout."
        },
        "invoiceDueDate": {
          "$ref": "#/definitions/rippleDueDate",
          "description": "Invoice due date."
        },
        "supportCurrency": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of available currency."
        }
      },
      "description": "Response message for the GetBillingSetting rpc."
    },
    "v1GetBreakevenPointResponse": {
      "type": "object",
      "properties": {
        "orgId": {
          "type": "string"
        },
        "awsCostBreakeven": {
          "$ref": "#/definitions/awsAwsCostBreakeven"
        }
      },
      "title": "Response message for GetBreakevenPoint"
    },
    "v1GetBudgetResponse": {
      "type": "object",
      "properties": {
        "budgetData": {
          "$ref": "#/definitions/coverBudgetData"
        }
      }
    },
    "v1GetCalculatorConfigResponse": {
      "type": "object",
      "properties": {
        "aws": {
          "$ref": "#/definitions/awsCalculatorConfig"
        }
      },
      "description": "Response message for the Cost.GetCalculatorConfig rpc."
    },
    "v1GetCategoriesResponse": {
      "type": "object",
      "properties": {
        "category": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverCategory"
          }
        }
      }
    },
    "v1GetChannelDetailsResponse": {
      "type": "object",
      "properties": {
        "channelData": {
          "$ref": "#/definitions/coverChannelData"
        }
      },
      "title": "Response message for GetChannelDetails"
    },
    "v1GetChannelsRequest": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "title": "Optional. Use email, slack, or msteams to filter the type of channels\nOtherwise, it returns all channels"
        }
      },
      "title": "Request message for GetChannels"
    },
    "v1GetChannelsResponse": {
      "type": "object",
      "properties": {
        "channelData": {
          "$ref": "#/definitions/coverChannelData"
        }
      },
      "title": "Response message for GetChannels"
    },
    "v1GetCloudWatchMetricsStreamTemplateUrlResponse": {
      "type": "object",
      "properties": {
        "launchUrl": {
          "type": "string",
          "description": "The CloudFormation launch url. Open it in your browser."
        },
        "templateUrl": {
          "type": "string",
          "description": "The latest CloudFormation template. The version is included in the filename."
        },
        "stackName": {
          "type": "string",
          "description": "The default stack name used. Can be modified."
        },
        "externalId": {
          "type": "string",
          "description": "The external id for this role. Do not change."
        }
      },
      "description": "Response message for the Admin.GetCloudWatchMetricsStreamTemplateUrl rpc."
    },
    "v1GetCostAttributesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/costv1CostAttribute"
          },
          "description": "The cost attributes."
        }
      },
      "description": "Response message for the Cost.GetCostAttributes rpc."
    },
    "v1GetCostGroupAllocationRequest": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string",
          "description": "Required. The category to display on the cost group. Supports `fee` or `savings`."
        },
        "costGroupId": {
          "type": "string",
          "description": "Required. Cost Group Id."
        },
        "startDate": {
          "type": "string"
        },
        "endDate": {
          "type": "string"
        }
      },
      "description": "Request message for the GetCostGroupAllocation rpc."
    },
    "v1GetCostGroupAttributeRequest": {
      "type": "object",
      "properties": {
        "vendor": {
          "type": "string"
        },
        "attributeType": {
          "type": "string"
        },
        "costGroupId": {
          "type": "string"
        }
      },
      "title": "Request message for GetCostGroupAttribute"
    },
    "v1GetCostGroupAttributeResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverResult"
          }
        },
        "tagData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverTagData"
          }
        }
      },
      "title": "Response message for GetCostGroupAttribute"
    },
    "v1GetCostGroupDetailsResponse": {
      "type": "object",
      "properties": {
        "costGroupData": {
          "$ref": "#/definitions/coverCostGroupData"
        }
      },
      "title": "Response message for GetCostGroupDetails"
    },
    "v1GetCostGroupFeeRequest": {
      "type": "object",
      "properties": {
        "costGroupId": {
          "type": "string",
          "description": "Required. Cost Group Id."
        },
        "startTime": {
          "type": "string"
        },
        "endTime": {
          "type": "string"
        }
      },
      "description": "Request message for the GetCostGroupFee rpc."
    },
    "v1GetCostGroupsResponse": {
      "type": "object",
      "properties": {
        "costGroupData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverCostGroupData"
          }
        }
      },
      "title": "Response message for GetCostGroups"
    },
    "v1GetCostReductionResponse": {
      "type": "object",
      "properties": {
        "orgId": {
          "type": "string"
        },
        "awsCostReductions": {
          "$ref": "#/definitions/awsAwsCostReductions"
        }
      },
      "title": "Response message for GetCostReduction"
    },
    "v1GetCostUsageRequest": {
      "type": "object",
      "properties": {
        "costGroupId": {
          "type": "string",
          "description": "Required. Cost Group Id."
        },
        "startTime": {
          "type": "string",
          "description": "Optional. If not set, the first day of the current month will be used. Format: `yyyymmdd`."
        },
        "endTime": {
          "type": "string",
          "description": "Optional. If not set, current date will be used. Format: `yyyymmdd`."
        },
        "groupByMonth": {
          "type": "boolean",
          "description": "Optional. If set to true, return data grouped by month within the date range. \nIf you want data that is grouped per account per month, set this to `true`, then set `groupByColumns` to `none`. \nYou can also use `groupByColumns` while setting this to true."
        },
        "limit": {
          "type": "string",
          "format": "int64",
          "description": "Optional. If set, returns only the services or accounts with the highest cost or usage\nDefault value is 0."
        },
        "category": {
          "type": "string",
          "description": "Optional. Valid values are `cost` and `usage`. \nDefault value is `cost`. Used only when limit is not 0."
        },
        "groupBy": {
          "type": "string",
          "description": "Optional. Valid values are `service` and `account`. Only `service` is supported for now \nDefault value is `service`. Used only when limit is not 0."
        },
        "includeZeroCost": {
          "type": "boolean",
          "description": "Optional. If set to true, return all available data including the data with zero cost.\nDefault value is `false` which means that only data with non-zero cost are returned."
        },
        "awsOptions": {
          "$ref": "#/definitions/v1GetCostUsageRequestAwsOptions",
          "description": "Optional. Valid only for the `aws` vendor. AWS-specific options."
        },
        "azureOptions": {
          "$ref": "#/definitions/v1GetCostUsageRequestAzureOptions",
          "description": "Optional. Valid only for the `azure` vendor. Azure-specific options."
        },
        "gcpOptions": {
          "$ref": "#/definitions/v1GetCostUsageRequestGcpOptions",
          "description": "Optional. Valid only for the `gcp` vendor. gcp-specific options."
        },
        "azurecspOptions": {
          "$ref": "#/definitions/v1GetCostUsageRequestAzureCspOptions",
          "description": "Optional. Valid only for the `azurecsp` vendor. AzureCsp-specific options."
        },
        "customOptions": {
          "$ref": "#/definitions/v1GetCostUsageRequestCustomOptions",
          "description": "Optional. For custom selection when creating cost groups.\nThis field allows custom options for specifying criteria for cost group creation."
        },
        "includeForecast": {
          "$ref": "#/definitions/coverIncludeForecast",
          "title": "Optional. If set to true, include cost forecast for current month"
        }
      }
    },
    "v1GetCostUsageRequestAwsOptions": {
      "type": "object",
      "properties": {
        "groupByColumns": {
          "type": "string",
          "description": "Optional. A comma-separated list of columns to aggregate the data into. \nValid values are `productCode`, `serviceCode`, `region`, `zone`, `usageType`, `instanceType`, `operation`, `invoiceId`, `description`, and `resourceId`. \nA special value of `none` is also supported, which means query by date or month per account only.\n\nFor example, if you only want the services and region data, you can set this field to `productCode,region`. \nYour input sequence doesn't matter (although the sequence above is recommended) as the actual sequence is already fixed in the return data (see the definition in https://github.com/alphauslabs/blueapi/blob/main/api/aws/cost.proto), which is generic to specific, top to bottom. Invalid values are discarded. Excluded columns will be empty."
        },
        "groupAccounts": {
          "type": "boolean",
          "description": "Optional. If set to true, group all input accounts into one."
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ReadCostsRequestOptionsFilters"
          },
          "description": "Optional. A list of filtering options. See [ReadCostsRequestOptionsFilters] for more information on each filter item. \nMultiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc."
        },
        "tagFilters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ReadCostsRequestOptionsFilters"
          },
          "description": "Optional. A list of filtering options specific for tags. \nMultiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc. Discarded when `groupByColumns` field is set or if `groupByMonth` is true."
        }
      }
    },
    "v1GetCostUsageRequestAzureCspOptions": {
      "type": "object",
      "properties": {
        "groupByColumns": {
          "type": "string",
          "description": "Optional. A comma-separated list of columns to aggregate the data into. \nA special value of `none` is also supported, which means query by date or month per account only.\n\nFor example, if you only want the services and location data, you can set this field to `serviceName,location`."
        },
        "groupAccounts": {
          "type": "boolean",
          "description": "Optional. If set to true, group all input projects into one."
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ReadCostsRequestOptionsFilters"
          },
          "description": "Optional. A list of filtering options. See [ReadCostsRequestOptionsFilters] for more information on each filter item. \nMultiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc."
        },
        "tagFilters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ReadCostsRequestOptionsFilters"
          },
          "description": "Optional. A list of filtering options specific for tags. \nMultiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc."
        }
      }
    },
    "v1GetCostUsageRequestAzureOptions": {
      "type": "object",
      "properties": {
        "groupByColumns": {
          "type": "string",
          "description": "Optional. A comma-separated list of columns to aggregate the data into. \nValid values are `accountId`, `serviceName`, `serviceTier`, `location`, `product`, `partNumber`, `resourceGuid`, `offerId`, `consumedService`, `departmentId`, `departmentName`, `resourceGroup`, `enrollment`, `additionalInfo`\nA special value of `none` is also supported, which means query by date or month per account only.\n\nFor example, if you only want the services and location data, you can set this field to `serviceName,location`."
        },
        "groupAccounts": {
          "type": "boolean",
          "description": "Optional. If set to true, group all input subscription into one."
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ReadCostsRequestOptionsFilters"
          },
          "description": "Optional. A list of filtering options. See [ReadCostsRequestOptionsFilters] for more information on each filter item. \nMultiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc."
        },
        "tagFilters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ReadCostsRequestOptionsFilters"
          },
          "description": "Optional. A list of filtering options specific for tags. \nMultiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc."
        }
      }
    },
    "v1GetCostUsageRequestCustomOptions": {
      "type": "object",
      "properties": {
        "groupByColumns": {
          "type": "string",
          "description": "Optional. A comma-separated list of columns to aggregate the data into. \nA special value of `none` is also supported, which means query by date or month per account only.\n\nFor example, if you only want the services and location data, you can set this field to `serviceName,location`."
        },
        "groupAccounts": {
          "type": "boolean",
          "description": "Optional. If set to true, group all input projects into one."
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ReadCostsRequestOptionsFilters"
          },
          "description": "Optional. A list of filtering options. See [ReadCostsRequestOptionsFilters] for more information on each filter item. \nMultiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc."
        }
      }
    },
    "v1GetCostUsageRequestGcpOptions": {
      "type": "object",
      "properties": {
        "groupByColumns": {
          "type": "string",
          "description": "Optional. A comma-separated list of columns to aggregate the data into. \nA special value of `none` is also supported, which means query by date or month per account only.\n\nFor example, if you only want the services and location data, you can set this field to `serviceName,location`."
        },
        "groupAccounts": {
          "type": "boolean",
          "description": "Optional. If set to true, group all input projects into one."
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ReadCostsRequestOptionsFilters"
          },
          "description": "Optional. A list of filtering options. See [ReadCostsRequestOptionsFilters] for more information on each filter item. \nMultiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc."
        },
        "tagFilters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ReadCostsRequestOptionsFilters"
          },
          "description": "Optional. A list of filtering options specific for tags. \nMultiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc."
        },
        "labelFilters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ReadCostsRequestOptionsFilters"
          }
        },
        "projectLabelFilters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ReadCostsRequestOptionsFilters"
          }
        }
      }
    },
    "v1GetCoverageOndemandResponse": {
      "type": "object",
      "properties": {
        "orgId": {
          "type": "string"
        },
        "ondemandData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiOndemandData"
          }
        }
      },
      "title": "Response message for GetCoverageOndemand"
    },
    "v1GetCoverageOptionsResponse": {
      "type": "object",
      "properties": {
        "orgId": {
          "type": "string"
        },
        "optionsData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiOptionsData"
          }
        }
      },
      "title": "Response message for GetCoverageOptions"
    },
    "v1GetCurrentViewResponse": {
      "type": "object",
      "properties": {
        "viewData": {
          "$ref": "#/definitions/coverViewData"
        }
      },
      "title": "Response message for GetCurrentView"
    },
    "v1GetCustomerSubscriptionStatusResponse": {
      "type": "object",
      "properties": {
        "dateRegistered": {
          "type": "string"
        },
        "subscriptionExpiry": {
          "type": "string"
        },
        "daysLeft": {
          "type": "integer",
          "format": "int32"
        },
        "isSubscribed": {
          "type": "boolean"
        },
        "isExpired": {
          "type": "boolean"
        },
        "plan": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        },
        "paymentOption": {
          "type": "string"
        },
        "paymentMethod": {
          "type": "string"
        }
      }
    },
    "v1GetDefaultCostAccessTemplateUrlResponse": {
      "type": "object",
      "properties": {
        "launchUrl": {
          "type": "string",
          "description": "The CloudFormation launch url. Open it in your browser."
        },
        "templateUrl": {
          "type": "string",
          "description": "The latest CloudFormation template. The version is included in the filename."
        },
        "stackName": {
          "type": "string",
          "description": "The default stack name used. Can be modified."
        },
        "principal": {
          "type": "string",
          "description": "The AWS account that will receive the access. Do not change."
        },
        "externalId": {
          "type": "string",
          "description": "The external id for this role. Do not change."
        }
      },
      "description": "Response message for the Admin.GetDefaultCostAccessTemplateUrl rpc."
    },
    "v1GetDiscountRecommendationsRequest": {
      "type": "object",
      "properties": {
        "costGroupId": {
          "type": "string",
          "description": "Required."
        },
        "awsInputs": {
          "$ref": "#/definitions/coverAwsInputs",
          "title": "AWS Inputs"
        },
        "azureInputs": {
          "$ref": "#/definitions/coverAzureInputs",
          "title": "NOT SUPPORTED YET"
        },
        "gcpInputs": {
          "$ref": "#/definitions/coverGcpInputs",
          "title": "NOT SUPPORTED YET"
        }
      },
      "title": "Request message for GetDiscountRecomemendations"
    },
    "v1GetDiscountRecommendationsResponse": {
      "type": "object",
      "properties": {
        "awsRecommendations": {
          "$ref": "#/definitions/coverAwsDiscountRecommendations"
        },
        "azureRecommendations": {
          "$ref": "#/definitions/coverAzureDiscountRecommendations"
        },
        "gcpRecommendations": {
          "$ref": "#/definitions/coverGcpDiscountRecommendations"
        }
      },
      "title": "Response message for GetDiscountRecommendations"
    },
    "v1GetFavoriteViewsResponse": {
      "type": "object",
      "properties": {
        "favorites": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverFavorites"
          }
        }
      },
      "title": "Response message for GetFavoriteViews"
    },
    "v1GetForecastsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/apiBillingGroupForecast"
        }
      },
      "description": "Response message for GetForecasts per billing group."
    },
    "v1GetMemberCostGroupResponse": {
      "type": "object",
      "properties": {
        "costGroups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverMemberCostGroup"
          }
        }
      },
      "title": "Response message for GetMemberCostGroup"
    },
    "v1GetMemberDetailsResponse": {
      "type": "object",
      "properties": {
        "userData": {
          "$ref": "#/definitions/coverUserData"
        }
      },
      "title": "Response message for GetMemberDetails"
    },
    "v1GetMembersResponse": {
      "type": "object",
      "properties": {
        "userData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverUserData"
          }
        }
      },
      "title": "Response message for GetMembers"
    },
    "v1GetMonthOnMonthCostForecastResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiMonthOnMonthCostForecast"
          }
        },
        "timestamp": {
          "type": "string"
        }
      },
      "title": "Response message for GetMonthOnMonthCostForecast"
    },
    "v1GetMonthToDateCostForecastResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "budget": {
          "type": "number",
          "format": "double"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiMonthToDateCostForecast"
          }
        },
        "timestamp": {
          "type": "string"
        }
      },
      "title": "Response message for GetMonthToDateCostForecast"
    },
    "v1GetMonthlyCostForecastResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiMonthlyCostForecast"
          }
        },
        "timestamp": {
          "type": "string"
        }
      },
      "title": "Response message for GetMonthlyCostForecast"
    },
    "v1GetOrgFiscalMonthResponse": {
      "type": "object",
      "properties": {
        "fiscalMonth": {
          "type": "string"
        },
        "dateRegistered": {
          "type": "string"
        }
      }
    },
    "v1GetPayerAccountImportHistoryResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The queried account id."
        },
        "month": {
          "type": "string",
          "description": "The queried UTC month."
        },
        "timestamps": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of timestamps in RFC3339 format with the `T` separator. Example: `2019-10-12T07:20:50.52Z`"
        }
      },
      "description": "Response message for the Cost.GetPayerAccountImportHistory rpc."
    },
    "v1GetPayerProformaReportsResponse": {
      "type": "object",
      "properties": {
        "reports": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ProformaReports"
          }
        }
      },
      "description": "Response message for Cost.GetPayerProformaReports rpc."
    },
    "v1GetPayersResponse": {
      "type": "object",
      "properties": {
        "payers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Response message for GetPayers"
    },
    "v1GetRecommendationResponse": {
      "type": "object",
      "properties": {
        "recommendationData": {
          "$ref": "#/definitions/coverAWSRecommendations"
        }
      }
    },
    "v1GetRecommendationsRequestAwsOptions": {
      "type": "object",
      "properties": {
        "recommendationType": {
          "type": "string",
          "description": "Required. Valid values: 'reservation', 'rightsizing', 'scheduling'. Only 'reservation' is supported for now."
        },
        "type": {
          "type": "string",
          "title": "For recommendationType = 'reservation'. Optional. Valid values: 'combined', 'individual'\nDefault: 'combined'"
        },
        "riServices": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "For recommendationType = 'reservation'. Optional. List of Services [\"AmazonEC2\", \"AmazonRDS\", \"AmazonElastiCache\", \"AmazonES\", \"AmazonRedshift\"]. Default: Empty list."
        },
        "spServices": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "For recommendationType = 'reservation'. Optional. List of Services [\"AmazonECS\", \"AmazonEKS\", \"AWSLambda\"]. Default: Empty list."
        },
        "purchaseEC2SavingsPlan": {
          "type": "boolean",
          "description": "For recommendationType = 'reservation'. Optional. If set to \"true\", recommends EC2 Instance Savings Plan that will cover usage not covered by RI. Default: false."
        },
        "ec2SpProductFamily": {
          "type": "string",
          "description": "For recommendationType = 'reservation'. Optional. Valid values: 'EC2Instance', 'Compute'. Default: 'EC2Instance'."
        },
        "term": {
          "type": "string",
          "description": "For recommendationType = 'reservation'. Optional. Valid values: '1yr', '3yr'. Default: '1yr'."
        },
        "offeringClass": {
          "type": "string",
          "description": "For recommendationType = 'reservation'. Optional. Valid values: 'standard', 'convertible'. Default: 'standard'."
        },
        "paymentOption": {
          "type": "string",
          "description": "For recommendationType = 'reservation'. Optional. Valid values: 'allUpfront', 'partialUpfront', 'noUpfront'. Default: 'allUpfront'."
        },
        "coveragePercentage": {
          "type": "number",
          "format": "double",
          "description": "For recommendationType = 'reservation'. Optional. Percentage of the usage (in NormalizedUnits) to be covered by Reserved Instance or Savings Plan. Default: 100."
        }
      }
    },
    "v1GetRecommendationsResponse": {
      "type": "object",
      "properties": {
        "orgId": {
          "type": "string"
        },
        "awsRecommendations": {
          "$ref": "#/definitions/awsAwsRecommendations"
        }
      },
      "title": "Request message for GetRecommendations"
    },
    "v1GetRegionsResponse": {
      "type": "object",
      "properties": {
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Response message for GetRegions"
    },
    "v1GetReportSummaryResponse": {
      "type": "object",
      "properties": {
        "costGroupId": {
          "type": "string"
        },
        "startDate": {
          "type": "string"
        },
        "endDate": {
          "type": "string"
        },
        "executiveSummary": {
          "$ref": "#/definitions/coverExecutiveSummary"
        },
        "optimizationRecommendationSummary": {
          "$ref": "#/definitions/coverOptimizationRecommendationSummary"
        },
        "savingsSummary": {
          "$ref": "#/definitions/coverSavingsSummary"
        }
      }
    },
    "v1GetRightSizingRecommendationResponse": {
      "type": "object",
      "properties": {
        "resource": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverResourceData"
          }
        }
      },
      "title": "Response message for GetRightSizingRecommendation"
    },
    "v1GetServicesResponse": {
      "type": "object",
      "properties": {
        "services": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Response message for GetServices"
    },
    "v1GetTagsResponse": {
      "type": "object",
      "properties": {
        "tagData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverTagData"
          }
        }
      },
      "title": "Response message for GetTags"
    },
    "v1GetUserDetailsResponse": {
      "type": "object",
      "properties": {
        "userData": {
          "$ref": "#/definitions/coverUserData"
        }
      },
      "title": "Response message for GetUserDetails"
    },
    "v1GetUserProfileResponse": {
      "type": "object",
      "properties": {
        "hasCreatedProfile": {
          "type": "boolean"
        }
      }
    },
    "v1GetUtilizationResponse": {
      "type": "object",
      "properties": {
        "orgId": {
          "type": "string"
        },
        "utilizationData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiUtilizationData"
          }
        }
      },
      "title": "Response message for GetUtilization"
    },
    "v1GetViewsResponse": {
      "type": "object",
      "properties": {
        "viewList": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverViewList"
          }
        }
      },
      "title": "Response message for GetViews"
    },
    "v1ImportCurFilesRequest": {
      "type": "object",
      "properties": {
        "month": {
          "type": "string",
          "description": "Optional. The UTC month to import. If empty, it defaults to the current month. Format is `yyyymm`. For example, June 2021 will be `202106`."
        },
        "filter": {
          "type": "string",
          "description": "Optional. A comma-separated list of management accounts to import. If empty, all CURs associated with all your management accounts will be imported."
        }
      },
      "description": "Request message for the Cost.ImportCurFiles rpc."
    },
    "v1InviteMemberRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isResend": {
          "type": "boolean"
        },
        "inviteAsAdmin": {
          "type": "boolean"
        }
      },
      "title": "Request message for InviteMember"
    },
    "v1InviteMemberResponse": {
      "type": "object",
      "properties": {
        "email": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Response message for InviteMember"
    },
    "v1InvoiceServiceDiscounts": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Service discount id."
        },
        "name": {
          "type": "string",
          "description": "Service discount name."
        },
        "description": {
          "type": "string",
          "description": "Service discount description."
        },
        "created": {
          "type": "string",
          "description": "create timestamp."
        },
        "updated": {
          "type": "string",
          "description": "update timestamp."
        }
      },
      "description": "Streaming response message for the InvoiceServiceDiscounts rpc."
    },
    "v1IpFilter": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "IP filter item id. Note that this name is transcient and is not fixed. However, you can use any of its permutations to endpoints that accept it, such as the `DELETE:/iam/v?/ipfilters/{id}` endpoint, without issues."
        },
        "scope": {
          "type": "string",
          "description": "Can be `global`, `rootuser`, or `subuser`."
        },
        "target": {
          "type": "string",
          "description": "The target of the filter. If global scope, this is usually empty. Rootuser name for rootuser scope, and subuser name for subuser scope. For subuser targets, format is `rootuser/subuser`."
        },
        "type": {
          "type": "string",
          "description": "The type of IP filter. It could be `whitelist` or `blacklist`."
        },
        "value": {
          "type": "string",
          "description": "The IP filter value. Should be in CIDR format."
        }
      }
    },
    "v1ListAccountAccessRequest": {
      "type": "object",
      "description": "Request message for the ListAccountAccess rpc."
    },
    "v1ListAccountGroupsResponse": {
      "type": "object",
      "properties": {
        "accountGroups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiAccountGroup"
          }
        }
      },
      "description": "Response message for the Admin.ListAccountGroups rpc."
    },
    "v1ListAccountUsageRequest": {
      "type": "object",
      "properties": {
        "startDate": {
          "type": "string"
        },
        "endDate": {
          "type": "string"
        }
      },
      "description": "Request message for the RestoreAccountUsage rpc."
    },
    "v1ListAssetsFilters": {
      "type": "object",
      "properties": {
        "andFilters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1ListAssetsRequest": {
      "type": "object",
      "properties": {
        "costGroupId": {
          "type": "string",
          "description": "Required. Cost Group Id."
        },
        "startMonth": {
          "type": "string",
          "description": "Optional. If not set, current month will be used. Format: `yyyymm`."
        },
        "endMonth": {
          "type": "string",
          "description": "Optional. If not set, current month will be used. Format: `yyyymm`."
        },
        "withRecommendation": {
          "type": "boolean",
          "title": "Optional. If true, returns only all assets with recommendation"
        },
        "awsOptions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ListAssetsFilters"
          },
          "description": "Optional. For AWS-specific filter options."
        },
        "awsPropertiesOptions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ListAssetsFilters"
          },
          "description": "Optional. For AWS-specific properties filter options."
        }
      },
      "description": "Request message for the Asset.ListResources rpc."
    },
    "v1ListAwsDailyRunHistoryRequest": {
      "type": "object",
      "properties": {
        "month": {
          "type": "string",
          "description": "Optional. If empty, defaults to current UTC month. Format: yyyymm."
        },
        "groupId": {
          "type": "string",
          "description": "Optional. If not empty, query for this group. At the moment, only `billingInternalId`s are supported."
        }
      },
      "description": "Request message for the Billing.ListAwsCalculationHistory rpc."
    },
    "v1ListBudgetsRequest": {
      "type": "object",
      "properties": {
        "includeSpendAndForecast": {
          "type": "boolean",
          "title": "Optional. Set to true to include monthly spending and forecast within the budget period"
        },
        "costGroup": {
          "type": "string",
          "description": "Optional. Cost group ID. Return budgets under this specific cost group."
        }
      }
    },
    "v1ListBudgetsResponse": {
      "type": "object",
      "properties": {
        "budgetData": {
          "$ref": "#/definitions/coverBudgetData"
        }
      }
    },
    "v1ListCalculationsHistoryAwsResponse": {
      "type": "object",
      "properties": {
        "operations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protosOperation"
          }
        }
      },
      "description": "AWS-specific response message for the Cost.ListCalculationsHistory rpc. Should be compatible with the Operations API."
    },
    "v1ListCalculationsHistoryResponse": {
      "type": "object",
      "properties": {
        "aws": {
          "$ref": "#/definitions/v1ListCalculationsHistoryAwsResponse"
        }
      },
      "description": "Response message for the Cost.ListCalculationsHistory rpc."
    },
    "v1ListCalculationsSchedulesResponse": {
      "type": "object",
      "properties": {
        "schedules": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CalculationsSchedule"
          }
        }
      },
      "description": "Response message for the Cost.ListCalculationsSchedules rpc."
    },
    "v1ListCalculatorRunningAccountsResponse": {
      "type": "object",
      "properties": {
        "aws": {
          "$ref": "#/definitions/ListCalculatorRunningAccountsResponseAwsRunningAccount",
          "description": "AWS-specific entry."
        }
      },
      "description": "Response message for the Cost.ListCalculatorRunningAccounts rpc."
    },
    "v1ListCostFilters": {
      "type": "object",
      "properties": {
        "filterId": {
          "type": "string",
          "description": "Required. Filter Id."
        },
        "filterName": {
          "type": "string",
          "description": "Required. Filter Name."
        },
        "vendor": {
          "type": "string",
          "description": "Required. Vendor."
        },
        "groupId": {
          "type": "string",
          "description": "Optional. If set, reads the usage-based cost details of this group. Only valid for Ripple users. Implied as the parent billing group for Wave(Pro) users.\n\nFor AWS Ripple, only billing internal ids are supported at the moment. Overriden when `accountId` is set to anything other than `*`. Set this and `accountId` to `*` to read the usage-based cost details of the whole organization. Optional for AWS Wave(Pro)."
        },
        "accountId": {
          "type": "string",
          "description": "Optional. You can set it to a single account or a comma-separated list of accounts.\n\nFor AWS, setting this will override `groupId`. Set this and `groupId` to `*` to read the usage-based cost details of the whole organization."
        },
        "awsOptions": {
          "$ref": "#/definitions/v1ReadCostsRequestAwsOptions",
          "description": "Optional. Valid only for the `aws` vendor. AWS-specific options."
        }
      },
      "description": "Response message for the ListCostFilters rpc."
    },
    "v1ListCostFiltersResponse": {
      "type": "object",
      "properties": {
        "costFilters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ListCostFilters"
          }
        }
      },
      "description": "Response message for the ListCostFilters rpc."
    },
    "v1ListExchangeRatesResponse": {
      "type": "object",
      "properties": {
        "month": {
          "type": "string",
          "description": "The Month."
        },
        "common": {
          "$ref": "#/definitions/rippleCommonExchangeRate",
          "description": "The common exchange rate."
        },
        "billingGroup": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/rippleBillingGroupExchangeRate"
          },
          "description": "The billing group exchange rate."
        },
        "payer": {
          "$ref": "#/definitions/rippleVendorPayerExchangeRate",
          "description": "The payer exchange rate."
        }
      },
      "description": "Response message for the ListExchangeRates rpc."
    },
    "v1ListFeesRequest": {
      "type": "object",
      "properties": {
        "month": {
          "type": "string"
        }
      },
      "description": "Request message for the ListFees rpc."
    },
    "v1ListIdentityProvidersResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ListIdentityProvidersResponseIdentityProvider"
          }
        }
      },
      "description": "Response message for the Iam.ListIdentityProviders rpc."
    },
    "v1ListInvoiceRequest": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "Optional. billing internal id."
        }
      },
      "description": "Request message for the ListInvoice rpc."
    },
    "v1ListInvoiceResponse": {
      "type": "object",
      "properties": {
        "billingInternalId": {
          "type": "string",
          "description": "The billing internal id."
        },
        "BillingGroupId": {
          "type": "string",
          "description": "The billing group id."
        },
        "BillingGroupName": {
          "type": "string",
          "description": "The billing group name."
        },
        "date": {
          "type": "string",
          "description": "The date."
        }
      },
      "description": "Response message for the ListInvoice rpc."
    },
    "v1ListInvoiceServiceDiscountsRequest": {
      "type": "object",
      "description": "Request message for the ListInvoiceServiceDiscounts rpc."
    },
    "v1ListNotificationChannelsResponse": {
      "type": "object",
      "properties": {
        "channels": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiNotificationChannel"
          }
        }
      },
      "description": "Response message for the Admin.ListNotificationChannels rpc."
    },
    "v1ListNotificationsResponse": {
      "type": "object",
      "properties": {
        "notifications": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/blueapiapiNotification"
          }
        }
      },
      "description": "Response message for the Admin.ListNotifications rpc."
    },
    "v1ListPermissionsResponse": {
      "type": "object",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiPermission"
          }
        }
      },
      "description": "Response message for the Iam.ListPermissions rpc."
    },
    "v1ListRecommendationResponse": {
      "type": "object",
      "properties": {
        "recommendationId": {
          "type": "string"
        },
        "recommendation": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "estimatedMonthlySaving": {
          "type": "number",
          "format": "double"
        },
        "estimatedMonthlyCost": {
          "type": "number",
          "format": "double"
        },
        "scoring": {
          "type": "string"
        },
        "vendor": {
          "type": "string"
        },
        "optimizationStatus": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        },
        "costgroupId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ListRolesResponse": {
      "type": "object",
      "properties": {
        "roles": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiRole"
          }
        }
      },
      "description": "Response message for the Iam.ListRoles rpc."
    },
    "v1ListUserRoleMappingsResponse": {
      "type": "object",
      "properties": {
        "userRoleMappings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiUserRoleMapping"
          }
        }
      },
      "description": "Response message for the Iam.ListUserRoleMappings rpc."
    },
    "v1MFAUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        }
      }
    },
    "v1MFAUsersInfoResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MFAUser"
          }
        }
      },
      "description": "Response message for the MFAUsersInfoResponse rpc."
    },
    "v1MapRole": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "role": {
          "type": "string"
        }
      }
    },
    "v1MarkAsExecutedResponse": {
      "type": "object"
    },
    "v1ModifyResourceTypeResponse": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "region": {
          "type": "string"
        }
      },
      "title": "Response message for ModifyResourceType"
    },
    "v1OnboardOrgRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "orgId": {
          "type": "string"
        }
      },
      "title": "Request message for OnboardOrg"
    },
    "v1OnboardOrgResponse": {
      "type": "object",
      "properties": {
        "userData": {
          "$ref": "#/definitions/coverUserData"
        }
      },
      "title": "Response message for OnboardOrg"
    },
    "v1OptimizationHistoryResponse": {
      "type": "object",
      "properties": {
        "costGroupSpendingData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverCostGroupSpendingData"
          }
        },
        "noOfExecutedRecommendation": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverNoOfExecutedRecommendation"
          }
        },
        "executedRecommendationDetails": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverExecutedRecommendationDetails"
          }
        }
      }
    },
    "v1PartnerToken": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "v1Preference": {
      "type": "object"
    },
    "v1ProcessAuth0UserRequest": {
      "type": "object",
      "properties": {
        "source": {
          "type": "string"
        },
        "customerId": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "subuserId": {
          "type": "string"
        }
      },
      "title": "Request message for AddUserFromAuth0asRoot rpc"
    },
    "v1ProcessAuth0UserResponse": {
      "type": "object",
      "properties": {
        "isAuthorized": {
          "type": "boolean"
        }
      },
      "title": "Response message wrapper for adding user from Auth0 as root"
    },
    "v1ProformaCur": {
      "type": "object",
      "properties": {
        "orgId": {
          "type": "string"
        },
        "payerId": {
          "type": "string"
        },
        "billingInternalId": {
          "type": "string"
        },
        "reportName": {
          "type": "string"
        },
        "bucketName": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "timeCreated": {
          "type": "string"
        }
      }
    },
    "v1ProformaReports": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "payer account id"
        },
        "billingInternalId": {
          "type": "string",
          "title": "billing group internal id"
        },
        "billingGroupName": {
          "type": "string",
          "title": "billing group name"
        },
        "bucketName": {
          "type": "string",
          "title": "s3 bucket name"
        },
        "prefix": {
          "type": "string",
          "title": "s3 report prefix"
        },
        "reportName": {
          "type": "string",
          "title": "report name"
        },
        "roleArn": {
          "type": "string",
          "title": "role arn"
        }
      }
    },
    "v1ProxyCreateCompletionRequest": {
      "type": "object",
      "properties": {
        "params": {
          "type": "object"
        }
      },
      "description": "Request message for the ProxyCreateCompletion rpc."
    },
    "v1ProxyCreateCompletionResponse": {
      "type": "object",
      "properties": {
        "line": {
          "type": "string"
        }
      },
      "description": "Response message for the ProxyCreateCompletion rpc."
    },
    "v1PublishViewRequest": {
      "type": "object",
      "properties": {
        "viewId": {
          "type": "string",
          "description": "Required. View Id."
        }
      },
      "title": "Request message for PublishView"
    },
    "v1PublishViewResponse": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      },
      "title": "Response message for PublishView"
    },
    "v1ReadAdjustmentsRequestAwsOptions": {
      "type": "object",
      "properties": {
        "toCurrency": {
          "type": "string",
          "description": "Optional. Set to US dollars (USD) by default (AWS CUR's default currency). You can set it to the desired three-letter currency symbol (i.e. JPY, EUR, GBP), in which case, it will use the latest exchange rates provided by https://fixer.io. If you prefer a custom exchange rate, you can append the rate to the currency's three-letter symbol. For example, `JPY:110.622` for the Japanese Yen. Note that the exchange rate should be against the US dollar (USD)."
        }
      }
    },
    "v1ReadBudgetAlertsRequest": {
      "type": "object",
      "properties": {
        "fieldMask": {
          "type": "string",
          "description": "Optional."
        }
      },
      "description": "Request message for the ReadBudgetAlerts rpc."
    },
    "v1ReadCostAttributesRequestAwsOptions": {
      "type": "object",
      "properties": {
        "dimensions": {
          "type": "string",
          "description": "Optional. A comma-separated list of dimensions to query. Valid values are `productCode`, `serviceCode`, `region`, `zone`, `usageType`, `instanceType`, `operation`, `invoiceId`, `description`, `resourceId`, `tags`, and `costCategories`. Sequence doesn't matter. An empty value implies all attributes will be returned."
        }
      }
    },
    "v1ReadCostsRequestAwsOptions": {
      "type": "object",
      "properties": {
        "groupByColumns": {
          "type": "string",
          "description": "Optional. A comma-separated list of columns to aggregate the data into. Valid values are `productCode`, `serviceCode`, `region`, `zone`, `usageType`, `instanceType`, `operation`, `invoiceId`, `description`, and `resourceId`. A special value of `none` is also supported, which means query by date or month per account only.\n\nFor example, if you only want the services and region data, you can set this field to `productCode,region`. Your input sequence doesn't matter (although the sequence above is recommended) as the actual sequence is already fixed in the return data (see the definition in https://github.com/alphauslabs/blueapi/blob/main/api/aws/cost.proto), which is generic to specific, top to bottom. Invalid values are discarded. Excluded columns will be empty."
        },
        "groupByMonth": {
          "type": "boolean",
          "description": "Optional. If set to true, return data grouped by month within the date range. If you want data that is grouped per account per month, set this to `true`, then set `groupByColumns` to `none`. You can also use `groupByColumns` while setting this to true."
        },
        "groupAccounts": {
          "type": "boolean",
          "description": "Optional. If set to true, group all input accounts into one."
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ReadCostsRequestAwsOptionsFilters"
          },
          "description": "Optional. A list of filtering options. See [ReadCostsRequestAwsOptionsFilters] for more information on each filter item. Multiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc."
        },
        "tagFilters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ReadCostsRequestAwsOptionsTagFilters"
          },
          "description": "Optional. A list of filtering options specific for tags. Multiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc. Discarded when `groupByColumns` field is set or if `groupByMonth` is true."
        },
        "includeTags": {
          "type": "boolean",
          "description": "Optional. If set to true, stream will include resource tags. Discarded when `groupByColumns` field is set to `none`."
        },
        "includeCostCategories": {
          "type": "boolean",
          "description": "Optional. If set to true, stream will include resource cost category information. Discarded when `groupByColumns` field is set to `none`."
        },
        "toCurrency": {
          "type": "string",
          "description": "Optional. Set to US dollars (USD) by default (AWS CUR's default currency). You can set it to the desired three-letter currency symbol (i.e. JPY, EUR, GBP), in which case, it will use the latest exchange rates provided by https://fixer.io. If you prefer a custom exchange rate, you can append the rate to the currency's three-letter symbol. For example, `JPY:110.622` for the Japanese Yen. Note that the exchange rate should be against the US dollar (USD)."
        },
        "forceLatest": {
          "type": "boolean",
          "description": "Optional. If set to true, always get the up-to-date calculation results. This data isn't necessarily in-sync with your invoice data as AWS could still have updated your CUR files even after you created your invoices. By default, returned data are those that are always in-sync with your invoices.\n\nThis field is discarded for Wave(Pro) users. You will always get the latest data that is in-sync with your invoices."
        },
        "noCache": {
          "type": "boolean",
          "description": "If true, force API to not use cached data."
        },
        "includeAdjustments": {
          "type": "boolean",
          "description": "WORK-IN-PROGRESS: Optional. If set to true, include adjustment entries in the output. Adjustments include fees, discounts, credits, etc. The output here is the same as the ReadAdjustments API."
        }
      },
      "description": "AWS-specific options for ReadCostsRequest."
    },
    "v1ReadCostsRequestAwsOptionsFilters": {
      "type": "object",
      "properties": {
        "andFilters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "A map of \"key:value\" column filters. Dependent on `groupByColumns` and/or `groupByMonth`. The key indicates the column name while the value is the filter value prefixed by either \"eq:\" (equal), \"re:\" (regular expressions based on https://github.com/google/re2), or \"!re:\" (reverse \"re:\"). No prefix is the same as \"eq:\". Multiple map items will use the logical 'and' operator, e.g. mapfilter1 \u0026\u0026 mapfilter2 \u0026\u0026 mapfilter3, etc.\n\nFor example, if you like to filter `productCode` to return only `AmazonEC2`, set to `{\"productCode\":\"eq:AmazonEC2\"}` or `{\"productCode\":\"AmazonEC2\"}`. You can also use a regular expression like `{\"productCode\":\"re:AmazonEC2|AmazonRDS\"}`, which means return all AmazonEC2 or AmazonRDS lineitems. Or reverse regexp, such as `{\"productCode\":\"!re:^AmazonEC2$\"}`, which means return all items except `AmazonEC2`."
    },
    "v1ReadCostsRequestAwsOptionsTagFilters": {
      "type": "object",
      "properties": {
        "andFilters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "A map of \"key:value\" tag filters. The key indicates the tag key while the value is the filter tag value which can be prefixed by either \"eq:\" (equal), \"re:\" (regular expressions based on https://github.com/google/re2), or \"!re:\" (reverse \"re:\"). No prefix is the same as \"eq:\". Multiple map items will use the logical 'and' operator, e.g. mapfilter1 \u0026\u0026 mapfilter2 \u0026\u0026 mapfilter3, etc.\n\nFor example, if you want to query lineitems with the tag `project:MY_PROJECT`, set to `{\"project\":\"MY_PROJECT\"}`. You can also use regular expressions for tag values, such as `{\"name\":\"re:[A-Za-z0-9]*\"}`."
    },
    "v1ReadCostsRequestAzureOptions": {
      "type": "object",
      "properties": {
        "groupByColumns": {
          "type": "string",
          "description": "Optional. A comma-separated list of columns to aggregate the data into. Valid values are `serviceName`, `productName`, `region`, `chargeType`, `description`, `billableQuantity`, `effectiveUnitPrice`, `timeInterval`, `billingType`, `alternateId` and `domainName`. A special value of `none` is also supported, which means query by date or month per account only.\n\nFor example, if you only want the services and region data, you can set this field to `serviceName,region`. Your input sequence doesn't matter (although the sequence above is recommended) as the actual sequence is already fixed in the return data (see the definition in https://github.com/alphauslabs/blueapi/blob/main/api/azure/cost.proto), which is generic to specific, top to bottom. Invalid values are discarded. Excluded columns will be empty."
        },
        "groupByMonth": {
          "type": "boolean",
          "description": "Optional. If set to true, return data grouped by month within the date range. If you want data that is grouped per account per month, set this to `true`. You can also use `groupByColumns` while setting this to true."
        },
        "noCache": {
          "type": "boolean",
          "description": "If true, force API to not use cached data."
        }
      },
      "description": "Azure-specific options for ReadCostsRequest."
    },
    "v1ReadCostsRequestGcpOptions": {
      "type": "object",
      "properties": {
        "groupByColumns": {
          "type": "string",
          "description": "Optional. A comma-separated list of columns to aggregate the data into. Valid values are `service`, `sku`, `region`, `zone`, and `usageUnit`. A special value of `none` is also supported, which means query by date or month per account only."
        },
        "groupByMonth": {
          "type": "boolean",
          "description": "Optional. If set to true, return data grouped by month within the date range. If you want data that is grouped per account per month, set this to `true`, then set `groupByColumns` to `none`."
        },
        "groupAccounts": {
          "type": "boolean",
          "description": "Optional. If set to true, group all input accounts into one. Valid only if `groupByMonth` is true."
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ReadCostsRequestGcpOptionsFilters"
          },
          "description": "Optional. A list of filtering options. See [ReadCostsRequestGcpOptionsFilters] for more information on each filter item. Multiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc."
        },
        "includeInvoiceMonth": {
          "type": "boolean",
          "description": "Optional. If set to true, stream will include invoice month. Discarded when `groupByColumns` field is set to `none`.\n\nThe last usage occurrence of invoice month based on endTime is set to endTime.\nFor example, (Assumption: Last usage start time 2022-02-01 01:00:00 UTC) If you set to \"endTime:20210131\", automatically set to \"endTime:20220101\". Ignored if the batch calculation for invoice month has not been completed."
        },
        "includeCredits": {
          "type": "boolean",
          "description": "Optional. If set to true, stream will include credits{\"creditsType\",\"creditsName\"}. Discarded when `groupByColumns` field is set to `none`."
        },
        "rounding": {
          "type": "boolean",
          "description": "Optional. If set to true, round the cost data to a rounded format. It will be rounded off in the unit specified by `groupByColumns`."
        },
        "noCache": {
          "type": "boolean",
          "description": "If true, force API to not use cached data."
        }
      },
      "description": "GCP-specific options for ReadCostsRequest."
    },
    "v1ReadCostsRequestGcpOptionsFilters": {
      "type": "object",
      "properties": {
        "andFilters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "A map of \"key:value\" column filters. Dependent on `groupByColumns` and/or `groupByMonth`. The key indicates the column name while the value is the filter value prefixed by either \"eq:\" (equal), \"re:\" (regular expressions based on https://github.com/google/re2), or \"!re:\" (reverse \"re:\"). No prefix is the same as \"eq:\". Multiple map items will use the logical 'and' operator, e.g. mapfilter1 \u0026\u0026 mapfilter2 \u0026\u0026 mapfilter3, etc.\n\nFor example, if you like to filter `service` to return only `Compute Engine`, set to `{\"service\":\"eq:Compute Engine\"}` or `{\"service\":\"Compute Engine\"}`. You can also use a regular expression like `{\"service\":\"re:Compute Engine|Cloud Storage\"}`, which means return all Compute Engine or Cloud Storage lineitems. Or reverse regexp, such as `{\"service\":\"!re:^Cloud Engine$\"}`, which means return all items except `Cloud Engine`."
    },
    "v1ReadCostsRequestOptionsFilters": {
      "type": "object",
      "properties": {
        "andFilters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "A map of \"key:value\" column filters. Dependent on `groupByColumns` and/or `groupByMonth`. The key indicates the column name while the value is the filter value prefixed by either \"eq:\" (equal), \"re:\" (regular expressions based on https://github.com/google/re2), or \"!re:\" (reverse \"re:\"). No prefix is the same as \"eq:\". Multiple map items will use the logical 'and' operator, e.g. mapfilter1 \u0026\u0026 mapfilter2 \u0026\u0026 mapfilter3, etc.\n\nFor example, if you like to filter `productCode` to return only `AmazonEC2`, set to `{\"productCode\":\"eq:AmazonEC2\"}` or `{\"productCode\":\"AmazonEC2\"}`. You can also use a regular expression like `{\"productCode\":\"re:AmazonEC2|AmazonRDS\"}`, which means return all AmazonEC2 or AmazonRDS lineitems. Or reverse regexp, such as `{\"productCode\":\"!re:^AmazonEC2$\"}`, which means return all items except `AmazonEC2`."
    },
    "v1ReadTagCostsRequestAwsOptions": {
      "type": "object",
      "properties": {
        "tagId": {
          "type": "string",
          "description": "Optional. If set, only return data for this tagId."
        },
        "groupByColumns": {
          "type": "string",
          "description": "Optional. A comma-separated list of columns to aggregate the data into. Valid values are `productCode`, `serviceCode`, `region`, `zone`, `usageType`, `instanceType`, `operation`, `invoiceId`, `description`, and `resourceId`. A special value of `none` is also supported, which means query by date or month per account only.\n\nFor example, if you only want the services and region data, you can set this field to `productCode,region`. Your input sequence doesn't matter (although the sequence above is recommended) as the actual sequence is already fixed in the return data (see the definition in https://github.com/alphauslabs/blueapi/blob/main/api/aws/cost.proto), which is generic to specific, top to bottom. Invalid values are discarded. Excluded columns will be empty."
        },
        "groupByMonth": {
          "type": "boolean",
          "description": "Optional. If set to true, return data grouped by month within the date range. If you want data that is grouped per account per month, set this to `true`, then set `groupByColumns` to `none`. You can also use `groupByColumns` while setting this to true."
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ReadCostsRequestAwsOptionsFilters"
          },
          "description": "Optional. A list of filtering options. See [ReadCostsRequestAwsOptionsFilters] for more information on each filter item. Multiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc."
        },
        "tagFilters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ReadTagCostsRequestAwsOptionsTagFilters"
          },
          "description": "Optional. A list of filtering options specific for tags. Multiple filter items will use the logical 'or' operator, e.g. filter1 || filter2 || filter3, etc. Discarded when `groupByColumns` field is set or if `groupByMonth` is true."
        },
        "includeTags": {
          "type": "boolean",
          "description": "Optional. If set to true, stream will include resource tags. Discarded when `groupByColumns` field is set to `none`."
        },
        "includeCostCategories": {
          "type": "boolean",
          "description": "Optional. If set to true, stream will include resource cost category information. Discarded when `groupByColumns` field is set to `none`."
        },
        "toCurrency": {
          "type": "string",
          "description": "Optional. Set to US dollars (USD) by default (AWS CUR's default currency). You can set it to the desired three-letter currency symbol (i.e. JPY, EUR, GBP), in which case, it will use the latest exchange rates provided by https://fixer.io. If you prefer a custom exchange rate, you can append the rate to the currency's three-letter symbol. For example, `JPY:110.622` for the Japanese Yen. Note that the exchange rate should be against the US dollar (USD)."
        },
        "forceLatest": {
          "type": "boolean",
          "description": "Optional. If set to true, always get the up-to-date calculation results. This data isn't necessarily in-sync with your invoice data as AWS could still have updated your CUR files even after you created your invoices. By default, returned data are those that are always in-sync with your invoices.\n\nThis field is discarded for Wave(Pro) users. You will always get the latest data that is in-sync with your invoices."
        },
        "noCache": {
          "type": "boolean",
          "description": "If true, force API to not use cached data."
        },
        "tagIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. If set, only return data list tags."
        }
      }
    },
    "v1ReadTagCostsRequestAwsOptionsTagFilters": {
      "type": "object",
      "properties": {
        "andFilters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "A map of \"key:value\" tag filters. The key indicates the tag key while the value is the filter tag value which can be prefixed by either \"eq:\" (equal), \"re:\" (regular expressions based on https://github.com/google/re2), or \"!re:\" (reverse \"re:\"). No prefix is the same as \"eq:\". Multiple map items will use the logical 'and' operator, e.g. mapfilter1 \u0026\u0026 mapfilter2 \u0026\u0026 mapfilter3, etc.\n\nFor example, if you want to query lineitems with the tag `project:MY_PROJECT`, set to `{\"project\":\"MY_PROJECT\"}`. You can also use regular expressions for tag values, such as `{\"name\":\"re:[A-Za-z0-9]*\"}`."
    },
    "v1RegisterAccounts": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Optional.\nIf enabled, any additional accounts will be automatically enrolled into the billing group.\nIf disabled, register the account manually.\n\nFor GCP, Register projectId under the specific Sub billing account.\nFor AWS, Register accountId under the specific payer account into the billing group"
        },
        "accountId": {
          "type": "string",
          "description": "Optional. AccountId to be used for registration into the billing group."
        }
      },
      "title": "Register Accounts definition"
    },
    "v1RegisterDataAccessRequest": {
      "type": "object",
      "properties": {
        "vendor": {
          "type": "string",
          "title": "Vendor (Azure/GCP)"
        },
        "target": {
          "type": "string",
          "title": "Project Id for GCP, Account Id for Azure"
        },
        "accountType": {
          "type": "string",
          "title": "Account type (payer/linked)"
        },
        "gcpOptions": {
          "$ref": "#/definitions/coverGcpOptions",
          "title": "GCP Options. Specific for GCP"
        },
        "azureOptions": {
          "$ref": "#/definitions/coverAzureOptions",
          "title": "Azure Options. Specific for Azure"
        },
        "awsOptions": {
          "$ref": "#/definitions/apicoverAwsOptions",
          "title": "Aws Options. Specific for Aws"
        }
      },
      "description": "Request message for Register Data Access. For azure and gcp."
    },
    "v1RegisterNewUserRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "title": "required email"
        },
        "password": {
          "type": "string",
          "title": "required password"
        },
        "name": {
          "type": "string",
          "title": "required user Name"
        },
        "company": {
          "type": "string",
          "title": "required company name"
        },
        "role": {
          "type": "string",
          "title": "required company role"
        },
        "amount": {
          "type": "string",
          "title": "optional company monthly cloud usage"
        },
        "intention": {
          "type": "string",
          "title": "optional intention"
        }
      },
      "title": "Request message for RegisterNewUser"
    },
    "v1RegisterNewUserResponse": {
      "type": "object",
      "properties": {
        "isAuthorized": {
          "type": "boolean"
        }
      }
    },
    "v1RemoveCostGroupMemberResponse": {
      "type": "object",
      "properties": {
        "costGroupId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      },
      "title": "Response message for RemoveCostGroupMember"
    },
    "v1RemoveFavoriteRequest": {
      "type": "object",
      "properties": {
        "viewId": {
          "type": "string",
          "description": "Required. View Id."
        }
      },
      "title": "Request message for RemoveFavorite"
    },
    "v1RemoveFavoriteResponse": {
      "type": "object",
      "properties": {
        "viewId": {
          "type": "string"
        }
      },
      "title": "Response message for RemoveFavorite"
    },
    "v1RemoveSideMenuFavoriteResponse": {
      "type": "object",
      "properties": {
        "viewId": {
          "type": "string"
        }
      },
      "title": "Response message for RemoveSideMenuFavorite"
    },
    "v1ResetPasswordRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "description": "Required. UserId."
        }
      },
      "title": "Request message for ResetPassword"
    },
    "v1ResetPasswordResponse": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        }
      },
      "title": "Response message for ResetPassword"
    },
    "v1ResetUserPasswordRequest": {
      "type": "object",
      "properties": {
        "previousPassword": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        }
      },
      "title": "Request message for ResetUserPassword"
    },
    "v1ResetUserPasswordResponse": {
      "type": "object",
      "properties": {
        "userData": {
          "$ref": "#/definitions/coverUserData"
        }
      },
      "title": "Response message for ResetUserPassword"
    },
    "v1ResolveAWSMarketplaceTokenForOnboardingRequest": {
      "type": "object",
      "properties": {
        "registrationToken": {
          "type": "string"
        }
      }
    },
    "v1ResolveAWSMarketplaceTokenForOnboardingResponse": {
      "type": "object",
      "properties": {
        "isAllowedToOnboard": {
          "type": "boolean"
        },
        "customerId": {
          "type": "string"
        }
      }
    },
    "v1ResolveCostGroupCombinationsResponse": {
      "type": "object",
      "properties": {
        "costGroupId": {
          "type": "string"
        },
        "accounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apicoverAccount"
          }
        }
      }
    },
    "v1Resource": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "title": "Format is `yyyy-mm`"
        },
        "orgId": {
          "type": "string",
          "title": "Organization ID"
        },
        "vendor": {
          "type": "string",
          "description": "Only `aws` is supported for now."
        },
        "account": {
          "type": "string",
          "title": "Resource owner account"
        },
        "service": {
          "type": "string",
          "description": "Only `AmazonEC2` is supported for now."
        },
        "resourceId": {
          "type": "string",
          "title": "Resource unique identifier"
        },
        "resourceType": {
          "type": "string",
          "title": "Only `AWS::EC2::Instance` is supported for now"
        },
        "cost": {
          "type": "number",
          "format": "double",
          "description": "Cost incurred for the resource on specified month."
        },
        "properties": {
          "type": "string",
          "title": "Format: JSON String"
        },
        "recommendation": {
          "type": "string",
          "title": "Format: JSON String"
        }
      }
    },
    "v1ResourceAccount": {
      "type": "object",
      "properties": {
        "payerId": {
          "type": "string"
        },
        "customerId": {
          "type": "string"
        },
        "registered": {
          "type": "boolean"
        }
      }
    },
    "v1RestoreAccountUsageRequest": {
      "type": "object",
      "properties": {
        "allocationId": {
          "type": "string",
          "description": "Required. The account usage to restore."
        }
      },
      "description": "Request message for the RestoreAccountUsage rpc."
    },
    "v1RestoreFeeRequest": {
      "type": "object",
      "properties": {
        "feeId": {
          "type": "string",
          "description": "Required. The fee to restore."
        }
      },
      "description": "Request message for the RestoreFee rpc."
    },
    "v1RestoreSavingsRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Required. The item to restore."
        }
      },
      "description": "Request message for the RestoreSavings rpc."
    },
    "v1SaveNotificationSettingsRequest": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Required. Enable or disable notifications globally."
        },
        "defaultChannel": {
          "type": "string",
          "description": "Optional. If non-empty, set this notification channel id as the default channel."
        }
      },
      "description": "Request message for the Admin.SaveNotificationSettings rpc."
    },
    "v1SavingsDetails": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "orgId": {
          "type": "string"
        },
        "vendor": {
          "type": "string"
        },
        "account": {
          "type": "string"
        },
        "month": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "arn": {
          "type": "string"
        },
        "productCode": {
          "type": "string"
        },
        "offerClass": {
          "type": "string"
        },
        "ondemand": {
          "type": "number",
          "format": "double"
        },
        "effectiveCost": {
          "type": "number",
          "format": "double"
        },
        "savings": {
          "type": "number",
          "format": "double"
        },
        "splitStatus": {
          "type": "string"
        },
        "isAllocated": {
          "type": "boolean"
        },
        "isApplied": {
          "type": "boolean"
        },
        "source": {
          "type": "string"
        },
        "lastUpdate": {
          "type": "string"
        }
      },
      "description": "Response message for ListSavings, RestoreSavings, SimulateSavings rpc."
    },
    "v1SetCostGroupAnomalyOptionsResponse": {
      "type": "object",
      "properties": {
        "costGroupId": {
          "type": "string"
        },
        "anomalyOptions": {
          "$ref": "#/definitions/coverAnomalyOptions"
        }
      }
    },
    "v1SetCostGroupEventIndicatorResponse": {
      "type": "object",
      "properties": {
        "costGroupId": {
          "type": "string"
        },
        "eventIndicator": {
          "$ref": "#/definitions/coverEventIndicator"
        }
      }
    },
    "v1SetOrgFiscalMonthRequest": {
      "type": "object",
      "properties": {
        "fiscalMonth": {
          "type": "string",
          "title": "Required. Fiscal month. Valid inputs are: \"01 - 12\""
        }
      }
    },
    "v1SetOrgFiscalMonthResponse": {
      "type": "object",
      "properties": {
        "fiscalMonth": {
          "type": "string"
        }
      }
    },
    "v1TerminateResourceResponse": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "region": {
          "type": "string"
        }
      },
      "title": "Response message for TerminateResource"
    },
    "v1UpdateAccountInvoiceServiceDiscountsResponse": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AccountServiceDiscounts"
          }
        }
      },
      "description": "Response message for the UpdateAccountInvoiceServiceDiscounts rpc."
    },
    "v1UpdateAlertDetailsResponse": {
      "type": "object",
      "properties": {
        "alertData": {
          "$ref": "#/definitions/coverAlertData"
        }
      },
      "title": "Response message for UpdateAlertDetails"
    },
    "v1UpdateBudgetResponse": {
      "type": "object",
      "properties": {
        "budgetData": {
          "$ref": "#/definitions/coverBudgetData"
        }
      }
    },
    "v1UpdateChannelDetailsResponse": {
      "type": "object",
      "properties": {
        "channelData": {
          "$ref": "#/definitions/coverChannelData"
        }
      },
      "title": "Response message for UpdateChannelDetails"
    },
    "v1UpdateCostFiltersResponse": {
      "type": "object",
      "properties": {
        "filterId": {
          "type": "string",
          "description": "Required. Filter Id."
        }
      },
      "description": "Response message for the UpdateCostFilters rpc."
    },
    "v1UpdateCostGroupColorThemeResponse": {
      "type": "object",
      "properties": {
        "colorTheme": {
          "type": "string"
        }
      },
      "title": "Response message for UpdateCostGroupColorTheme"
    },
    "v1UpdateCostGroupCombinationsResponse": {
      "type": "object",
      "properties": {
        "combinations": {
          "$ref": "#/definitions/coverCombinations"
        }
      },
      "title": "Response message for UpdateCostGroupCombinations"
    },
    "v1UpdateCostGroupDescriptionResponse": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        }
      },
      "title": "Response message for UpdateCostGroupDescription"
    },
    "v1UpdateCostGroupIconResponse": {
      "type": "object",
      "properties": {
        "icon": {
          "type": "string"
        }
      },
      "title": "Response message for UpdateCostGroupIcon"
    },
    "v1UpdateCostGroupImageResponse": {
      "type": "object",
      "properties": {
        "image": {
          "type": "string"
        }
      },
      "title": "Response message for UpdateCostGroupImage"
    },
    "v1UpdateCostGroupNameResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "title": "Response message for UpdateCostGroupName"
    },
    "v1UpdateMemberPermissionResponse": {
      "type": "object",
      "properties": {
        "userData": {
          "$ref": "#/definitions/coverUserData"
        }
      },
      "title": "Response message for UpdateMemberPermission"
    },
    "v1UpdateMetadataRequest": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "description": "Request message for the Organization.UpdateMetadata rpc."
    },
    "v1UpdatePasswordRequest": {
      "type": "object",
      "properties": {
        "oldPassword": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        }
      },
      "description": "Request message for the Organization.UpdatePassword rpc."
    },
    "v1UpdateSideMenuStateResponse": {
      "type": "object",
      "properties": {
        "viewId": {
          "type": "string"
        }
      },
      "title": "Response message for UpdateSideMenuState"
    },
    "v1UpdateUserAppThemeRequest": {
      "type": "object",
      "properties": {
        "appTheme": {
          "type": "string"
        }
      },
      "title": "Request message for UpdateUserAppTheme"
    },
    "v1UpdateUserAppThemeResponse": {
      "type": "object",
      "properties": {
        "userData": {
          "$ref": "#/definitions/coverUserData"
        }
      },
      "title": "Response message for UpdateUserAppTheme"
    },
    "v1UpdateUserAttributesRequest": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Request message for UpdateUserAttributes"
    },
    "v1UpdateUserAttributesResponse": {
      "type": "object",
      "properties": {
        "userData": {
          "$ref": "#/definitions/coverUserData"
        }
      },
      "title": "Response message for UpdateUserAttributes"
    },
    "v1UpdateUserAvatarRequest": {
      "type": "object",
      "properties": {
        "avatar": {
          "type": "string"
        }
      },
      "title": "Request message for UpdateUserAvatar"
    },
    "v1UpdateUserAvatarResponse": {
      "type": "object",
      "properties": {
        "userData": {
          "$ref": "#/definitions/coverUserData"
        }
      },
      "title": "Response message for UpdateUserAvatar"
    },
    "v1UpdateUserColorThemeRequest": {
      "type": "object",
      "properties": {
        "colorTheme": {
          "type": "string"
        }
      },
      "title": "Request message for UpdateUserColorTheme"
    },
    "v1UpdateUserColorThemeResponse": {
      "type": "object",
      "properties": {
        "userData": {
          "$ref": "#/definitions/coverUserData"
        }
      },
      "title": "Response message for UpdateUserColorTheme"
    },
    "v1UpdateUserEmailRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      },
      "title": "Request message for UpdateUserEmail"
    },
    "v1UpdateUserEmailResponse": {
      "type": "object",
      "properties": {
        "userData": {
          "$ref": "#/definitions/coverUserData"
        }
      },
      "title": "Response message for UpdateUserEmail"
    },
    "v1UpdateUserIconRequest": {
      "type": "object",
      "properties": {
        "icon": {
          "type": "string"
        }
      },
      "title": "Request message for UpdateUserIcon"
    },
    "v1UpdateUserIconResponse": {
      "type": "object",
      "properties": {
        "userData": {
          "$ref": "#/definitions/coverUserData"
        }
      },
      "title": "Response message for UpdateUserIcon"
    },
    "v1UpdateUserLocaleRequest": {
      "type": "object",
      "properties": {
        "locale": {
          "type": "string"
        }
      },
      "title": "Request message for UpdateUserLocale"
    },
    "v1UpdateUserLocaleResponse": {
      "type": "object",
      "properties": {
        "userData": {
          "$ref": "#/definitions/coverUserData"
        }
      },
      "title": "Response message for UpdateUserLocale"
    },
    "v1UpdateUserMainViewRequest": {
      "type": "object",
      "properties": {
        "viewId": {
          "type": "string"
        }
      },
      "title": "Request message for UpdateUserMainView"
    },
    "v1UpdateUserMainViewResponse": {
      "type": "object",
      "properties": {
        "userData": {
          "$ref": "#/definitions/coverUserData"
        }
      },
      "title": "Response message for UpdateUserMainView"
    },
    "v1UpdateUserNameRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "title": "Request message for UpdateUserName"
    },
    "v1UpdateUserNameResponse": {
      "type": "object",
      "properties": {
        "userData": {
          "$ref": "#/definitions/coverUserData"
        }
      },
      "title": "Response message for UpdateUserName"
    },
    "v1UpdateUserRoleMappingRequest": {
      "type": "object",
      "properties": {
        "subUser": {
          "type": "string",
          "description": "Optional. The subuser to map the roles. Defaults to caller if not set."
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MapRole"
          },
          "description": "Required. The roles to map to the user. Limited to 5 items. Setting `role` to empty will remove the mapping."
        }
      },
      "description": "Request message for the Iam.UpdateUserRoleMapping rpc."
    },
    "v1UpdateUserRoleMappingResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "failed": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Response message for the Iam.UpdateUserRoleMapping rpc."
    },
    "v1UpdateUserTimezoneRequest": {
      "type": "object",
      "properties": {
        "timezone": {
          "type": "string"
        }
      },
      "title": "Request message for UpdateUserTimezone"
    },
    "v1UpdateUserTimezoneResponse": {
      "type": "object",
      "properties": {
        "userData": {
          "$ref": "#/definitions/coverUserData"
        }
      },
      "title": "Response message for UpdateUserTimezone"
    },
    "v1UpdateViewColorThemeResponse": {
      "type": "object",
      "properties": {
        "viewData": {
          "$ref": "#/definitions/coverViewData"
        }
      },
      "title": "Response message for UpdateViewColorTheme"
    },
    "v1UpdateViewLayoutResponse": {
      "type": "object",
      "properties": {
        "layout": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/coverViewLayout"
          }
        }
      },
      "title": "Response message for UpdateViewLayout"
    },
    "v1UpdateViewResponse": {
      "type": "object",
      "properties": {
        "viewId": {
          "type": "string"
        }
      },
      "title": "Response message for UpdateView"
    },
    "v1UpdateViewWidgetResponse": {
      "type": "object",
      "properties": {
        "widgetId": {
          "type": "string"
        },
        "widgetData": {
          "$ref": "#/definitions/coverWidgetData"
        }
      },
      "title": "Response message for UpdateViewWidget"
    },
    "v1UploadChargeCodeRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "file name",
          "title": "Required. File name"
        },
        "type": {
          "type": "string",
          "description": "file type",
          "title": "Required. File type"
        },
        "file": {
          "type": "string",
          "format": "byte",
          "description": "file in bytes",
          "title": "Required. Convert file into bytes to transfer file"
        }
      },
      "title": "(WIP): Request message for Upload Charge Code"
    },
    "v1UploadChargeCodeResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "File name"
        },
        "status": {
          "$ref": "#/definitions/coverv1Status",
          "title": "Status"
        }
      },
      "title": "(WIP): Response message for Upload Charge Code"
    },
    "v1UsageCostsDrift": {
      "type": "object",
      "properties": {
        "billingInternalId": {
          "type": "string"
        },
        "billingGroupId": {
          "type": "string"
        },
        "account": {
          "type": "string"
        },
        "snapshot": {
          "type": "number",
          "format": "double",
          "description": "The total costs saved in your invoice."
        },
        "current": {
          "type": "number",
          "format": "double",
          "description": "The current total costs."
        },
        "diff": {
          "type": "number",
          "format": "double"
        }
      },
      "description": "Streaming response message for the Billing.ListUsageCostsDrift rpc."
    },
    "v1ValidateResetPasswordLinkAndChangePasswordRequest": {
      "type": "object",
      "properties": {
        "originalEncodedCode": {
          "type": "string"
        },
        "userInputEncodedCode": {
          "type": "string"
        }
      },
      "description": "Request for message Iam.ValidateVerificationCode rpc."
    },
    "v1ValidateResetPasswordLinkAndChangePasswordResponse": {
      "type": "object",
      "properties": {
        "isPasswordUpdated": {
          "type": "boolean"
        },
        "isResetPasswordLinkValid": {
          "type": "boolean"
        },
        "errorMessage": {
          "type": "string"
        }
      },
      "description": "Response for message Iam.ValidateVerificationCode rpc."
    },
    "v1VerifyUserForResetPasswordResponse": {
      "type": "object",
      "properties": {
        "doesUserExists": {
          "type": "boolean"
        }
      },
      "description": "Response message for Iam.VerifyUserForResetPassword rpc."
    },
    "waveAdjustment": {
      "type": "object",
      "properties": {
        "yearMonth": {
          "type": "string",
          "title": "Year month"
        },
        "feeType": {
          "type": "string",
          "title": "Fee type"
        },
        "description": {
          "type": "string",
          "title": "Description"
        },
        "productCode": {
          "type": "string",
          "title": "ProductCode"
        },
        "productName": {
          "type": "string",
          "title": "ProductName"
        },
        "usageAccountId": {
          "type": "string",
          "title": "UsageAccountId"
        },
        "currencyCode": {
          "type": "string",
          "title": "CurrencyCode"
        },
        "payerAccountId": {
          "type": "string",
          "title": "PayerAccountId"
        },
        "cost": {
          "type": "string",
          "title": "Cost"
        },
        "timeInterval": {
          "type": "string",
          "title": "TimeInterval"
        },
        "usageStartDate": {
          "type": "string",
          "title": "UsageStartDate"
        }
      },
      "description": "Adjustment resource definition."
    }
  }
}
